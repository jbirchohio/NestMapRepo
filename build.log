client/src/utils/logger.ts:107:13 - error TS2353: Object literal may only specify known properties, and 'event' does not exist in type 'LogContext'.

107             event,
                ~~~~~

client/src/utils/memoization.ts:68:12 - error TS2686: 'React' refers to a UMD global, but the current file is a module. Consider adding an import instead.

68     return React.memo(Component, areEqual);
              ~~~~~

client/src/utils/memoization.ts:68:18 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(Component: FunctionComponent<any>, propsAreEqual?: ((prevProps: Readonly<any>, nextProps: Readonly<any>) => boolean) | undefined): NamedExoticComponent<...>', gave the following error.
    Argument of type 'ComponentType<any>' is not assignable to parameter of type 'FunctionComponent<any>'.
      Type 'ComponentClass<any, any>' is not assignable to type 'FunctionComponent<any>'.
        Type 'ComponentClass<any, any>' provides no match for the signature '(props: any, deprecatedLegacyContext?: any): ReactNode'.
  Overload 2 of 2, '(Component: T, propsAreEqual?: ((prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean) | undefined): MemoExoticComponent<...>', gave the following error.
    Argument of type '((prevProps: ComponentProps<T>, nextProps: ComponentProps<T>) => boolean) | undefined' is not assignable to parameter of type '((prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean) | undefined'.
      Type '(prevProps: ComponentProps<T>, nextProps: ComponentProps<T>) => boolean' is not assignable to type '(prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean'.
        Types of parameters 'prevProps' and 'prevProps' are incompatible.
          Type 'Readonly<ComponentProps<T>>' is not assignable to type 'ComponentProps<T>'.

68     return React.memo(Component, areEqual);
                    ~~~~


client/src/utils/memoization.ts:77:17 - error TS2304: Cannot find name 'useRef'.

77     const ref = useRef<T>(value);
                   ~~~~~~

client/src/utils/memoization.ts:91:17 - error TS2304: Cannot find name 'useRef'.

91     const ref = useRef<{
                   ~~~~~~

client/src/utils/passwordValidator.ts:1:1 - error TS6133: 'handleError' is declared but its value is never read.

1 import { handleError } from './errorHandler.ts';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/passwordValidator.ts:1:29 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

1 import { handleError } from './errorHandler.ts';
                              ~~~~~~~~~~~~~~~~~~~

client/src/utils/passwordValidator.ts:51:17 - error TS6133: 'char' is declared but its value is never read.

51     for (const [char, count] of charCounts) {
                   ~~~~

client/src/utils/passwordValidator.ts:72:33 - error TS2532: Object is possibly 'undefined'.

72         const currentCharCode = chars[i].charCodeAt(0);
                                   ~~~~~~~~

client/src/utils/passwordValidator.ts:73:30 - error TS2532: Object is possibly 'undefined'.

73         const nextCharCode = chars[i + 1].charCodeAt(0);
                                ~~~~~~~~~~~~

client/src/utils/patternParser.ts:50:30 - error TS2532: Object is possibly 'undefined'.

50                 const name = match[pattern.nameGroup].trim();
                                ~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/patternParser.ts:51:37 - error TS2532: Object is possibly 'undefined'.

51                 const description = match[pattern.descriptionGroup].replace(/\s*-\s*/, '').trim();
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/performance.ts:10:12 - error TS2686: 'React' refers to a UMD global, but the current file is a module. Consider adding an import instead.

10     return React.memo(Component, propsAreEqual);
              ~~~~~

client/src/utils/performance.ts:10:18 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(Component: FunctionComponent<any>, propsAreEqual?: ((prevProps: Readonly<any>, nextProps: Readonly<any>) => boolean) | undefined): NamedExoticComponent<...>', gave the following error.
    Argument of type 'ComponentType<any>' is not assignable to parameter of type 'FunctionComponent<any>'.
      Type 'ComponentClass<any, any>' is not assignable to type 'FunctionComponent<any>'.
        Type 'ComponentClass<any, any>' provides no match for the signature '(props: any, deprecatedLegacyContext?: any): ReactNode'.
  Overload 2 of 2, '(Component: T, propsAreEqual?: ((prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean) | undefined): MemoExoticComponent<...>', gave the following error.
    Argument of type '((prevProps: ComponentProps<T>, nextProps: ComponentProps<T>) => boolean) | undefined' is not assignable to parameter of type '((prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean) | undefined'.
      Type '(prevProps: ComponentProps<T>, nextProps: ComponentProps<T>) => boolean' is not assignable to type '(prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean'.
        Types of parameters 'prevProps' and 'prevProps' are incompatible.
          Type 'Readonly<ComponentProps<T>>' is not assignable to type 'ComponentProps<T>'.

10     return React.memo(Component, propsAreEqual);
                    ~~~~


client/src/utils/performance.ts:43:12 - error TS2352: Conversion of type 'DebouncedFuncLeading<(...args: Parameters<T>) => any>' to type 'T' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  'DebouncedFuncLeading<(...args: Parameters<T>) => any>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint '(...args: any[]) => any'.

43     return useMemo(() => debounce((...args: Parameters<T>) => callbackRef.current(...args), delay, { leading: true, trailing: true }), [delay, ...dependencies]) as T;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/performance.ts:58:12 - error TS2352: Conversion of type 'DebouncedFuncLeading<(...args: Parameters<T>) => any>' to type 'T' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  'DebouncedFuncLeading<(...args: Parameters<T>) => any>' is assignable to the constraint of type 'T', but 'T' could be instantiated with a different subtype of constraint '(...args: any[]) => any'.

58     return useMemo(() => throttle((...args: Parameters<T>) => callbackRef.current(...args), limit, { leading: true, trailing: true }), [limit, ...dependencies]) as T;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/performanceMonitor.ts:2:29 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

2 import { ErrorLogger } from './errorLogger.ts';
                              ~~~~~~~~~~~~~~~~~~

client/src/utils/performanceMonitor.ts:3:33 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

3 import { SessionSecurity } from './sessionSecurity.ts';
                                  ~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/performanceMonitor.ts:4:30 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

4 import { SecureCookie } from './SecureCookie.ts';
                               ~~~~~~~~~~~~~~~~~~~

client/src/utils/performanceMonitor.ts:5:8 - error TS2613: Module '"C:/Users/Jonas/Desktop/NestMapRepo/client/src/services/api/apiClient"' has no default export. Did you mean to use 'import { apiClient } from "C:/Users/Jonas/Desktop/NestMapRepo/client/src/services/api/apiClient"' instead?

5 import apiClient from '../services/api/apiClient.ts';
         ~~~~~~~~~

client/src/utils/performanceMonitor.ts:5:23 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

5 import apiClient from '../services/api/apiClient.ts';
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/rateLimiter.ts:1:1 - error TS6133: 'handleError' is declared but its value is never read.

1 import { handleError } from './errorHandler.ts';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/rateLimiter.ts:1:29 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

1 import { handleError } from './errorHandler.ts';
                              ~~~~~~~~~~~~~~~~~~~

client/src/utils/routeUtils.ts:2:1 - error TS6133: 'useLocation' is declared but its value is never read.

2 import { useLocation } from 'react-router-dom';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/routeUtils.ts:3:30 - error TS2307: Cannot find module '@/config/routes' or its corresponding type declarations.

3 import { preloadRoute } from '@/config/routes';
                               ~~~~~~~~~~~~~~~~~

client/src/utils/SecureCookie.ts:30:9 - error TS2322: Type 'Record<string, string | undefined>' is not assignable to type 'Record<string, string>'.
  'string' index signatures are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.

30         return parse(cookies);
           ~~~~~~

client/src/utils/securityUtils.ts:1:1 - error TS6133: 'handleError' is declared but its value is never read.

1 import { handleError } from './errorHandler.ts';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:1:29 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

1 import { handleError } from './errorHandler.ts';
                              ~~~~~~~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:2:30 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

2 import { TokenManager } from './tokenManager.ts';
                               ~~~~~~~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:3:33 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

3 import { SessionSecurity } from './sessionSecurity.ts';
                                  ~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:4:82 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

4 import { SecurityContext, SecurityHeaders, SanitizedError, SessionDetails } from './types.ts';
                                                                                   ~~~~~~~~~~~~

client/src/utils/securityUtils.ts:5:47 - error TS6133: 'AccountLockoutError' is declared but its value is never read.

5 import { TokenError, CSRFError, SessionError, AccountLockoutError, ValidationError } from './errors.ts';
                                                ~~~~~~~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:5:68 - error TS6133: 'ValidationError' is declared but its value is never read.

5 import { TokenError, CSRFError, SessionError, AccountLockoutError, ValidationError } from './errors.ts';
                                                                     ~~~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:5:91 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

5 import { TokenError, CSRFError, SessionError, AccountLockoutError, ValidationError } from './errors.ts';
                                                                                            ~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:9:13 - error TS6133: 'securityContext' is declared but its value is never read.

9     private securityContext: SecurityContext;
              ~~~~~~~~~~~~~~~

client/src/utils/securityUtils.ts:101:23 - error TS6133: 'token' is declared but its value is never read.

101                 const token = config.headers.Authorization.replace('Bearer ', '');
                          ~~~~~

client/src/utils/sessionLockout.ts:1:30 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

1 import { SecureCookie } from './SecureCookie.ts';
                               ~~~~~~~~~~~~~~~~~~~

client/src/utils/sessionLockout.ts:2:33 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

2 import { SessionSecurity } from './sessionSecurity.ts';
                                  ~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/sessionLockout.ts:18:13 - error TS6133: 'sessionSecurity' is declared but its value is never read.

18     private sessionSecurity: SessionSecurity;
               ~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:1:30 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

1 import { TokenManager } from './tokenManager.ts';
                               ~~~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:2:30 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

2 import { SecureCookie } from './SecureCookie.ts';
                               ~~~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:3:43 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

3 import { handleError, SessionError } from './errorHandler.ts';
                                            ~~~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:4:11 - error TS6196: 'SessionState' is declared but never used.

4 interface SessionState {
            ~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:15:7 - error TS6133: 'MAX_SESSION_AGE' is declared but its value is never read.

15 const MAX_SESSION_AGE = 24 * 60 * 60 * 1000; // 24 hours
         ~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:49:34 - error TS2531: Object is possibly 'null'.

49                 this.sessionId = this.sessionState.sessionId;
                                    ~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:50:37 - error TS2531: Object is possibly 'null'.

50                 this.lastActivity = this.sessionState.lastActivity;
                                       ~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:51:31 - error TS2531: Object is possibly 'null'.

51                 this.userId = this.sessionState.userId;
                                 ~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:52:34 - error TS2531: Object is possibly 'null'.

52                 this.userAgent = this.sessionState.userAgent;
                                    ~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:53:27 - error TS2531: Object is possibly 'null'.

53                 this.ip = this.sessionState.ip;
                             ~~~~~~~~~~~~~~~~~

client/src/utils/sessionSecurity.ts:57:25 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.

57             handleError(error);
                           ~~~~~

client/src/utils/sessionSecurity.ts:144:29 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'Error'.

144                 handleError(error);
                                ~~~~~

client/src/utils/tokenUtils.ts:1:1 - error TS6133: 'SecureCookie' is declared but its value is never read.

1 import { SecureCookie } from './SecureCookie.ts';
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/utils/tokenUtils.ts:1:30 - error TS5097: An import path can only end with a '.ts' extension when 'allowImportingTsExtensions' is enabled.

1 import { SecureCookie } from './SecureCookie.ts';
                               ~~~~~~~~~~~~~~~~~~~

client/src/utils/tokenUtils.ts:26:45 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(data: string): string', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
      Type 'undefined' is not assignable to type 'string'.
  Overload 2 of 2, '(data: string): string', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
      Type 'undefined' is not assignable to type 'string'.

26             const decoded = JSON.parse(atob(token.split('.')[1]));
                                               ~~~~~~~~~~~~~~~~~~~


server/approvalEngine.ts:58:41 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "approval_rules"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "approval_rules"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'organizationId'?

58             .where(and(eq(approvalRules.organization_id, organizationId), eq(approvalRules.entityType, entityType), eq(approvalRules.active, true)))
                                           ~~~~~~~~~~~~~~~

server/approvalEngine.ts:98:24 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'number' is not assignable to parameter of type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; identity: undefined; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; identity: undefined; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; identity: undefined; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

98                 .where(eq(users.id, config.requesterId))
                          ~~


server/approvalEngine.ts:122:13 - error TS2769: No overload matches this call.
  Overload 2 of 2, '(values: { organizationId: string | SQL<unknown> | Placeholder<string, any>; requestType: SQL<unknown> | "other" | "create" | "modify" | "delete" | "approve" | Placeholder<string, any>; ... 17 more ...; rejectedAt?: Date | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'organizationId' does not exist in type '{ organizationId: string | SQL<unknown> | Placeholder<string, any>; requestType: SQL<unknown> | "other" | "create" | "modify" | "delete" | "approve" | Placeholder<string, any>; ... 17 more ...; rejectedAt?: Date | ... 3 more ... | undefined; }[]'.

122             organizationId: config.organization_id,
                ~~~~~~~~~~~~~~


server/approvalEngine.ts:138:13 - error TS2322: Type 'string' is not assignable to type 'number'.

138             requestId: request.id,
                ~~~~~~~~~

  server/approvalEngine.ts:16:5
    16     requestId?: number;
           ~~~~~~~~~
    The expected type comes from property 'requestId' which is declared here on type 'ApprovalResult'

server/approvalEngine.ts:139:13 - error TS2322: Type 'string' is not assignable to type 'number'.

139             assignedApproverId: approver?.id,
                ~~~~~~~~~~~~~~~~~~

  server/approvalEngine.ts:17:5
    17     assignedApproverId?: number;
           ~~~~~~~~~~~~~~~~~~
    The expected type comes from property 'assignedApproverId' which is declared here on type 'ApprovalResult'

server/approvalEngine.ts:151:33 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'organizationId'?

151             .where(and(eq(users.organization_id, organizationId), eq(users.role, approverRoles[0] || 'manager') // Use first role or default to manager
                                    ~~~~~~~~~~~~~~~

server/approvalEngine.ts:151:67 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "role"; tableName: "users"; dataType: "string"; columnType: "PgEnumColumn"; data: "super_admin" | "admin" | "manager" | "member" | "guest"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>, right: SQLWrapper | ... 4 more ... | "guest"): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'SQLWrapper | "super_admin" | "admin" | "manager" | "member" | "guest"'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "role"; tableName: "users"; dataType: "string"; columnType: "PgEnumColumn"; data: "super_admin" | "admin" | "manager" | "member" | "guest"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "role"; tableName: "users"; dataType: "string"; columnType: "PgEnumColumn"; data: "super_admin" | "admin" | "manager" | "member" | "guest"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "role"; tableName: "users"; dataType: "string"; columnType: "PgEnumColumn"; data: "super_admin" | "admin" | "manager" | "member" | "guest"; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

151             .where(and(eq(users.organization_id, organizationId), eq(users.role, approverRoles[0] || 'manager') // Use first role or default to manager
                                                                      ~~


server/approvalEngine.ts:187:24 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'number' is not assignable to parameter of type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; identity: undefined; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; identity: undefined; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; hasRuntimeDefault: false; enumValues: undefined; baseColumn: never; identity: undefined; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

187             .where(and(eq(users.id, userId), eq(users.organization_id, organizationId)));
                           ~~


server/approvalEngine.ts:187:55 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'organizationId'?

187             .where(and(eq(users.id, userId), eq(users.organization_id, organizationId)));
                                                          ~~~~~~~~~~~~~~~

server/approvalEngine.ts:201:44 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "approval_requests"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<....'. Did you mean 'organizationId'?

201             .where(and(eq(approvalRequests.organization_id, organizationId), eq(approvalRequests.status, 'pending')));
                                               ~~~~~~~~~~~~~~~

server/approvalEngine.ts:231:33 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'organizationId'?

231             .where(and(eq(users.organization_id, request.organization_id), eq(users.role, 'admin')))
                                    ~~~~~~~~~~~~~~~

server/billing.ts:65:20 - error TS18047: 'latestInvoice' is possibly 'null'.

65                 : (latestInvoice.payment_intent as Stripe.PaymentIntent | null);
                      ~~~~~~~~~~~~~

server/billing.ts:65:34 - error TS2339: Property 'payment_intent' does not exist on type 'Invoice'.

65                 : (latestInvoice.payment_intent as Stripe.PaymentIntent | null);
                                    ~~~~~~~~~~~~~~

server/billing.ts:112:53 - error TS2339: Property 'current_period_end' does not exist on type 'Subscription'.

112             currentPeriodEnd: new Date(subscription.current_period_end * 1000),
                                                        ~~~~~~~~~~~~~~~~~~

server/bookingEngine.ts:179:16 - error TS6133: 'params' is declared but its value is never read.

179     async book(params: any): Promise<BookingResult> {
                   ~~~~~~

server/bookingEngine.ts:182:18 - error TS6133: 'bookingId' is declared but its value is never read.

182     async cancel(bookingId: string): Promise<CancellationResult> {
                     ~~~~~~~~~

server/bookingEngine.ts:185:21 - error TS6133: 'bookingId' is declared but its value is never read.

185     async getStatus(bookingId: string): Promise<BookingStatus> {
                        ~~~~~~~~~

server/bookingEngine.ts:198:31 - error TS6133: 'amount' is declared but its value is never read.

198     async createPaymentIntent(amount: number, currency: string, metadata: Record<string, any>) {
                                  ~~~~~~

server/bookingEngine.ts:198:47 - error TS6133: 'currency' is declared but its value is never read.

198     async createPaymentIntent(amount: number, currency: string, metadata: Record<string, any>) {
                                                  ~~~~~~~~

server/bookingEngine.ts:198:65 - error TS6133: 'metadata' is declared but its value is never read.

198     async createPaymentIntent(amount: number, currency: string, metadata: Record<string, any>) {
                                                                    ~~~~~~~~

server/bookingEngine.ts:205:26 - error TS6133: 'paymentIntentId' is declared but its value is never read.

205     async confirmPayment(paymentIntentId: string) {
                             ~~~~~~~~~~~~~~~

server/calendar.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/calendar.ts:2:37 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

2 import type { Activity, Trip } from '@shared/schema';
                                      ~~~~~~~~~~~~~~~~

server/calendarSync.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/calendarSync.ts:2:37 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

2 import type { Activity, Trip } from '@shared/schema';
                                      ~~~~~~~~~~~~~~~~

server/carbonTracker.ts:3:11 - error TS2395: Individual declarations in merged declaration 'CarbonFootprint' must be all exported or all local.

3 interface CarbonFootprint {
            ~~~~~~~~~~~~~~~

server/carbonTracker.ts:226:18 - error TS2395: Individual declarations in merged declaration 'CarbonFootprint' must be all exported or all local.

226 export interface CarbonFootprint {
                     ~~~~~~~~~~~~~~~

server/carbonTracker.ts:261:34 - error TS2353: Object literal may only specify known properties, and 'ground' does not exist in type '{ flights: number; hotels: number; localTransport: number; activities: number; meals: number; }'.

261         breakdown: { flights: 0, ground: 0, accommodation: 0, activities: 0 },
                                     ~~~~~~

  server/carbonTracker.ts:5:5
    5     breakdown: {
          ~~~~~~~~~
    The expected type comes from property 'breakdown' which is declared here on type 'CarbonFootprint'

server/carbonTracker.ts:278:16 - error TS2339: Property 'esgCompliance' does not exist on type 'CarbonFootprint'.

278         carbon.esgCompliance.scope3 += emissions; // Business travel is Scope 3
                   ~~~~~~~~~~~~~

server/carbonTracker.ts:284:26 - error TS2339: Property 'accommodation' does not exist on type '{ flights: number; hotels: number; localTransport: number; activities: number; meals: number; }'.

284         carbon.breakdown.accommodation += emissions;
                             ~~~~~~~~~~~~~

server/carbonTracker.ts:285:16 - error TS2339: Property 'esgCompliance' does not exist on type 'CarbonFootprint'.

285         carbon.esgCompliance.scope2 += emissions; // Energy usage is Scope 2
                   ~~~~~~~~~~~~~

server/carbonTracker.ts:291:26 - error TS2339: Property 'ground' does not exist on type '{ flights: number; hotels: number; localTransport: number; activities: number; meals: number; }'.

291         carbon.breakdown.ground += emissions;
                             ~~~~~~

server/carbonTracker.ts:292:16 - error TS2339: Property 'esgCompliance' does not exist on type 'CarbonFootprint'.

292         carbon.esgCompliance.scope1 += emissions; // Direct transport is Scope 1
                   ~~~~~~~~~~~~~

server/carbonTracker.ts:299:16 - error TS2339: Property 'esgCompliance' does not exist on type 'CarbonFootprint'.

299         carbon.esgCompliance.scope3 += emissions;
                   ~~~~~~~~~~~~~

server/carbonTracker.ts:301:12 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

301     carbon.totalCO2kg = Object.values(carbon.breakdown).reduce((sum, val) => sum + val, 0);
               ~~~~~~~~~~

server/carbonTracker.ts:304:12 - error TS2339: Property 'metrics' does not exist on type 'CarbonFootprint'.

304     carbon.metrics.co2PerDay = carbon.totalCO2kg / Math.max(tripDays, 1);
               ~~~~~~~

server/carbonTracker.ts:304:39 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

304     carbon.metrics.co2PerDay = carbon.totalCO2kg / Math.max(tripDays, 1);
                                          ~~~~~~~~~~

server/carbonTracker.ts:305:12 - error TS2339: Property 'metrics' does not exist on type 'CarbonFootprint'.

305     carbon.metrics.offsetCost = carbon.totalCO2kg * 25; // $25 per ton average
               ~~~~~~~

server/carbonTracker.ts:305:40 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

305     carbon.metrics.offsetCost = carbon.totalCO2kg * 25; // $25 per ton average
                                           ~~~~~~~~~~

server/carbonTracker.ts:307:12 - error TS2339: Property 'esgCompliance' does not exist on type 'CarbonFootprint'.

307     carbon.esgCompliance.offsetPrograms = [
               ~~~~~~~~~~~~~

server/carbonTracker.ts:311:26 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

311             cost: carbon.totalCO2kg * 20,
                             ~~~~~~~~~~

server/carbonTracker.ts:317:26 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

317             cost: carbon.totalCO2kg * 15,
                             ~~~~~~~~~~

server/carbonTracker.ts:323:26 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

323             cost: carbon.totalCO2kg * 30,
                             ~~~~~~~~~~

server/carbonTracker.ts:328:5 - error TS2322: Type 'string[]' is not assignable to type 'CarbonReduction[]'.
  Type 'string' is not assignable to type 'CarbonReduction'.

328     carbon.recommendations = generateCarbonRecommendations(carbon, trip);
        ~~~~~~~~~~~~~~~~~~~~~~

server/carbonTracker.ts:330:12 - error TS2339: Property 'trends' does not exist on type 'CarbonFootprint'.

330     carbon.trends = await calculateCarbonTrends(carbon, organizationId, trip.user_id);
               ~~~~~~

server/carbonTracker.ts:393:10 - error TS2393: Duplicate function implementation.

393 function generateCarbonRecommendations(carbon: CarbonFootprint, trip: any): string[] {
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/carbonTracker.ts:393:65 - error TS6133: 'trip' is declared but its value is never read.

393 function generateCarbonRecommendations(carbon: CarbonFootprint, trip: any): string[] {
                                                                    ~~~~

server/carbonTracker.ts:395:43 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

395     if (carbon.breakdown.flights > carbon.totalCO2kg * 0.7) {
                                              ~~~~~~~~~~

server/carbonTracker.ts:400:26 - error TS2339: Property 'ground' does not exist on type '{ flights: number; hotels: number; localTransport: number; activities: number; meals: number; }'.

400     if (carbon.breakdown.ground > carbon.totalCO2kg * 0.3) {
                             ~~~~~~

server/carbonTracker.ts:400:42 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

400     if (carbon.breakdown.ground > carbon.totalCO2kg * 0.3) {
                                             ~~~~~~~~~~

server/carbonTracker.ts:404:26 - error TS2339: Property 'accommodation' does not exist on type '{ flights: number; hotels: number; localTransport: number; activities: number; meals: number; }'.

404     if (carbon.breakdown.accommodation > carbon.totalCO2kg * 0.2) {
                             ~~~~~~~~~~~~~

server/carbonTracker.ts:404:49 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

404     if (carbon.breakdown.accommodation > carbon.totalCO2kg * 0.2) {
                                                    ~~~~~~~~~~

server/carbonTracker.ts:408:16 - error TS2339: Property 'totalCO2kg' does not exist on type 'CarbonFootprint'.

408     if (carbon.totalCO2kg > 500) {
                   ~~~~~~~~~~

server/carbonTracker.ts:414:38 - error TS6133: 'currentCarbon' is declared but its value is never read.

414 async function calculateCarbonTrends(currentCarbon: CarbonFootprint, organizationId: number, userId: number): Promise<CarbonFootprint['trends']> {
                                         ~~~~~~~~~~~~~

server/carbonTracker.ts:414:70 - error TS6133: 'organizationId' is declared but its value is never read.

414 async function calculateCarbonTrends(currentCarbon: CarbonFootprint, organizationId: number, userId: number): Promise<CarbonFootprint['trends']> {
                                                                         ~~~~~~~~~~~~~~

server/carbonTracker.ts:414:94 - error TS6133: 'userId' is declared but its value is never read.

414 async function calculateCarbonTrends(currentCarbon: CarbonFootprint, organizationId: number, userId: number): Promise<CarbonFootprint['trends']> {
                                                                                                 ~~~~~~

server/carbonTracker.ts:414:135 - error TS2339: Property 'trends' does not exist on type 'CarbonFootprint'.

414 async function calculateCarbonTrends(currentCarbon: CarbonFootprint, organizationId: number, userId: number): Promise<CarbonFootprint['trends']> {
                                                                                                                                          ~~~~~~~~

server/carbonTracker.ts:451:41 - error TS6133: 'organizationId' is declared but its value is never read.

451 export async function generateESGReport(organizationId: number, period: string): Promise<ESGReport> {
                                            ~~~~~~~~~~~~~~

server/carbonTracker.ts:525:10 - error TS2393: Duplicate function implementation.

525 function generateCarbonRecommendations(): CarbonReduction[] {
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/carbonTracker.ts:592:35 - error TS2571: Object is of type 'unknown'.

592     const totalBudget = budget || Object.values(breakdown).reduce((sum, val) => sum + val, 0) * 1.2;
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/carbonTracker.ts:592:81 - error TS18046: 'sum' is of type 'unknown'.

592     const totalBudget = budget || Object.values(breakdown).reduce((sum, val) => sum + val, 0) * 1.2;
                                                                                    ~~~

server/carbonTracker.ts:592:87 - error TS18046: 'val' is of type 'unknown'.

592     const totalBudget = budget || Object.values(breakdown).reduce((sum, val) => sum + val, 0) * 1.2;
                                                                                          ~~~

server/carbonTracker.ts:595:26 - error TS18046: 'actual' is of type 'unknown'.

595         const variance = actual - budgeted;
                             ~~~~~~

server/carbonTracker.ts:599:32 - error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'number'.

599             actual: Math.round(actual),
                                   ~~~~~~

server/controllers/pdf.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/controllers/pdf.ts:18:36 - error TS2554: Expected 2 arguments, but got 1.

18         const trip = await storage.getTrip(tripId);
                                      ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/controllers/pdf.ts:28:64 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

28         const activities = await storage.getActivitiesByTripId(tripId);
                                                                  ~~~~~~

server/controllers/pdf.ts:63:36 - error TS2554: Expected 2 arguments, but got 1.

63         const trip = await storage.getTrip(tripId);
                                      ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/controllers/pdf.ts:73:64 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

73         const activities = await storage.getActivitiesByTripId(tripId);
                                                                  ~~~~~~

server/controllers/trips.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/dal/base.dal.ts:3:27 - error TS2307: Cannot find module '../services/database.service' or its corresponding type declarations.

3 import { dbService } from '../services/database.service';
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/dal/user.dal.ts:1:27 - error TS2307: Cannot find module '../services/database.service' or its corresponding type declarations.

1 import { dbService } from '../services/database.service';
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/dal/user.dal.ts:2:23 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

2 import { users } from '@shared/schema';
                        ~~~~~~~~~~~~~~~~

server/dal/user.dal.ts:3:30 - error TS2307: Cannot find module './base.dal' or its corresponding type declarations.

3 import type { BaseDAL } from './base.dal';
                               ~~~~~~~~~~~~

server/dal/user.dal.ts:19:30 - error TS1361: 'BaseDAL' cannot be used as a value because it was imported using 'import type'.

19 export class UserDAL extends BaseDAL<User> {
                                ~~~~~~~

  server/dal/user.dal.ts:3:15
    3 import type { BaseDAL } from './base.dal';
                    ~~~~~~~
    'BaseDAL' was imported here.

server/dal/user.dal.ts:36:21 - error TS2339: Property 'findOne' does not exist on type 'UserDAL'.

36         return this.findOne({ email });
                       ~~~~~~~

server/dal/user.dal.ts:42:21 - error TS2339: Property 'findAll' does not exist on type 'UserDAL'.

42         return this.findAll({
                       ~~~~~~~

server/dal/user.dal.ts:62:20 - error TS2339: Property 'invalidateCache' does not exist on type 'UserDAL'.

62         await this.invalidateCache(`*:${userId}:*`);
                      ~~~~~~~~~~~~~~~

server/dal/user.dal.ts:77:20 - error TS2339: Property 'invalidateCache' does not exist on type 'UserDAL'.

77         await this.invalidateCache(`*:${userId}:*`);
                      ~~~~~~~~~~~~~~~

server/db-connection.ts:4:25 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

4 import * as schema from "@shared/schema";
                          ~~~~~~~~~~~~~~~~

server/db-connection.ts:17:18 - error TS1361: 'Pool' cannot be used as a value because it was imported using 'import type'.

17 const pool = new Pool({
                    ~~~~

  server/db-connection.ts:3:15
    3 import type { Pool } from 'pg';
                    ~~~~
    'Pool' was imported here.

server/db.ts:4:25 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

4 import * as schema from "@shared/schema";
                          ~~~~~~~~~~~~~~~~

server/db.ts:5:35 - error TS6059: File 'C:/Users/Jonas/Desktop/NestMapRepo/shared/superadmin-schema.ts' is not under 'rootDir' 'C:/Users/Jonas/Desktop/NestMapRepo/server'. 'rootDir' is expected to contain all source files.
  File is ECMAScript module because 'C:/Users/Jonas/Desktop/NestMapRepo/shared/package.json' has field "type" with value "module"

5 import * as superadminSchema from "../shared/superadmin-schema.js";
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/db.ts:5:35 - error TS6307: File 'C:/Users/Jonas/Desktop/NestMapRepo/shared/superadmin-schema.ts' is not listed within the file list of project 'C:/Users/Jonas/Desktop/NestMapRepo/server/tsconfig.json'. Projects must list all files or use an 'include' pattern.
  File is ECMAScript module because 'C:/Users/Jonas/Desktop/NestMapRepo/shared/package.json' has field "type" with value "module"

5 import * as superadminSchema from "../shared/superadmin-schema.js";
                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/db/invoiceSchema.ts:6:34 - error TS2307: Cannot find module '@shared/types/invoice' or its corresponding type declarations.

6 import type { InvoiceItem } from '@shared/types/invoice';
                                   ~~~~~~~~~~~~~~~~~~~~~~~

server/demoAnalytics.ts:5:47 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

5         return await getOrganizationAnalytics(organizationId);
                                                ~~~~~~~~~~~~~~

server/domainVerification.ts:80:38 - error TS2339: Property 'getPeerCertificate' does not exist on type 'Socket'.

80             const cert = res.socket?.getPeerCertificate?.();
                                        ~~~~~~~~~~~~~~~~~~

server/duffelProvider.ts:224:22 - error TS6133: 'params' is declared but its value is never read.

224     async searchCars(params: {
                         ~~~~~~

server/emailService.ts:2:40 - error TS2307: Cannot find module '../branding.js' or its corresponding type declarations.

2 import type { getBrandingConfig } from '../branding.js';
                                         ~~~~~~~~~~~~~~~~

server/emailService.ts:6:23 - error TS1361: 'MailService' cannot be used as a value because it was imported using 'import type'.

6     mailService = new MailService();
                        ~~~~~~~~~~~

  server/emailService.ts:1:15
    1 import type { MailService } from '@sendgrid/mail';
                    ~~~~~~~~~~~
    'MailService' was imported here.

server/emailService.ts:45:19 - error TS2304: Cannot find name 'generateNotificationHTML'.

45             html: generateNotificationHTML(params),
                     ~~~~~~~~~~~~~~~~~~~~~~~~

server/health.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/health.ts:7:35 - error TS6133: 'req' is declared but its value is never read.

7 export async function healthCheck(req: Request, res: Response) {
                                    ~~~

server/loadBalancer.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/loadBalancer.ts:3:66 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { customDomains, organizations, whiteLabelSettings } from '@shared/schema';
                                                                   ~~~~~~~~~~~~~~~~

server/middleware/comprehensive-rate-limiting.ts:14:58 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

14 import express, { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/middleware/organizationRoleMiddleware.ts:22:64 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

22             const permissions = await getUserPermissionsByRole(userId, userRole, organizationId);
                                                                  ~~~~~~

server/middleware/organizationRoleMiddleware.ts:23:29 - error TS7015: Element implicitly has an 'any' type because index expression is not of type 'number'.

23             if (permissions[permission] === true) {
                               ~~~~~~~~~~

server/middleware/organizationScoping.ts:146:27 - error TS2339: Property 'organizationId' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

146             if (!req.user.organizationId) {
                              ~~~~~~~~~~~~~~

server/middleware/organizationScoping.ts:152:43 - error TS2339: Property 'organizationId' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

152             req.organizationId = req.user.organizationId;
                                              ~~~~~~~~~~~~~~

server/middleware/organizationScoping.ts:156:9 - error TS2322: Type '(orgId: string | null) => boolean' is not assignable to type '((orgId: string | null | undefined) => boolean) & ((orgId: string | null) => boolean) & ((orgId: string | null) => boolean)'.
  Type '(orgId: string | null) => boolean' is not assignable to type '(orgId: string | null | undefined) => boolean'.
    Types of parameters 'orgId' and 'orgId' are incompatible.
      Type 'string | null | undefined' is not assignable to type 'string | null'.
        Type 'undefined' is not assignable to type 'string | null'.

156         req.organizationFilter = (orgId: string | null) => {
            ~~~~~~~~~~~~~~~~~~~~~~

server/middleware/organizationScoping.ts:162:9 - error TS2322: Type '{ organizationId: string; isWhiteLabelDomain: boolean; domainOrganizationId: string | undefined; canAccessOrganization: (orgId: string | null) => boolean; requireSameOrganization: (orgId: string | null) => boolean; }' is not assignable to type '{ id: string | null; canAccessOrganization: (orgId: string | null) => boolean; enforceOrganizationAccess: (orgId: string | null) => void; } & OrganizationContext'.
  Type '{ organizationId: string; isWhiteLabelDomain: boolean; domainOrganizationId: string | undefined; canAccessOrganization: (orgId: string | null) => boolean; requireSameOrganization: (orgId: string | null) => boolean; }' is missing the following properties from type '{ id: string | null; canAccessOrganization: (orgId: string | null) => boolean; enforceOrganizationAccess: (orgId: string | null) => void; }': id, enforceOrganizationAccess

162         req.organizationContext = {
            ~~~~~~~~~~~~~~~~~~~~~~~

server/middleware/organizationScoping.ts:183:30 - error TS2339: Property 'id' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

183             userId: req.user.id,
                                 ~~

server/middleware/organizationScoping.ts:205:30 - error TS2339: Property 'id' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

205             userId: req.user.id,
                                 ~~

server/middleware/organizationScoping.ts:273:41 - error TS2339: Property 'role' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

273     const hasAnalyticsAccess = req.user.role === UserRole.ADMIN ||
                                            ~~~~

server/middleware/organizationScoping.ts:274:18 - error TS2339: Property 'role' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

274         req.user.role === UserRole.SUPER_ADMIN ||
                     ~~~~

server/middleware/organizationScoping.ts:275:33 - error TS2339: Property 'permissions' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

275         (Array.isArray(req.user.permissions) && req.user.permissions.includes('ACCESS_ANALYTICS'));
                                    ~~~~~~~~~~~

server/middleware/organizationScoping.ts:275:58 - error TS2339: Property 'permissions' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

275         (Array.isArray(req.user.permissions) && req.user.permissions.includes('ACCESS_ANALYTICS'));
                                                             ~~~~~~~~~~~

server/middleware/organizationScoping.ts:278:30 - error TS2339: Property 'id' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

278             userId: req.user.id,
                                 ~~

server/middleware/organizationScoping.ts:280:28 - error TS2339: Property 'role' does not exist on type 'never'.
  The intersection 'User & AuthUser' was reduced to 'never' because property 'role' has conflicting types in some constituents.

280             role: req.user.role,
                               ~~~~

server/middleware/secureAuth.ts:23:15 - error TS2460: Module '"../types/jwt.js"' declares 'TokenPayload' locally, but it is exported as 'TokenType'.

23 import type { TokenPayload } from '../types/jwt.js';
                 ~~~~~~~~~~~~

  server/types/jwt.d.ts:7:3
    7   TokenPayload
        ~~~~~~~~~~~~
    'TokenPayload' is declared here.

server/middleware/secureAuth.ts:58:5 - error TS2739: Type '{ id: any; userId: any; email: any; role: any; organizationId: any; displayName: any; jti: any; iat: any; exp: any; permissions: never[]; }' is missing the following properties from type 'User': hasRole, hasPermission, isInOrganization

58     return {
       ~~~~~~

server/middleware/secureAuth.ts:98:9 - error TS2322: Type 'User' is not assignable to type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.
  Types of property 'organizationId' are incompatible.
    Type 'string | null' is not assignable to type 'string'.
      Type 'null' is not assignable to type 'string'.

98         req.user = toUser(result.payload as TokenPayload);
           ~~~~~~~~

server/middleware/secureAuth.ts:137:9 - error TS2322: Type 'User' is not assignable to type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.
  Types of property 'organizationId' are incompatible.
    Type 'string | null' is not assignable to type 'string'.
      Type 'null' is not assignable to type 'string'.

137         req.user = toUser(result.payload as TokenPayload);
            ~~~~~~~~

server/middleware/security.ts:1:100 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import { type Request as ExpressRequest, type Response, type NextFunction, type Application } from '../../express-augmentations.ts';
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/middleware/subscription-limits.ts:55:11 - error TS2430: Interface 'AuthenticatedRequest' incorrectly extends interface 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of property 'user' are incompatible.
    Type 'JwtUser | undefined' is not assignable to type '{ id: string; email: string; organizationId: string; role?: string | undefined; } | null | undefined'.
      Type 'JwtUser' is not assignable to type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.
        Types of property 'organizationId' are incompatible.
          Type 'string | null' is not assignable to type 'string'.
            Type 'null' is not assignable to type 'string'.

55 interface AuthenticatedRequest extends Request {
             ~~~~~~~~~~~~~~~~~~~~

server/middleware/superadmin.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/middleware/superadmin.ts:57:37 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../db.js'?

57         const { db } = await import('../db');
                                       ~~~~~~~

server/middleware/superadmin.ts:58:54 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../db/superadminSchema.js'?

58         const { superadminAuditLogs } = await import('../db/superadminSchema');
                                                        ~~~~~~~~~~~~~~~~~~~~~~~~

server/notificationService.ts:1:10 - error TS2305: Module '"emailService.js"' has no exported member 'sendEmail'.

1 import { sendEmail } from 'emailService.js';
           ~~~~~~~~~

server/organizationContext.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/organizationContext.ts:22:7 - error TS2687: All declarations of 'organizationId' must have identical modifiers.

22       organizationId?: string | null;
         ~~~~~~~~~~~~~~

server/organizationContext.ts:28:7 - error TS2687: All declarations of 'organizationFilter' must have identical modifiers.

28       organizationFilter?: (orgId: string | null | undefined) => boolean;
         ~~~~~~~~~~~~~~~~~~

server/organizationContext.ts:47:61 - error TS6133: 'res' is declared but its value is never read.

47 export function organizationContextMiddleware(req: Request, res: Response, next: NextFunction) {
                                                               ~~~

server/organizationContext.ts:145:36 - error TS2554: Expected 2 arguments, but got 1.

145         const trip = await storage.getTrip(tripId);
                                       ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/pdfExport.ts:861:16 - error TS1361: 'Buffer' cannot be used as a value because it was imported using 'import type'.

861         return Buffer.from(pdf);
                   ~~~~~~

  server/pdfExport.ts:3:15
    3 import type { Buffer } from 'buffer';
                    ~~~~~~
    'Buffer' was imported here.

server/pdfExport.ts:945:16 - error TS1361: 'Buffer' cannot be used as a value because it was imported using 'import type'.

945         return Buffer.from(pdf);
                   ~~~~~~

  server/pdfExport.ts:3:15
    3 import type { Buffer } from 'buffer';
                    ~~~~~~
    'Buffer' was imported here.

server/pdfExport.ts:1005:16 - error TS1361: 'Buffer' cannot be used as a value because it was imported using 'import type'.

1005         return Buffer.from(pdf);
                    ~~~~~~

  server/pdfExport.ts:3:15
    3 import type { Buffer } from 'buffer';
                    ~~~~~~
    'Buffer' was imported here.

server/predictiveAI.ts:171:13 - error TS2322: Type 'WeatherData[]' is not assignable to type '{ date: string; condition: string; temperature: number; precipitation: number; recommendations: string[]; }[]'.
  Type 'WeatherData' is missing the following properties from type '{ date: string; condition: string; temperature: number; precipitation: number; recommendations: string[]; }': precipitation, recommendations

171             weatherForecast: weatherForecast,
                ~~~~~~~~~~~~~~~

  server/predictiveAI.ts:43:5
    43     weatherForecast: {
           ~~~~~~~~~~~~~~~
    The expected type comes from property 'weatherForecast' which is declared here on type 'WeatherAdaptation'

server/proposalGenerator.ts:2:37 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

2 import type { Trip, Activity } from '@shared/schema';
                                      ~~~~~~~~~~~~~~~~

server/rbac.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/rbac.ts:3:49 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { users, tripCollaborators, trips } from '@shared/schema';
                                                  ~~~~~~~~~~~~~~~~

server/rbac.ts:5:70 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

5 import { USER_ROLES, TRIP_ROLES, type UserRole, type TripRole } from '@shared/schema';
                                                                       ~~~~~~~~~~~~~~~~

server/rbac.ts:85:37 - error TS2345: Argument of type 'string' is not assignable to parameter of type '"manage_users" | "manage_organizations" | "view_analytics" | "export_data"'.

85     return userPermissions.includes(permission);
                                       ~~~~~~~~~~

server/rbac.ts:90:37 - error TS2345: Argument of type 'string' is not assignable to parameter of type '"view_trip" | "edit_trip" | "delete_trip" | "manage_collaborators" | "add_activities" | "edit_activities" | "delete_activities" | "add_notes" | "edit_notes" | "export_trip"'.

90     return rolePermissions.includes(permission);
                                       ~~~~~~~~~~

server/routes/activities.ts:7:61 - error TS2307: Cannot find module '@shared/types/activity' or its corresponding type declarations.

7 import type { Activity, ActivityType, ActivityStatus } from '@shared/types/activity';
                                                              ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/activities.ts:47:7 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'User | undefined', but here has type 'AuthenticatedUser | undefined'.

47       user?: AuthenticatedUser;
         ~~~~

  server/types/jwt.d.ts:23:7
    23       user?: User;
             ~~~~
    'user' was also declared here.

server/routes/activities.ts:152:11 - error TS2451: Cannot redeclare block-scoped variable 'result'.

152     const result = tripIdParamSchema.safeParse({ tripId: req.params.tripId });
              ~~~~~~

server/routes/activities.ts:159:15 - error TS2451: Cannot redeclare block-scoped variable 'result'.

159         const result = tripIdParamSchema.safeParse({ tripId: req.params.tripId });
                  ~~~~~~

server/routes/activities.ts:163:32 - error TS2339: Property 'error' does not exist on type 'never'.

163                 errors: result.error.errors,
                                   ~~~~~

server/routes/activities.ts:178:13 - error TS2345: Argument of type 'string | number' is not assignable to parameter of type 'string'.
  Type 'number' is not assignable to type 'string'.

178             userId,
                ~~~~~~

server/routes/activities.ts:248:55 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number'.

248           startDate: result.data.startDate ? new Date(result.data.startDate).toISOString() : now.toISOString(),
                                                          ~~~~~~~~~~~~~~~~~~~~~


server/routes/activities.ts:251:11 - error TS2698: Spread types may only be created from object types.

251           ...(result.data.description && { description: result.data.description }),
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/activities.ts:252:11 - error TS2698: Spread types may only be created from object types.

252           ...(result.data.endDate && { endDate: new Date(result.data.endDate).toISOString() }),
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/activities.ts:252:58 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type '{}' is not assignable to parameter of type 'string | number'.

252           ...(result.data.endDate && { endDate: new Date(result.data.endDate).toISOString() }),
                                                             ~~~~~~~~~~~~~~~~~~~


server/routes/activities.ts:253:11 - error TS2698: Spread types may only be created from object types.

253           ...(result.data.locationName && { locationName: result.data.locationName }),
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/activities.ts:254:11 - error TS2698: Spread types may only be created from object types.

254           ...(result.data.location && { location: result.data.location }),
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/activities.ts:257:11 - error TS2698: Spread types may only be created from object types.

257           ...(result.data.notes && { notes: result.data.notes }),
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/activities.ts:269:55 - error TS2345: Argument of type 'Omit<Activity, "id">' is not assignable to parameter of type 'Omit<{ createdAt: Date; updatedAt: Date; id: string; organizationId: string | null; date: Date; title: string; completed: boolean | null; tripId: string; time: string | null; ... 7 more ...; travelMode: string | null; }, "createdAt" | ... 1 more ... | "id">'.
  Type 'Omit<Activity, "id">' is missing the following properties from type 'Omit<{ createdAt: Date; updatedAt: Date; id: string; organizationId: string | null; date: Date; title: string; completed: boolean | null; tripId: string; time: string | null; ... 7 more ...; travelMode: string | null; }, "createdAt" | ... 1 more ... | "id">': organizationId, date, title, completed, and 10 more.

269         const activity = await activityService.create(activityData);
                                                          ~~~~~~~~~~~~

server/routes/activities.ts:303:41 - error TS2304: Cannot find name 'UpdateActivityBody'.

303 router.put<{ activityId: string }, any, UpdateActivityBody>(
                                            ~~~~~~~~~~~~~~~~~~

server/routes/activities.ts:305:46 - error TS2304: Cannot find name 'UpdateActivityBody'.

305   createHandler<{ activityId: string }, any, UpdateActivityBody>(
                                                 ~~~~~~~~~~~~~~~~~~

server/routes/admin.ts:1:78 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router, Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin.ts:2:57 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

2 import { RequestHandler as ExpressRequestHandler } from '../../express-augmentations.ts';
                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin.ts:11:10 - error TS2305: Module '"../middleware/validation.ts"' has no exported member 'validateAndSanitizeRequest'.

11 import { validateAndSanitizeRequest } from '../middleware/validation.ts';
            ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/admin.ts:13:62 - error TS2307: Cannot find module '../types/auth.ts' or its corresponding type declarations.

13 import type { AuthenticatedRequest, AuthenticatedUser } from '../types/auth.ts';
                                                                ~~~~~~~~~~~~~~~~~~

server/routes/admin.ts:139:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

139 const router = Router();
                   ~~~~~~

  server/routes/admin.ts:1:15
    1 import type { Router, Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/admin.ts:142:24 - error TS2345: Argument of type '"super_admin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

142 router.use(requireRole('super_admin'));
                           ~~~~~~~~~~~~~

server/routes/admin.ts:153:55 - error TS2345: Argument of type '"admin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

153 router.get('/organizations', validateJWT, requireRole('admin'), async (req: Request, res: Response) => {
                                                          ~~~~~~~

server/routes/admin.ts:182:62 - error TS2345: Argument of type '"admin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

182 router.get('/organizations/:orgId', validateJWT, requireRole('admin'), validateAndSanitizeRequest({ params: orgIdParamSchema }), async (req: Request, res: Response) => {
                                                                 ~~~~~~~

server/routes/admin.ts:216:62 - error TS2345: Argument of type '"admin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

216 router.put('/organizations/:orgId', validateJWT, requireRole('admin'), validateAndSanitizeRequest({
                                                                 ~~~~~~~

server/routes/admin.ts:278:75 - error TS2345: Argument of type '"admin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

278 router.patch('/white-label/requests/:requestId', validateJWT, requireRole('admin'), validateAndSanitizeRequest({
                                                                              ~~~~~~~

server/routes/admin.ts:346:55 - error TS2345: Argument of type '"admin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

346 router.get('/activity-logs', validateJWT, requireRole('admin'), async (req: Request, res: Response) => {
                                                          ~~~~~~~

server/routes/ai.ts:6:27 - error TS2307: Cannot find module '@shared/types/auth' or its corresponding type declarations.

6 import type { User } from '@shared/types/auth';
                            ~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:245:7 - error TS2451: Cannot redeclare block-scoped variable 'disasterMonitorSchema'.

245 const disasterMonitorSchema = z.object({
          ~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:257:7 - error TS2451: Cannot redeclare block-scoped variable 'groupPreferenceSchema'.

257 const groupPreferenceSchema = z.object({
          ~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:263:7 - error TS2451: Cannot redeclare block-scoped variable 'groupItinerarySchema'.

263 const groupItinerarySchema = z.object({
          ~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:329:3 - error TS6133: 'next' is declared but its value is never read.

329   next: NextFunction
      ~~~~

server/routes/ai.ts:479:112 - error TS6133: 'next' is declared but its value is never read.

479     async (req: AuthenticatedRequest & { body: BudgetForecastRequest }, res: Response<BudgetForecastResponse>, next: NextFunction) => {
                                                                                                                   ~~~~

server/routes/ai.ts:571:5 - error TS2345: Argument of type '(req: AuthenticatedRequest & { body: any; }, res: Response<AccommodationSuggestionResponse>, next: NextFunction) => Promise<Response<AccommodationSuggestionResponse, Record<...>> | undefined>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>> & { [key: string]: unknown; user: { id: string; email: string; organizationId: string; role: UserRole; permissions?: string[] | undefined; }; organizationId?: string | undefined; organizationContext?: { ...; } | undefined; } & { ...; }, res: Re...'.
  Type 'Promise<Response<AccommodationSuggestionResponse, Record<string, any>> | undefined>' is not assignable to type 'void | Promise<void>'.
    Type 'Promise<Response<AccommodationSuggestionResponse, Record<string, any>> | undefined>' is not assignable to type 'Promise<void>'.
      Type 'Response<AccommodationSuggestionResponse, Record<string, any>> | undefined' is not assignable to type 'void'.
        Type 'Response<AccommodationSuggestionResponse, Record<string, any>>' is not assignable to type 'void'.

571     async (req: AuthenticatedRequest & { body: any }, res: Response<AccommodationSuggestionResponse>, next: NextFunction) => {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:571:103 - error TS6133: 'next' is declared but its value is never read.

571     async (req: AuthenticatedRequest & { body: any }, res: Response<AccommodationSuggestionResponse>, next: NextFunction) => {
                                                                                                          ~~~~

server/routes/ai.ts:727:3 - error TS2769: No overload matches this call.
  Overload 1 of 5, '(path: PathParams, ...handlers: RequestHandler<{ city: string; interests: string[]; duration: number; }, any, any, ParsedQs, Record<string, any>>[]): Router', gave the following error.
    Argument of type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to parameter of type 'RequestHandler<{ city: string; interests: string[]; duration: number; }, any, any, ParsedQs, Record<string, any>>'.
      Types of parameters 'req' and 'req' are incompatible.
        Type 'Request<{ city: string; interests: string[]; duration: number; }, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
          Type '{ city: string; interests: string[]; duration: number; }' is not assignable to type 'ParamsDictionary'.
            Property 'interests' is incompatible with index signature.
              Type 'string[]' is not assignable to type 'string'.
  Overload 2 of 5, '(path: PathParams, ...handlers: RequestHandlerParams<{ city: string; interests: string[]; duration: number; }, any, any, ParsedQs, Record<string, any>>[]): Router', gave the following error.
    Argument of type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<{ city: string; interests: string[]; duration: number; }, any, any, ParsedQs, Record<string, any>>'.
      Type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'RequestHandler<{ city: string; interests: string[]; duration: number; }, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<{ city: string; interests: string[]; duration: number; }, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
            Type '{ city: string; interests: string[]; duration: number; }' is not assignable to type 'ParamsDictionary'.
              Property 'interests' is incompatible with index signature.
                Type 'string[]' is not assignable to type 'string'.

727   ...createAuthenticatedRouteHandler<{ city: string; interests: string[]; duration: number }, any>(
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
728     async (req, res, next) => {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
...
804     }
    ~~~~~
805 ));
    ~


server/routes/ai.ts:728:5 - error TS2345: Argument of type '(req: import("C:/Users/Jonas/Desktop/NestMapRepo/node_modules/@types/express/index").Request<import("C:/Users/Jonas/Desktop/NestMapRepo/node_modules/@types/express-serve-static-core/index").ParamsDictionary, any, any, qs.ParsedQs, Record<string, any>> & { ...; } & { ...; }, res: import("C:/Users/Jonas/Desktop/NestMa...' is not assignable to parameter of type '(req: import("C:/Users/Jonas/Desktop/NestMapRepo/node_modules/@types/express/index").Request<import("C:/Users/Jonas/Desktop/NestMapRepo/node_modules/@types/express-serve-static-core/index").ParamsDictionary, any, any, qs.ParsedQs, Record<string, any>> & { ...; } & { ...; }, res: import("C:/Users/Jonas/Desktop/NestMa...'.
  Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
    Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
      Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

728     async (req, res, next) => {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:728:22 - error TS6133: 'next' is declared but its value is never read.

728     async (req, res, next) => {
                         ~~~~

server/routes/ai.ts:811:5 - error TS2345: Argument of type '(req: AuthenticatedRequest<ParamsDictionary, TranslateRequest>, res: Response<TranslateResponse>, next: NextFunction) => Promise<void | Response<TranslateResponse, Record<...>>>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>> & { [key: string]: unknown; user: { id: string; email: string; organizationId: string; role: UserRole; permissions?: string[] | undefined; }; organizationId?: string | undefined; organizationContext?: { ...; } | undefined; } & { ...; }, res: Re...'.
  Type 'Promise<void | Response<TranslateResponse, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
    Type 'Promise<void | Response<TranslateResponse, Record<string, any>>>' is not assignable to type 'Promise<void>'.
      Type 'void | Response<TranslateResponse, Record<string, any>>' is not assignable to type 'void'.
        Type 'Response<TranslateResponse, Record<string, any>>' is not assignable to type 'void'.

811     async (req: AuthenticatedRequest<ParamsDictionary, TranslateRequest>, res: Response<TranslateResponse>, next: NextFunction) => {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:811:17 - error TS2315: Type 'AuthenticatedRequest' is not generic.

811     async (req: AuthenticatedRequest<ParamsDictionary, TranslateRequest>, res: Response<TranslateResponse>, next: NextFunction) => {
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:816:45 - error TS2345: Argument of type '{ success: false; error: string; }' is not assignable to parameter of type 'TranslateResponse'.
  Type '{ success: false; error: string; }' is missing the following properties from type 'TranslateResponse': translatedText, originalText, targetLanguage

816                 return res.status(400).json({
                                                ~
817                     success: false,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
818                     error: "Text and target_language are required"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
819                 });
    ~~~~~~~~~~~~~~~~~

server/routes/ai.ts:860:17 - error TS2353: Object literal may only specify known properties, and 'data' does not exist in type 'TranslateResponse'.

860                 data: {
                    ~~~~

server/routes/ai.ts:876:7 - error TS2451: Cannot redeclare block-scoped variable 'disasterMonitorSchema'.

876 const disasterMonitorSchema = z.object({
          ~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:926:7 - error TS2451: Cannot redeclare block-scoped variable 'groupPreferenceSchema'.

926 const groupPreferenceSchema = z.object({
          ~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:937:30 - error TS2552: Cannot find name 'reconcileGroupPreferences'. Did you mean 'reconcilePreferences'?

937         const result = await reconcileGroupPreferences(preferences);
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:948:7 - error TS2451: Cannot redeclare block-scoped variable 'groupItinerarySchema'.

948 const groupItinerarySchema = z.object({
          ~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:987:5 - error TS2345: Argument of type '(req: AuthenticatedRequest<ParamsDictionary, ItineraryRequest, ParsedQs>, res: Response<ItineraryResponse>, next: NextFunction) => Promise<Response<ItineraryResponse, Record<...>> | undefined>' is not assignable to parameter of type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>> & { [key: string]: unknown; user: { id: string; email: string; organizationId: string; role: UserRole; permissions?: string[] | undefined; }; organizationId?: string | undefined; organizationContext?: { ...; } | undefined; } & { ...; }, res: Re...'.
  Type 'Promise<Response<ItineraryResponse, Record<string, any>> | undefined>' is not assignable to type 'void | Promise<void>'.
    Type 'Promise<Response<ItineraryResponse, Record<string, any>> | undefined>' is not assignable to type 'Promise<void>'.
      Type 'Response<ItineraryResponse, Record<string, any>> | undefined' is not assignable to type 'void'.
        Type 'Response<ItineraryResponse, Record<string, any>>' is not assignable to type 'void'.

987     async (req: AuthenticatedRequest<ParamsDictionary, ItineraryRequest, ParsedQs>, res: Response<ItineraryResponse>, next: NextFunction) => {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:987:5 - error TS7030: Not all code paths return a value.

987     async (req: AuthenticatedRequest<ParamsDictionary, ItineraryRequest, ParsedQs>, res: Response<ItineraryResponse>, next: NextFunction) => {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:987:17 - error TS2315: Type 'AuthenticatedRequest' is not generic.

987     async (req: AuthenticatedRequest<ParamsDictionary, ItineraryRequest, ParsedQs>, res: Response<ItineraryResponse>, next: NextFunction) => {
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:1004:11 - error TS2554: Expected 1 arguments, but got 4.

1004           new Date(start_date),
               ~~~~~~~~~~~~~~~~~~~~~
1005           new Date(end_date),
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1006           preferences
     ~~~~~~~~~~~~~~~~~~~~~

server/routes/ai.ts:1013:52 - error TS2339: Property 'itinerary' does not exist on type 'ReconciledPreferences'.

1013         const { priorityList = [], conflicts = [], itinerary = null } = result;
                                                        ~~~~~~~~~

server/routes/alerts.ts:1:30 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Express } from '../../express-augmentations.ts';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/alerts.ts:3:43 - error TS2345: Argument of type '"superadmin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

3 const requireSuperadminRole = requireRole('superadmin');
                                            ~~~~~~~~~~~~

server/routes/alerts.ts:6:31 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

6 import { adminAuditLog } from "@shared/schema";
                                ~~~~~~~~~~~~~~~~

server/routes/alerts.ts:182:58 - error TS7006: Parameter 'req' implicitly has an 'any' type.

182     app.get("/api/alerts", requireSuperadminRole, async (req, res) => {
                                                             ~~~

server/routes/alerts.ts:182:63 - error TS7006: Parameter 'res' implicitly has an 'any' type.

182     app.get("/api/alerts", requireSuperadminRole, async (req, res) => {
                                                                  ~~~

server/routes/alerts.ts:211:137 - error TS7006: Parameter 'req' implicitly has an 'any' type.

211     app.post("/api/alerts/:id/acknowledge", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                            ~~~

server/routes/alerts.ts:211:142 - error TS7006: Parameter 'res' implicitly has an 'any' type.

211     app.post("/api/alerts/:id/acknowledge", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                                 ~~~

server/routes/alerts.ts:230:137 - error TS6133: 'req' is declared but its value is never read.

230     app.post("/api/alerts/acknowledge-all", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                            ~~~

server/routes/alerts.ts:230:137 - error TS7006: Parameter 'req' implicitly has an 'any' type.

230     app.post("/api/alerts/acknowledge-all", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                            ~~~

server/routes/alerts.ts:230:142 - error TS7006: Parameter 'res' implicitly has an 'any' type.

230     app.post("/api/alerts/acknowledge-all", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                                 ~~~

server/routes/alerts.ts:245:133 - error TS7006: Parameter 'req' implicitly has an 'any' type.

245     app.delete("/api/alerts/clear-old", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                        ~~~

server/routes/alerts.ts:245:138 - error TS7006: Parameter 'res' implicitly has an 'any' type.

245     app.delete("/api/alerts/clear-old", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                             ~~~

server/routes/alerts.ts:264:126 - error TS6133: 'req' is declared but its value is never read.

264     app.get("/api/alerts/stats", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                 ~~~

server/routes/alerts.ts:264:126 - error TS7006: Parameter 'req' implicitly has an 'any' type.

264     app.get("/api/alerts/stats", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                 ~~~

server/routes/alerts.ts:264:131 - error TS7006: Parameter 'res' implicitly has an 'any' type.

264     app.get("/api/alerts/stats", validateJWT, injectOrganizationContext, requireSuperadminRole, validateOrganizationAccess, (req, res) => {
                                                                                                                                      ~~~

server/routes/analytics.ts:7:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

7 const router = Router();
                 ~~~~~~

  server/routes/analytics.ts:1:15
    1 import type { Router, Request, Response } from 'express';
                    ~~~~~~
    'Router' was imported here.

server/routes/analytics.ts:11:17 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Types of parameters 'req' and 'req' are incompatible.
          Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
            Types of property 'user' are incompatible.
              Type '{ id: string; email: string; organizationId: string; role?: string | undefined; } | null | undefined' is not assignable to type 'JwtUser | undefined'.
                Type 'null' is not assignable to type 'JwtUser | undefined'.

11 router.get("/", enforceAnalyticsAccess(), async (req: Request, res: Response) => {
                   ~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:153:5
    153     <
            ~
    154         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    162         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    163     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/routes/analytics.ts:11:43 - error TS7030: Not all code paths return a value.

11 router.get("/", enforceAnalyticsAccess(), async (req: Request, res: Response) => {
                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/analytics.ts:27:25 - error TS7030: Not all code paths return a value.

27 router.get("/personal", async (req: Request, res: Response) => {
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/analytics.ts:42:23 - error TS7030: Not all code paths return a value.

42 router.get("/global", async (req: Request, res: Response) => {
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/analytics.ts:56:78 - error TS7030: Not all code paths return a value.

56 router.get("/organization/:orgId", requireOrgPermission('access_analytics'), async (req: Request, res: Response) => {
                                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/analytics.ts:65:56 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

65         const analyticsData = await getSimpleAnalytics(orgId);
                                                          ~~~~~

server/routes/analytics.ts:74:64 - error TS7030: Not all code paths return a value.

74 router.get("/export/csv", requireOrgPermission('export_data'), async (req: Request, res: Response) => {
                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/approvals.ts:4:67 - error TS2305: Module '"../db/schema.js"' has no exported member 'insertApprovalRequestSchema'.

4 import { approvalRequests, approvalRules, trips, expenses, users, insertApprovalRequestSchema, insertApprovalRuleSchema } from '../db/schema.js';
                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/approvals.ts:4:96 - error TS2305: Module '"../db/schema.js"' has no exported member 'insertApprovalRuleSchema'.

4 import { approvalRequests, approvalRules, trips, expenses, users, insertApprovalRequestSchema, insertApprovalRuleSchema } from '../db/schema.js';
                                                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/approvals.ts:43:32 - error TS2339: Property 'display_name' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; updatedAt: PgColumn<...>; }...'.

43             displayName: users.display_name,
                                  ~~~~~~~~~~~~

server/routes/approvals.ts:49:40 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "approval_requests"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<....'. Did you mean 'organizationId'?

49         .where(and(eq(approvalRequests.organization_id, organizationId), eq(approvalRequests.status, 'pending'), or(eq(approvalRequests.approverId, userId), isNull(approvalRequests.approverId) // Unassigned requests
                                          ~~~~~~~~~~~~~~~

server/routes/approvals.ts:75:20 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'number' is not assignable to parameter of type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

75         .where(and(eq(approvalRequests.id, requestId), eq(approvalRequests.organization_id, organizationId)));
                      ~~


server/routes/approvals.ts:75:76 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "approval_requests"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<....'. Did you mean 'organizationId'?

75         .where(and(eq(approvalRequests.id, requestId), eq(approvalRequests.organization_id, organizationId)));
                                                                              ~~~~~~~~~~~~~~~

server/routes/approvals.ts:100:16 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'number' is not assignable to parameter of type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<number>, right: number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<number>'.
      Type 'PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<number>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "approval_requests"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

100         .where(eq(approvalRequests.id, requestId))
                   ~~


server/routes/approvals.ts:165:33 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "approval_rules"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "approval_rules"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'organizationId'?

165         .where(eq(approvalRules.organization_id, organizationId))
                                    ~~~~~~~~~~~~~~~

server/routes/approvals.ts:210:37 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "approval_rules"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "approval_rules"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'organizationId'?

210         .where(and(eq(approvalRules.organization_id, organizationId), eq(approvalRules.entityType, entityType), eq(approvalRules.active, true)))
                                        ~~~~~~~~~~~~~~~

server/routes/approvals.ts:220:17 - error TS2322: Type 'string' is not assignable to type 'number'.

220                 ruleId: rule.id
                    ~~~~~~

  server/routes/approvals.ts:205:5
    205     ruleId?: number;
            ~~~~~~
    The expected type comes from property 'ruleId' which is declared here on type '{ required: boolean; priority?: string | undefined; ruleId?: number | undefined; }'

server/routes/approvals.ts:259:53 - error TS6133: 'entityType' is declared but its value is never read.

259 async function findApprover(organizationId: number, entityType: string, proposedData: Record<string, any>): Promise<{
                                                        ~~~~~~~~~~

server/routes/approvals.ts:259:73 - error TS6133: 'proposedData' is declared but its value is never read.

259 async function findApprover(organizationId: number, entityType: string, proposedData: Record<string, any>): Promise<{
                                                                            ~~~~~~~~~~~~

server/routes/approvals.ts:266:29 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'organizationId'?

266         .where(and(eq(users.organization_id, organizationId), eq(users.role, 'manager')))
                                ~~~~~~~~~~~~~~~

server/routes/approvals.ts:268:5 - error TS2322: Type '{ id: string; }' is not assignable to type '{ id: number; }'.
  Types of property 'id' are incompatible.
    Type 'string' is not assignable to type 'number'.

268     return manager || null;
        ~~~~~~

server/routes/approvals.ts:298:25 - error TS2561: Object literal may only specify known properties, but 'approved_by' does not exist in type '{ userId?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; organizationId?: string | SQL<...> | PgColumn<...> | undefined; ... 16 more ...; reimbursedAt?: Date | ... 3 more ... | undefined; }'. Did you mean to write 'approvedBy'?

298                         approved_by: request.approverId,
                            ~~~~~~~~~~~

server/routes/billing.ts:1:48 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router, Request, Response } from '../../express-augmentations.ts';
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/billing.ts:8:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

8 const router = Router();
                 ~~~~~~

  server/routes/billing.ts:1:15
    1 import type { Router, Request, Response } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/billing.ts:19:36 - error TS2339: Property 'organizations' does not exist on type 'DrizzleTypeError<"Seems like the schema generic is missing - did you forget to add it to your DB type?"> | { [x: string]: RelationalQueryBuilder<ExtractTablesWithRelations<any>, { ...; }>; }'.
  Property 'organizations' does not exist on type 'DrizzleTypeError<"Seems like the schema generic is missing - did you forget to add it to your DB type?">'.

19         const org = await db.query.organizations.findFirst({
                                      ~~~~~~~~~~~~~

server/routes/billing.ts:48:61 - error TS2339: Property 'current_period_end' does not exist on type 'Response<Subscription>'.

48                     currentPeriodEnd: new Date(subscription.current_period_end * 1000).toISOString(),
                                                               ~~~~~~~~~~~~~~~~~~

server/routes/billing.ts:85:25 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ free: { id: string; name: string; price: number; interval: string; features: string[]; stripePriceId: null; }; team: { id: string; name: string; price: number; interval: string; features: string[]; stripePriceId: string | undefined; }; enterprise: { ...; }; }'.

85         const priceId = SUBSCRIPTION_PLANS[plan].stripePriceId;
                           ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/billing.ts:90:36 - error TS2339: Property 'organizations' does not exist on type 'DrizzleTypeError<"Seems like the schema generic is missing - did you forget to add it to your DB type?"> | { [x: string]: RelationalQueryBuilder<ExtractTablesWithRelations<any>, { ...; }>; }'.
  Property 'organizations' does not exist on type 'DrizzleTypeError<"Seems like the schema generic is missing - did you forget to add it to your DB type?">'.

90         const org = await db.query.organizations.findFirst({
                                      ~~~~~~~~~~~~~

server/routes/billing.ts:103:24 - error TS2561: Object literal may only specify known properties, but 'stripe_customer_id' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; slug?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; subscriptionStatus?: "active" | ... 9 more ... | undefined; }'. Did you mean to write 'stripeCustomerId'?

103                 .set({ stripe_customer_id: customerId })
                           ~~~~~~~~~~~~~~~~~~

server/routes/billing.ts:122:24 - error TS2561: Object literal may only specify known properties, but 'stripe_subscription_id' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; slug?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; subscriptionStatus?: "active" | ... 9 more ... | undefined; }'. Did you mean to write 'stripeSubscriptionId'?

122                 .set({ stripe_subscription_id: subscriptionResult.id })
                           ~~~~~~~~~~~~~~~~~~~~~~

server/routes/bookings.ts:338:23 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'PathParams'.

338     bookingRouter.use(injectOrganizationContext);
                          ~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:153:5
    153     <
            ~
    154         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    162         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    163     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/routes/calendar.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/calendar.ts:4:57 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

4 import { calendarIntegrations, trips, activities } from '@shared/schema';
                                                          ~~~~~~~~~~~~~~~~

server/routes/calendar.ts:8:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

8 const router = Router();
                 ~~~~~~

  server/routes/calendar.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/calendar.ts:14:46 - error TS7006: Parameter 'req' implicitly has an 'any' type.

14 router.post('/generate-ical/:tripId', async (req, res) => {
                                                ~~~

server/routes/calendar.ts:14:51 - error TS7006: Parameter 'res' implicitly has an 'any' type.

14 router.post('/generate-ical/:tripId', async (req, res) => {
                                                     ~~~

server/routes/calendar.ts:46:36 - error TS7006: Parameter 'req' implicitly has an 'any' type.

46 router.get('/integrations', async (req, res) => {
                                      ~~~

server/routes/calendar.ts:46:41 - error TS7006: Parameter 'res' implicitly has an 'any' type.

46 router.get('/integrations', async (req, res) => {
                                           ~~~

server/routes/calendar.ts:71:42 - error TS7006: Parameter 'req' implicitly has an 'any' type.

71 router.post('/sync-trip/:tripId', async (req, res) => {
                                            ~~~

server/routes/calendar.ts:71:47 - error TS7006: Parameter 'res' implicitly has an 'any' type.

71 router.post('/sync-trip/:tripId', async (req, res) => {
                                                 ~~~

server/routes/calendar.ts:128:35 - error TS6133: 'index' is declared but its value is never read.

128     activities.forEach((activity, index) => {
                                      ~~~~~

server/routes/collaboration.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/collaboration.ts:4:82 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

4 import { tripComments, activityLog, trips, users, insertTripCommentSchema } from '@shared/schema';
                                                                                   ~~~~~~~~~~~~~~~~

server/routes/collaboration.ts:8:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

8 const router = Router();
                 ~~~~~~

  server/routes/collaboration.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/collaboration.ts:10:114 - error TS7006: Parameter 'req' implicitly has an 'any' type.

10 router.get('/trips/:tripId/comments', validateJWT, injectOrganizationContext, validateOrganizationAccess, async (req, res) => {
                                                                                                                    ~~~

server/routes/collaboration.ts:10:119 - error TS7006: Parameter 'res' implicitly has an 'any' type.

10 router.get('/trips/:tripId/comments', validateJWT, injectOrganizationContext, validateOrganizationAccess, async (req, res) => {
                                                                                                                         ~~~

server/routes/collaboration.ts:54:47 - error TS7006: Parameter 'req' implicitly has an 'any' type.

54 router.post('/trips/:tripId/comments', async (req, res) => {
                                                 ~~~

server/routes/collaboration.ts:54:52 - error TS7006: Parameter 'res' implicitly has an 'any' type.

54 router.post('/trips/:tripId/comments', async (req, res) => {
                                                      ~~~

server/routes/collaboration.ts:129:53 - error TS7006: Parameter 'req' implicitly has an 'any' type.

129 router.patch('/comments/:commentId/resolve', async (req, res) => {
                                                        ~~~

server/routes/collaboration.ts:129:58 - error TS7006: Parameter 'res' implicitly has an 'any' type.

129 router.patch('/comments/:commentId/resolve', async (req, res) => {
                                                             ~~~

server/routes/collaboration.ts:162:46 - error TS7006: Parameter 'req' implicitly has an 'any' type.

162 router.get('/trips/:tripId/activity', async (req, res) => {
                                                 ~~~

server/routes/collaboration.ts:162:51 - error TS7006: Parameter 'res' implicitly has an 'any' type.

162 router.get('/trips/:tripId/activity', async (req, res) => {
                                                      ~~~

server/routes/corporateCards.ts:433:17 - error TS2353: Object literal may only specify known properties, and 'createdAt' does not exist in type '{ organizationId: string; amount: string; merchantName: string; transactionDate: Date; transactionId: string; status?: "pending" | "completed" | "declined" | "disputed" | "refunded" | undefined; ... 14 more ...; isRecurring?: boolean | ... 1 more ... | undefined; }'.

433                 createdAt: new Date(),
                    ~~~~~~~~~

server/routes/domains.ts:1:49 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Express, Request, Response } from '../../express-augmentations.ts';
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/domains.ts:3:66 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { customDomains, organizations, whiteLabelSettings } from "@shared/schema";
                                                                   ~~~~~~~~~~~~~~~~

server/routes/expenses.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/expenses.ts:5:40 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

5 import { expenses, trips, users } from '@shared/schema';
                                         ~~~~~~~~~~~~~~~~

server/routes/expenses.ts:34:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

34 const router = Router();
                  ~~~~~~

  server/routes/expenses.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/expenses.ts:40:24 - error TS7006: Parameter 'req' implicitly has an 'any' type.

40 router.get('/', async (req, res) => {
                          ~~~

server/routes/expenses.ts:40:29 - error TS7006: Parameter 'res' implicitly has an 'any' type.

40 router.get('/', async (req, res) => {
                               ~~~

server/routes/expenses.ts:72:27 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<any, any, "multiple", any, false, "where", { [x: string]: any; }[], any>, "where">'.

72             query = query.where(and(...conditions));
                             ~~~~~

server/routes/expenses.ts:111:29 - error TS7006: Parameter 'req' implicitly has an 'any' type.

111 router.get('/stats', async (req, res) => {
                                ~~~

server/routes/expenses.ts:111:34 - error TS7006: Parameter 'res' implicitly has an 'any' type.

111 router.get('/stats', async (req, res) => {
                                     ~~~

server/routes/expenses.ts:124:13 - error TS2322: Type 'SQL<unknown> | undefined' is not assignable to type 'SQL<unknown>'.
  Type 'undefined' is not assignable to type 'SQL<unknown>'.

124             dateFilter = and(eq(expenses.organization_id, organizationId), gte(expenses.date, startDate), lte(expenses.date, endDate));
                ~~~~~~~~~~

server/routes/expenses.ts:171:25 - error TS7006: Parameter 'req' implicitly has an 'any' type.

171 router.post('/', async (req, res) => {
                            ~~~

server/routes/expenses.ts:171:30 - error TS7006: Parameter 'res' implicitly has an 'any' type.

171 router.post('/', async (req, res) => {
                                 ~~~

server/routes/expenses.ts:181:13 - error TS2561: Object literal may only specify known properties, but 'organizationId' does not exist in type 'ApprovalWorkflowConfig'. Did you mean to write 'organization_id'?

181             organizationId,
                ~~~~~~~~~~~~~~

server/routes/expenses.ts:209:28 - error TS2339: Property 'approvalRequests' does not exist on type 'PostgresJsDatabase<any> & { $client: Sql<{}>; }'.

209                 .update(db.approvalRequests)
                               ~~~~~~~~~~~~~~~~

server/routes/expenses.ts:211:30 - error TS2339: Property 'approvalRequests' does not exist on type 'PostgresJsDatabase<any> & { $client: Sql<{}>; }'.

211                 .where(eq(db.approvalRequests.id, approvalResult.requestId));
                                 ~~~~~~~~~~~~~~~~

server/routes/expenses.ts:231:36 - error TS7006: Parameter 'req' implicitly has an 'any' type.

231 router.patch('/:expenseId', async (req, res) => {
                                       ~~~

server/routes/expenses.ts:231:41 - error TS7006: Parameter 'res' implicitly has an 'any' type.

231 router.patch('/:expenseId', async (req, res) => {
                                            ~~~

server/routes/expenses.ts:258:17 - error TS2561: Object literal may only specify known properties, but 'organizationId' does not exist in type 'ApprovalWorkflowConfig'. Did you mean to write 'organization_id'?

258                 organizationId,
                    ~~~~~~~~~~~~~~

server/routes/expenses.ts:287:45 - error TS7006: Parameter 'req' implicitly has an 'any' type.

287 router.patch('/:expenseId/approval', async (req, res) => {
                                                ~~~

server/routes/expenses.ts:287:50 - error TS7006: Parameter 'res' implicitly has an 'any' type.

287 router.patch('/:expenseId/approval', async (req, res) => {
                                                     ~~~

server/routes/expenses.ts:333:43 - error TS7006: Parameter 'req' implicitly has an 'any' type.

333 router.post('/:expenseId/receipt', async (req, res) => {
                                              ~~~

server/routes/expenses.ts:333:48 - error TS7006: Parameter 'res' implicitly has an 'any' type.

333 router.post('/:expenseId/receipt', async (req, res) => {
                                                   ~~~

server/routes/expenses.ts:367:30 - error TS7006: Parameter 'req' implicitly has an 'any' type.

367 router.get('/report', async (req, res) => {
                                 ~~~

server/routes/expenses.ts:367:35 - error TS7006: Parameter 'res' implicitly has an 'any' type.

367 router.get('/report', async (req, res) => {
                                      ~~~

server/routes/expenses.ts:396:27 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<any, { expense: any; trip: { id: any; title: any; destination: any; startDate: any; endDate: any; }; user: { id: any; displayName: any; email: any; }; }, "partial", any, false, "where", any[], { expense: any; trip: { ...; }; user: { ...; }; }>, "where">'.

396             query = query.where(and(eq(expenses.organization_id, organizationId), gte(expenses.date, new Date(startDate as string))));
                              ~~~~~

server/routes/expenses.ts:399:27 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<any, { expense: any; trip: { id: any; title: any; destination: any; startDate: any; endDate: any; }; user: { id: any; displayName: any; email: any; }; }, "partial", any, false, "where", any[], { expense: any; trip: { ...; }; user: { ...; }; }>, "where">'.

399             query = query.where(and(eq(expenses.organization_id, organizationId), lte(expenses.date, new Date(endDate as string))));
                              ~~~~~

server/routes/expenses.ts:402:27 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<any, { expense: any; trip: { id: any; title: any; destination: any; startDate: any; endDate: any; }; user: { id: any; displayName: any; email: any; }; }, "partial", any, false, "where", any[], { expense: any; trip: { ...; }; user: { ...; }; }>, "where">'.

402             query = query.where(and(eq(expenses.organization_id, organizationId), eq(expenses.trip_id, parseInt(tripId as string))));
                              ~~~~~

server/routes/expenses.ts:405:27 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<any, { expense: any; trip: { id: any; title: any; destination: any; startDate: any; endDate: any; }; user: { id: any; displayName: any; email: any; }; }, "partial", any, false, "where", any[], { expense: any; trip: { ...; }; user: { ...; }; }>, "where">'.

405             query = query.where(and(eq(expenses.organization_id, organizationId), eq(expenses.user_id, parseInt(filterUserId as string))));
                              ~~~~~

server/routes/export.ts:1:18 - error TS1484: 'Request' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Request, Response } from 'express';
                   ~~~~~~~

server/routes/export.ts:1:27 - error TS1484: 'Response' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Request, Response } from 'express';
                            ~~~~~~~~

server/routes/export.ts:10:12 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'PathParams'.

10 router.use(injectOrganizationContext);
              ~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:153:5
    153     <
            ~
    154         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    162         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    163     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/routes/export.ts:16:92 - error TS7030: Not all code paths return a value.

16 router.get('/trip/:tripId/csv', validateAndSanitizeRequest({ params: tripIdParamSchema }), async (req: Request, res: Response) => {
                                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/export.ts:31:92 - error TS7030: Not all code paths return a value.

31 router.get('/trip/:tripId/ics', validateAndSanitizeRequest({ params: tripIdParamSchema }), async (req: Request, res: Response) => {
                                                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/flights.ts:1:62 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router, Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/flights.ts:57:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

57 const router = Router();
                  ~~~~~~

  server/routes/flights.ts:1:15
    1 import type { Router, Request, Response, NextFunction } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/flights.ts:95:30 - error TS2352: Conversion of type '{ departure_date: string; destination: string; passengers: { adults: number; children?: number | undefined; infants?: number | undefined; }; origin: string; return_date?: string | undefined; cabin_class?: "business" | ... 3 more ... | undefined; }' to type 'FlightSearchParams' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Property 'departureDate' is missing in type '{ departure_date: string; destination: string; passengers: { adults: number; children?: number | undefined; infants?: number | undefined; }; origin: string; return_date?: string | undefined; cabin_class?: "business" | ... 3 more ... | undefined; }' but required in type 'FlightSearchParams'.

95         const searchParams = flightSearchSchema.parse(req.body) as FlightSearchParams;
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  dist/shared/types/flight.d.ts:95:5
    95     departureDate: string;
           ~~~~~~~~~~~~~
    'departureDate' is declared here.

server/routes/flights.ts:101:34 - error TS2352: Conversion of type 'DuffelFlightOffer[]' to type 'DuffelOffer[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Property 'passenger_identity_documents_required' is missing in type 'DuffelFlightOffer' but required in type 'DuffelOffer'.

101             const duffelOffers = await duffelClient.searchFlights(searchParams) as DuffelOffer[];
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/routes/flights.ts:13:5
    13     passenger_identity_documents_required: boolean;
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'passenger_identity_documents_required' is declared here.

server/routes/flights.ts:101:67 - error TS2345: Argument of type 'FlightSearchParams' is not assignable to parameter of type 'DuffelFlightSearchParams'.
  Property 'departure_date' is missing in type 'FlightSearchParams' but required in type 'DuffelFlightSearchParams'.

101             const duffelOffers = await duffelClient.searchFlights(searchParams) as DuffelOffer[];
                                                                      ~~~~~~~~~~~~

  server/services/duffelHttpClient.ts:8:5
    8     departure_date: string;
          ~~~~~~~~~~~~~~
    'departure_date' is declared here.

server/routes/flights.ts:159:44 - error TS2339: Property 'cabin_class' does not exist on type 'DuffelPassenger'.

159                     cabin_class: passenger.cabin_class,
                                               ~~~~~~~~~~~

server/routes/flights.ts:160:40 - error TS2339: Property 'baggages' does not exist on type 'DuffelPassenger'.

160                     baggage: passenger.baggages?.map(baggage => ({
                                           ~~~~~~~~

server/routes/flights.ts:160:54 - error TS7006: Parameter 'baggage' implicitly has an 'any' type.

160                     baggage: passenger.baggages?.map(baggage => ({
                                                         ~~~~~~~

server/routes/flights.ts:166:52 - error TS2339: Property 'conditions' does not exist on type 'DuffelOffer'.

166                     change_before_departure: offer.conditions?.change_before_departure,
                                                       ~~~~~~~~~~

server/routes/flights.ts:167:52 - error TS2339: Property 'conditions' does not exist on type 'DuffelOffer'.

167                     cancel_before_departure: offer.conditions?.cancel_before_departure,
                                                       ~~~~~~~~~~

server/routes/flights.ts:168:52 - error TS2339: Property 'conditions' does not exist on type 'DuffelOffer'.

168                     refund_before_departure: offer.conditions?.refund_before_departure
                                                       ~~~~~~~~~~

server/routes/health.ts:1:24 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import { Router } from '../../express-augmentations.ts';
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/health.ts:203:13 - error TS7006: Parameter '_req' implicitly has an 'any' type.

203 router.use((_req, res, next) => {
                ~~~~

server/routes/health.ts:203:19 - error TS7006: Parameter 'res' implicitly has an 'any' type.

203 router.use((_req, res, next) => {
                      ~~~

server/routes/health.ts:203:24 - error TS7006: Parameter 'next' implicitly has an 'any' type.

203 router.use((_req, res, next) => {
                           ~~~~

server/routes/index.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/index.ts:19:10 - error TS2614: Module '"./corporateCards.js"' has no exported member 'registerCorporateCardRoutes'. Did you mean to use 'import registerCorporateCardRoutes from "./corporateCards.js"' instead?

19 import { registerCorporateCardRoutes } from './corporateCards.js';
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/index.ts:36:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

36 const router = Router();
                  ~~~~~~

  server/routes/index.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/index.ts:79:33 - error TS7006: Parameter '_req' implicitly has an 'any' type.

79 router.get('/templates', async (_req, res) => {
                                   ~~~~

server/routes/index.ts:79:39 - error TS7006: Parameter 'res' implicitly has an 'any' type.

79 router.get('/templates', async (_req, res) => {
                                         ~~~

server/routes/index.ts:91:40 - error TS7006: Parameter 'req' implicitly has an 'any' type.

91 router.get('/user/permissions', async (req, res) => {
                                          ~~~

server/routes/index.ts:91:45 - error TS7006: Parameter 'res' implicitly has an 'any' type.

91 router.get('/user/permissions', async (req, res) => {
                                               ~~~

server/routes/index.ts:114:60 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

114         const permissions = await getUserPermissionsByRole(userId, req.user.role, parsedOrganizationId);
                                                               ~~~~~~

server/routes/index.ts:129:33 - error TS7006: Parameter 'req' implicitly has an 'any' type.

129 router.get('/dashboard-stats', (req, res) => {
                                    ~~~

server/routes/index.ts:129:38 - error TS7006: Parameter 'res' implicitly has an 'any' type.

129 router.get('/dashboard-stats', (req, res) => {
                                         ~~~

server/routes/index.ts:178:45 - error TS7006: Parameter '_req' implicitly has an 'any' type.

178 router.get('/organizations/members', async (_req, res) => {
                                                ~~~~

server/routes/index.ts:178:51 - error TS7006: Parameter 'res' implicitly has an 'any' type.

178 router.get('/organizations/members', async (_req, res) => {
                                                      ~~~

server/routes/index.ts:241:41 - error TS7006: Parameter 'req' implicitly has an 'any' type.

241 router.post('/locations/airport-code', (req, res) => {
                                            ~~~

server/routes/index.ts:241:46 - error TS7006: Parameter 'res' implicitly has an 'any' type.

241 router.post('/locations/airport-code', (req, res) => {
                                                 ~~~

server/routes/index.ts:348:24 - error TS7006: Parameter '_req' implicitly has an 'any' type.

348 router.get('/health', (_req, res) => {
                           ~~~~

server/routes/index.ts:348:30 - error TS7006: Parameter 'res' implicitly has an 'any' type.

348 router.get('/health', (_req, res) => {
                                 ~~~

server/routes/invoices.ts:83:45 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | number' is not assignable to parameter of type 'string | SQLWrapper'.
      Type 'number' is not assignable to type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | number>, right: string | number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | number>'.
      Type 'PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | number>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

83             .where(and(eq(invoices.id, id), eq(invoices.organizationId, authReq.organizationId)))
                                               ~~


server/routes/invoices.ts:116:45 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: string | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string | number' is not assignable to parameter of type 'string | SQLWrapper'.
      Type 'number' is not assignable to type 'string | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string | number>, right: string | number | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string | number>'.
      Type 'PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string | number>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "organization_id"; tableName: "invoices"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

116             .where(and(eq(invoices.id, id), eq(invoices.organizationId, authReq.organizationId)))
                                                ~~


server/routes/notifications.ts:3:31 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { notifications } from '@shared/schema';
                                ~~~~~~~~~~~~~~~~

server/routes/notifications.ts:10:12 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'PathParams'.

10 router.use(injectOrganizationContext);
              ~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:153:5
    153     <
            ~
    154         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    162         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    163     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/routes/notifications.ts:13:17 - error TS7030: Not all code paths return a value.

13 router.get('/', async (req, res) => {
                   ~~~~~~~~~~~~~~~~~~~~~

server/routes/notifications.ts:42:25 - error TS7030: Not all code paths return a value.

42 router.put('/:id/read', async (req, res) => {
                           ~~~~~~~~~~~~~~~~~~~~~

server/routes/notifications.ts:63:31 - error TS7030: Not all code paths return a value.

63 router.post('/mark-all-read', async (req, res) => {
                                 ~~~~~~~~~~~~~~~~~~~~~

server/routes/notifications.ts:83:22 - error TS7030: Not all code paths return a value.

83 router.post('/test', async (req, res) => {
                        ~~~~~~~~~~~~~~~~~~~~~

server/routes/notifications.ts:93:39 - error TS2551: Property 'organization_id' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'. Did you mean 'organizationId'?

93             organization_id: req.user.organization_id,
                                         ~~~~~~~~~~~~~~~

  server/routes/bookings.ts:114:13
    114             organizationId: string;
                    ~~~~~~~~~~~~~~
    'organizationId' is declared here.

server/routes/organizationFunding.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizationFunding.ts:5:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

5 const router = Router();
                 ~~~~~~

  server/routes/organizationFunding.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/organizationFunding.ts:29:43 - error TS7006: Parameter 'req' implicitly has an 'any' type.

29 router.get("/status", validateJWT, async (req, res) => {
                                             ~~~

server/routes/organizationFunding.ts:29:48 - error TS7006: Parameter 'res' implicitly has an 'any' type.

29 router.get("/status", validateJWT, async (req, res) => {
                                                  ~~~

server/routes/organizationFunding.ts:43:52 - error TS7006: Parameter 'req' implicitly has an 'any' type.

43 router.post("/create-account", validateJWT, async (req, res) => {
                                                      ~~~

server/routes/organizationFunding.ts:43:57 - error TS7006: Parameter 'res' implicitly has an 'any' type.

43 router.post("/create-account", validateJWT, async (req, res) => {
                                                           ~~~

server/routes/organizationFunding.ts:62:53 - error TS7006: Parameter 'req' implicitly has an 'any' type.

62 router.post("/onboarding-link", validateJWT, async (req, res) => {
                                                       ~~~

server/routes/organizationFunding.ts:62:58 - error TS7006: Parameter 'res' implicitly has an 'any' type.

62 router.post("/onboarding-link", validateJWT, async (req, res) => {
                                                            ~~~

server/routes/organizationFunding.ts:84:51 - error TS7006: Parameter 'req' implicitly has an 'any' type.

84 router.get("/account-status", validateJWT, async (req, res) => {
                                                     ~~~

server/routes/organizationFunding.ts:84:56 - error TS7006: Parameter 'res' implicitly has an 'any' type.

84 router.get("/account-status", validateJWT, async (req, res) => {
                                                          ~~~

server/routes/organizationFunding.ts:98:51 - error TS7006: Parameter 'req' implicitly has an 'any' type.

98 router.post("/setup-funding", validateJWT, async (req, res) => {
                                                     ~~~

server/routes/organizationFunding.ts:98:56 - error TS7006: Parameter 'res' implicitly has an 'any' type.

98 router.post("/setup-funding", validateJWT, async (req, res) => {
                                                          ~~~

server/routes/organizationFunding.ts:120:47 - error TS7006: Parameter 'req' implicitly has an 'any' type.

120 router.post("/add-funds", validateJWT, async (req, res) => {
                                                  ~~~

server/routes/organizationFunding.ts:120:52 - error TS7006: Parameter 'res' implicitly has an 'any' type.

120 router.post("/add-funds", validateJWT, async (req, res) => {
                                                       ~~~

server/routes/organizationMembers.ts:5:34 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

5 import { Router, Response } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizationMembers.ts:8:44 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

8 import { users, organizationMembers } from '@shared/schema';
                                             ~~~~~~~~~~~~~~~~

server/routes/organizationMembers.ts:11:10 - error TS1484: 'OrganizationRole' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

11 import { OrganizationRole, getRoleDescription, canAssignRole } from '../rbac/organizationRoles.ts';
            ~~~~~~~~~~~~~~~~

server/routes/organizations.ts:1:18 - error TS1484: 'Request' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Request, Response } from 'express';
                   ~~~~~~~

server/routes/organizations.ts:1:27 - error TS1484: 'Response' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Request, Response } from 'express';
                            ~~~~~~~~

server/routes/organizations.ts:3:42 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { insertOrganizationSchema } from '@shared/schema';
                                           ~~~~~~~~~~~~~~~~

server/routes/organizations.ts:11:23 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

11 import { users } from '@shared/schema';
                         ~~~~~~~~~~~~~~~~

server/routes/organizations.ts:33:22 - error TS7030: Not all code paths return a value.

33 router.get('/users', async (req: Request, res: Response) => {
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:39:13 - error TS2322: Type 'string' is not assignable to type 'number'.

39             targetOrgId = req.user.organizationId;
               ~~~~~~~~~~~

server/routes/organizations.ts:41:28 - error TS2339: Property 'userId' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.

41         else if (req.user?.userId) {
                              ~~~~~~

server/routes/organizations.ts:46:46 - error TS2339: Property 'userId' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.

46                 .where(eq(users.id, req.user.userId))
                                                ~~~~~~

server/routes/organizations.ts:80:78 - error TS7030: Not all code paths return a value.

80 router.get("/:id", validateAndSanitizeRequest({ params: orgIdParamSchema }), async (req: Request, res: Response) => {
                                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:100:165 - error TS7030: Not all code paths return a value.

100 router.put("/:id", requireOrgPermission('manage_organization'), validateAndSanitizeRequest({ params: orgIdParamSchema, body: insertOrganizationSchema.partial() }), async (req: Request, res: Response) => {
                                                                                                                                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:109:51 - error TS2551: Property 'updateOrganization' does not exist on type 'MemStorage'. Did you mean 'getOrganization'?

109         const updatedOrganization = await storage.updateOrganization(orgId, updateData);
                                                      ~~~~~~~~~~~~~~~~~~

  server/storage/implementations/MemStorage.ts:61:11
    61     async getOrganization(id: string): Promise<any> {
                 ~~~~~~~~~~~~~~~
    'getOrganization' is declared here.

server/routes/organizations.ts:124:124 - error TS7030: Not all code paths return a value.

124 router.get("/:id/members", requireOrgPermission('view_members'), validateAndSanitizeRequest({ params: orgIdParamSchema }), async (req: Request, res: Response) => {
                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:132:39 - error TS2551: Property 'getOrganizationMembers' does not exist on type 'MemStorage'. Did you mean 'getOrganization'?

132         const members = await storage.getOrganizationMembers(orgId);
                                          ~~~~~~~~~~~~~~~~~~~~~~

  server/storage/implementations/MemStorage.ts:61:11
    61     async getOrganization(id: string): Promise<any> {
                 ~~~~~~~~~~~~~~~
    'getOrganization' is declared here.

server/routes/organizations.ts:141:156 - error TS7030: Not all code paths return a value.

141 router.post("/:id/invite", requireOrgPermission('invite_members'), validateAndSanitizeRequest({ params: orgIdParamSchema, body: inviteMemberBodySchema }), async (req: Request, res: Response) => {
                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:151:42 - error TS2339: Property 'createInvitation' does not exist on type 'MemStorage'.

151         const invitation = await storage.createInvitation({
                                             ~~~~~~~~~~~~~~~~

server/routes/organizations.ts:154:34 - error TS2339: Property 'userId' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.

154             invitedBy: req.user!.userId,
                                     ~~~~~~

server/routes/organizations.ts:167:172 - error TS7030: Not all code paths return a value.

167 router.put("/:id/members/:userId", requireOrgPermission('manage_members'), validateAndSanitizeRequest({ params: orgAndUserIdParamsSchema, body: updateMemberBodySchema }), async (req: Request, res: Response) => {
                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:177:45 - error TS2339: Property 'updateOrganizationMember' does not exist on type 'MemStorage'.

177         const updatedMember = await storage.updateOrganizationMember(orgId, userId, {
                                                ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:192:145 - error TS7030: Not all code paths return a value.

192 router.delete("/:id/members/:userId", requireOrgPermission('manage_members'), validateAndSanitizeRequest({ params: orgAndUserIdParamsSchema }), async (req: Request, res: Response) => {
                                                                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:202:34 - error TS2339: Property 'userId' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.

202         if (userId === req.user?.userId) {
                                     ~~~~~~

server/routes/organizations.ts:205:39 - error TS2339: Property 'removeOrganizationMember' does not exist on type 'MemStorage'.

205         const success = await storage.removeOrganizationMember(orgId, userId);
                                          ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:217:130 - error TS7030: Not all code paths return a value.

217 router.get("/:id/analytics", requireOrgPermission('access_analytics'), validateAndSanitizeRequest({ params: orgIdParamSchema }), async (req: Request, res: Response) => {
                                                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/organizations.ts:234:24 - error TS7030: Not all code paths return a value.

234 router.get('/members', async (req: Request, res: Response) => {
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/payments.ts:1:72 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import { Router, type Request, type Response, type NextFunction } from '../../express-augmentations.ts';
                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/payments.ts:73:83 - error TS2339: Property 'data' does not exist on type '{}'.

73         if (paymentIntent && 'charges' in paymentIntent && paymentIntent.charges?.data?.length) {
                                                                                     ~~~~

server/routes/payments.ts:74:48 - error TS2339: Property 'data' does not exist on type '{}'.

74             receiptUrl = paymentIntent.charges.data[0].receipt_url || null;
                                                  ~~~~

server/routes/payments.ts:296:18 - error TS2339: Property 'subscription' does not exist on type 'Invoice'.

296     if (!invoice.subscription)
                     ~~~~~~~~~~~~

server/routes/payments.ts:299:74 - error TS2339: Property 'subscription' does not exist on type 'Invoice'.

299         const subscription = await stripe.subscriptions.retrieve(invoice.subscription as string);
                                                                             ~~~~~~~~~~~~

server/routes/performance.ts:5:30 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

5 import type { Express } from '../../express-augmentations.ts';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/performance.ts:15:46 - error TS7006: Parameter 'req' implicitly has an 'any' type.

15     app.get("/api/admin/performance", async (req, res) => {
                                                ~~~

server/routes/performance.ts:15:51 - error TS7006: Parameter 'res' implicitly has an 'any' type.

15     app.get("/api/admin/performance", async (req, res) => {
                                                     ~~~

server/routes/performance.ts:33:55 - error TS7006: Parameter 'req' implicitly has an 'any' type.

33     app.get("/api/admin/performance/realtime", async (req, res) => {
                                                         ~~~

server/routes/performance.ts:33:60 - error TS7006: Parameter 'res' implicitly has an 'any' type.

33     app.get("/api/admin/performance/realtime", async (req, res) => {
                                                              ~~~

server/routes/performance.ts:61:53 - error TS7006: Parameter 'req' implicitly has an 'any' type.

61     app.get("/api/admin/performance/export", async (req, res) => {
                                                       ~~~

server/routes/performance.ts:61:58 - error TS7006: Parameter 'res' implicitly has an 'any' type.

61     app.get("/api/admin/performance/export", async (req, res) => {
                                                            ~~~

server/routes/performance.ts:77:62 - error TS7006: Parameter 'req' implicitly has an 'any' type.

77     app.get("/api/admin/performance/recommendations", async (req, res) => {
                                                                ~~~

server/routes/performance.ts:77:67 - error TS7006: Parameter 'res' implicitly has an 'any' type.

77     app.get("/api/admin/performance/recommendations", async (req, res) => {
                                                                     ~~~

server/routes/performance.ts:96:55 - error TS7006: Parameter 'req' implicitly has an 'any' type.

96     app.post("/api/admin/performance/cleanup", async (req, res) => {
                                                         ~~~

server/routes/performance.ts:96:60 - error TS7006: Parameter 'res' implicitly has an 'any' type.

96     app.post("/api/admin/performance/cleanup", async (req, res) => {
                                                              ~~~

server/routes/proposals.ts:1:34 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import { Router, Response } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/proposals.ts:36:45 - error TS2339: Property 'eq' does not exist on type 'PgColumn<{ name: "organization_id"; tableName: "proposals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: false; isPrimaryKey: false; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>'.

36             .where(proposals.organizationId.eq(orgId));
                                               ~~

server/routes/proposals.ts:46:100 - error TS2315: Type 'AuthenticatedRequest' is not generic.

46 router.get('/:id', validateJWT, injectOrganizationContext, validateOrganizationAccess, async (req: AuthenticatedRequest<{
                                                                                                      ~~~~~~~~~~~~~~~~~~~~~~
47     id: string;
   ~~~~~~~~~~~~~~~
48 }>, res: Response) => {
   ~~

server/routes/proposals.ts:54:33 - error TS2339: Property 'eq' does not exist on type 'PgColumn<{ name: "id"; tableName: "proposals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>'.

54             .where(proposals.id.eq(id));
                                   ~~

server/routes/proposals.ts:67:143 - error TS2740: Type 'PgEnum<["draft", "sent", "viewed", "signed", "rejected", "expired", "invoiced", "cancelled"]>' is missing the following properties from type 'ZodType<any, any, any>': _type, _output, _input, _def, and 34 more.

67 router.patch('/:id/status', validateJWT, injectOrganizationContext, validateOrganizationAccess, validateAndSanitizeRequest({ body: z.object({ status: proposalStatusEnum }) }), async (req: AuthenticatedRequest<{
                                                                                                                                                 ~~~~~~

  node_modules/zod/dist/types/v3/types.d.ts:14:5
    14     [k: string]: ZodTypeAny;
           ~~~~~~~~~~~~~~~~~~~~~~~~
    The expected type comes from this index signature.

server/routes/proposals.ts:67:189 - error TS2315: Type 'AuthenticatedRequest' is not generic.

67 router.patch('/:id/status', validateJWT, injectOrganizationContext, validateOrganizationAccess, validateAndSanitizeRequest({ body: z.object({ status: proposalStatusEnum }) }), async (req: AuthenticatedRequest<{
                                                                                                                                                                                               ~~~~~~~~~~~~~~~~~~~~~~
68     id: string;
   ~~~~~~~~~~~~~~~
69 }>, res: Response) => {
   ~~

server/routes/proposals.ts:76:33 - error TS2339: Property 'eq' does not exist on type 'PgColumn<{ name: "id"; tableName: "proposals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>'.

76             .where(proposals.id.eq(id))
                                   ~~

server/routes/proposals.ts:92:17 - error TS2315: Type 'AuthenticatedRequest' is not generic.

92 }), async (req: AuthenticatedRequest<{
                   ~~~~~~~~~~~~~~~~~~~~~~
93     id: string;
   ~~~~~~~~~~~~~~~
94 }>, res: Response) => {
   ~~

server/routes/proposals.ts:109:33 - error TS2339: Property 'eq' does not exist on type 'PgColumn<{ name: "id"; tableName: "proposals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>'.

109             .where(proposals.id.eq(id))
                                    ~~

server/routes/proposals.ts:123:137 - error TS2315: Type 'AuthenticatedRequest' is not generic.

123 router.patch('/:id/invoice', validateJWT, validateAndSanitizeRequest({ body: z.object({ invoiceId: z.string().uuid() }) }), async (req: AuthenticatedRequest<{
                                                                                                                                            ~~~~~~~~~~~~~~~~~~~~~~
124     id: string;
    ~~~~~~~~~~~~~~~
125 }>, res: Response) => {
    ~~

server/routes/proposals.ts:132:33 - error TS2339: Property 'eq' does not exist on type 'PgColumn<{ name: "id"; tableName: "proposals"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>'.

132             .where(proposals.id.eq(id))
                                    ~~

server/routes/reporting.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/reporting.ts:6:95 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

6 import { trips, expenses, bookings, users, organizations, approvalRequests, activities } from '@shared/schema';
                                                                                                ~~~~~~~~~~~~~~~~

server/routes/reporting.ts:7:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

7 const router = Router();
                 ~~~~~~

  server/routes/reporting.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/reporting.ts:13:33 - error TS7006: Parameter 'req' implicitly has an 'any' type.

13 router.get('/dashboard', async (req, res) => {
                                   ~~~

server/routes/reporting.ts:13:38 - error TS7006: Parameter 'res' implicitly has an 'any' type.

13 router.get('/dashboard', async (req, res) => {
                                        ~~~

server/routes/reporting.ts:61:41 - error TS7006: Parameter 'req' implicitly has an 'any' type.

61 router.get('/trips/performance', async (req, res) => {
                                           ~~~

server/routes/reporting.ts:61:46 - error TS7006: Parameter 'res' implicitly has an 'any' type.

61 router.get('/trips/performance', async (req, res) => {
                                                ~~~

server/routes/reporting.ts:132:44 - error TS7006: Parameter 'req' implicitly has an 'any' type.

132 router.get('/compliance/financial', async (req, res) => {
                                               ~~~

server/routes/reporting.ts:132:49 - error TS7006: Parameter 'res' implicitly has an 'any' type.

132 router.get('/compliance/financial', async (req, res) => {
                                                    ~~~

server/routes/reporting.ts:179:42 - error TS7006: Parameter 'req' implicitly has an 'any' type.

179 router.get('/export/:reportType', async (req, res) => {
                                             ~~~

server/routes/reporting.ts:179:47 - error TS7006: Parameter 'res' implicitly has an 'any' type.

179 router.get('/export/:reportType', async (req, res) => {
                                                  ~~~

server/routes/reporting.ts:225:31 - error TS7006: Parameter 'req' implicitly has an 'any' type.

225 router.post('/custom', async (req, res) => {
                                  ~~~

server/routes/reporting.ts:225:36 - error TS7006: Parameter 'res' implicitly has an 'any' type.

225 router.post('/custom', async (req, res) => {
                                       ~~~

server/routes/reporting.ts:468:42 - error TS6133: 'organizationId' is declared but its value is never read.

468 async function getAuditTrailCompleteness(organizationId: number, startDate: Date, endDate: Date) {
                                             ~~~~~~~~~~~~~~

server/routes/reporting.ts:468:66 - error TS6133: 'startDate' is declared but its value is never read.

468 async function getAuditTrailCompleteness(organizationId: number, startDate: Date, endDate: Date) {
                                                                     ~~~~~~~~~

server/routes/reporting.ts:468:83 - error TS6133: 'endDate' is declared but its value is never read.

468 async function getAuditTrailCompleteness(organizationId: number, startDate: Date, endDate: Date) {
                                                                                      ~~~~~~~

server/routes/reporting.ts:493:56 - error TS6133: 'startDate' is declared but its value is never read.

493 async function exportTripsData(organizationId: number, startDate?: string, endDate?: string) {
                                                           ~~~~~~~~~

server/routes/reporting.ts:493:76 - error TS6133: 'endDate' is declared but its value is never read.

493 async function exportTripsData(organizationId: number, startDate?: string, endDate?: string) {
                                                                               ~~~~~~~

server/routes/reporting.ts:501:59 - error TS6133: 'startDate' is declared but its value is never read.

501 async function exportExpensesData(organizationId: number, startDate?: string, endDate?: string) {
                                                              ~~~~~~~~~

server/routes/reporting.ts:501:79 - error TS6133: 'endDate' is declared but its value is never read.

501 async function exportExpensesData(organizationId: number, startDate?: string, endDate?: string) {
                                                                                  ~~~~~~~

server/routes/reporting.ts:510:59 - error TS6133: 'startDate' is declared but its value is never read.

510 async function exportBookingsData(organizationId: number, startDate?: string, endDate?: string) {
                                                              ~~~~~~~~~

server/routes/reporting.ts:510:79 - error TS6133: 'endDate' is declared but its value is never read.

510 async function exportBookingsData(organizationId: number, startDate?: string, endDate?: string) {
                                                                                  ~~~~~~~

server/routes/reporting.ts:519:61 - error TS6133: 'startDate' is declared but its value is never read.

519 async function exportComplianceData(organizationId: number, startDate?: string, endDate?: string) {
                                                                ~~~~~~~~~

server/routes/reporting.ts:519:81 - error TS6133: 'endDate' is declared but its value is never read.

519 async function exportComplianceData(organizationId: number, startDate?: string, endDate?: string) {
                                                                                    ~~~~~~~

server/routes/reporting.ts:534:34 - error TS6133: 'organizationId' is declared but its value is never read.

534 async function buildCustomReport(organizationId: number, config: any) {
                                     ~~~~~~~~~~~~~~

server/routes/security.ts:1:48 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router, Request, Response } from '../../express-augmentations.ts';
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/security.ts:3:67 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { users, adminAuditLog, organizations, userSessions } from '@shared/schema';
                                                                    ~~~~~~~~~~~~~~~~

server/routes/security.ts:9:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

9 const router = Router();
                 ~~~~~~

  server/routes/security.ts:1:15
    1 import type { Router, Request, Response } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/stripeOAuth.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/stripeOAuth.ts:4:31 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

4 import { organizations } from '@shared/schema';
                                ~~~~~~~~~~~~~~~~

server/routes/stripeOAuth.ts:6:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

6 const router = Router();
                 ~~~~~~

  server/routes/stripeOAuth.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/stripeOAuth.ts:11:5 - error TS2322: Type '"2025-04-30.basil"' is not assignable to type '"2025-05-28.basil"'.

11     apiVersion: "2025-04-30.basil",
       ~~~~~~~~~~

server/routes/stripeOAuth.ts:16:38 - error TS7006: Parameter 'req' implicitly has an 'any' type.

16 router.get('/oauth/callback', async (req, res) => {
                                        ~~~

server/routes/stripeOAuth.ts:16:43 - error TS7006: Parameter 'res' implicitly has an 'any' type.

16 router.get('/oauth/callback', async (req, res) => {
                                             ~~~

server/routes/stripeOAuth.ts:51:40 - error TS7006: Parameter 'req' implicitly has an 'any' type.

51 router.post('/oauth/authorize', async (req, res) => {
                                          ~~~

server/routes/stripeOAuth.ts:51:45 - error TS7006: Parameter 'res' implicitly has an 'any' type.

51 router.post('/oauth/authorize', async (req, res) => {
                                               ~~~

server/routes/subscription-status.ts:10:17 - error TS7030: Not all code paths return a value.

10 router.get("/", async (req: Request, res: Response) => {
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/subscription-status.ts:12:24 - error TS2551: Property 'organization_id' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'. Did you mean 'organizationId'?

12         if (!req.user?.organization_id) {
                          ~~~~~~~~~~~~~~~

  server/routes/bookings.ts:114:13
    114             organizationId: string;
                    ~~~~~~~~~~~~~~
    'organizationId' is declared here.

server/routes/subscription-status.ts:15:61 - error TS2551: Property 'organization_id' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'. Did you mean 'organizationId'?

15         const status = await getSubscriptionStatus(req.user.organization_id);
                                                               ~~~~~~~~~~~~~~~

  server/routes/bookings.ts:114:13
    114             organizationId: string;
                    ~~~~~~~~~~~~~~
    'organizationId' is declared here.

server/routes/subscription-status.ts:24:29 - error TS7030: Not all code paths return a value.

24 router.get("/limits/trips", async (req: Request, res: Response) => {
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/subscription-status.ts:26:24 - error TS2551: Property 'organization_id' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'. Did you mean 'organizationId'?

26         if (!req.user?.organization_id) {
                          ~~~~~~~~~~~~~~~

  server/routes/bookings.ts:114:13
    114             organizationId: string;
                    ~~~~~~~~~~~~~~
    'organizationId' is declared here.

server/routes/subscription-status.ts:29:58 - error TS2551: Property 'organization_id' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'. Did you mean 'organizationId'?

29         const limitCheck = await checkTripLimit(req.user.organization_id);
                                                            ~~~~~~~~~~~~~~~

  server/routes/bookings.ts:114:13
    114             organizationId: string;
                    ~~~~~~~~~~~~~~
    'organizationId' is declared here.

server/routes/subscription-status.ts:37:29 - error TS7030: Not all code paths return a value.

37 router.get("/limits/users", async (req: Request, res: Response) => {
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/subscription-status.ts:39:24 - error TS2551: Property 'organization_id' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'. Did you mean 'organizationId'?

39         if (!req.user?.organization_id) {
                          ~~~~~~~~~~~~~~~

  server/routes/bookings.ts:114:13
    114             organizationId: string;
                    ~~~~~~~~~~~~~~
    'organizationId' is declared here.

server/routes/subscription-status.ts:42:58 - error TS2551: Property 'organization_id' does not exist on type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'. Did you mean 'organizationId'?

42         const limitCheck = await checkUserLimit(req.user.organization_id);
                                                            ~~~~~~~~~~~~~~~

  server/routes/bookings.ts:114:13
    114             organizationId: string;
                    ~~~~~~~~~~~~~~
    'organizationId' is declared here.

server/routes/superadmin.new.ts:1:21 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express from '../../express-augmentations.ts';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin.new.ts:18:13 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'adminUserId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'adminUserId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }[]'.

18             adminUserId,
               ~~~~~~~~~~~


server/routes/superadmin.new.ts:48:28 - error TS6133: 'req' is declared but its value is never read.

48     router.get('/health', (req, res) => {
                              ~~~

server/routes/superadmin.new.ts:48:28 - error TS7006: Parameter 'req' implicitly has an 'any' type.

48     router.get('/health', (req, res) => {
                              ~~~

server/routes/superadmin.new.ts:48:33 - error TS7006: Parameter 'res' implicitly has an 'any' type.

48     router.get('/health', (req, res) => {
                                   ~~~

server/routes/superadmin.ts:1:74 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express, { Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin.ts:94:28 - error TS6133: 'req' is declared but its value is never read.

94     router.get('/health', (req: Request, res: Response) => {
                              ~~~

server/routes/superadmin/audit-logs/audit-service.ts:14:13 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'admin_user_id' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'admin_user_id' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<unknown> | Placeholder<string, any> | undefined; id?: string | SQL<...> | Placeholder<...> | undefined; ... 6 more ...; entityId?: string | ... 3 more ... | undefined; }[]'.

14             admin_user_id: adminUserId,
               ~~~~~~~~~~~~~


server/routes/superadmin/audit-logs/audit-service.ts:43:26 - error TS2304: Cannot find name 'sql'.

43         whereClause.push(sql `action = ${action}`);
                            ~~~

server/routes/superadmin/audit-logs/audit-service.ts:45:26 - error TS2304: Cannot find name 'sql'.

45         whereClause.push(sql `target_type = ${targetType}`);
                            ~~~

server/routes/superadmin/audit-logs/audit-service.ts:47:26 - error TS2304: Cannot find name 'sql'.

47         whereClause.push(sql `admin_user_id = ${adminUserId}`);
                            ~~~

server/routes/superadmin/audit-logs/audit-service.ts:49:26 - error TS2304: Cannot find name 'sql'.

49         whereClause.push(sql `target_id = ${targetId.toString()}`);
                            ~~~

server/routes/superadmin/audit-logs/audit-service.ts:50:18 - error TS2488: Type '{ count: any; }' must have a '[Symbol.iterator]()' method that returns an iterator.

50     const [logs, [{ count }]] = await Promise.all([
                    ~~~~~~~~~~~

server/routes/superadmin/audit-logs/audit-service.ts:54:45 - error TS2304: Cannot find name 'and'.

54             .where(whereClause.length > 0 ? and(...whereClause) : undefined)
                                               ~~~

server/routes/superadmin/audit-logs/audit-service.ts:55:22 - error TS2304: Cannot find name 'desc'.

55             .orderBy(desc(superadminAuditLogs.created_at))
                        ~~~~

server/routes/superadmin/audit-logs/audit-service.ts:55:47 - error TS2551: Property 'created_at' does not exist on type 'PgTableWithColumns<{ name: "audit_logs"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "audit_logs"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; createdAt: PgColum...'. Did you mean 'createdAt'?

55             .orderBy(desc(superadminAuditLogs.created_at))
                                                 ~~~~~~~~~~

server/routes/superadmin/audit-logs/audit-service.ts:59:30 - error TS2304: Cannot find name 'sql'.

59             .select({ count: sql<number> `count(*)` })
                                ~~~

server/routes/superadmin/audit-logs/audit-service.ts:61:45 - error TS2304: Cannot find name 'and'.

61             .where(whereClause.length > 0 ? and(...whereClause) : undefined)
                                               ~~~

server/routes/superadmin/audit-logs/index.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/audit-logs/index.ts:4:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

4 const router = Router();
                 ~~~~~~

  server/routes/superadmin/audit-logs/index.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/superadmin/audit-logs/index.ts:10:43 - error TS7006: Parameter 'req' implicitly has an 'any' type.

10 router.get('/', requireSuperadmin, async (req, res) => {
                                             ~~~

server/routes/superadmin/audit-logs/index.ts:10:48 - error TS7006: Parameter 'res' implicitly has an 'any' type.

10 router.get('/', requireSuperadmin, async (req, res) => {
                                                  ~~~

server/routes/superadmin/billing/controllers.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:4:27 - error TS2307: Cannot find module '../../../db/schema/auditLogs.ts' or its corresponding type declarations.

4 import { auditLogs } from '../../../db/schema/auditLogs.ts';
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:13:42 - error TS6133: 'req' is declared but its value is never read.

13 export const getBillingOverview = async (req: Request, res: Response) => {
                                            ~~~

server/routes/superadmin/billing/controllers.ts:104:39 - error TS2339: Property 'currentPeriodEnd' does not exist on type '{ id: string; name: string; slug: string; plan: "free" | "pro" | "enterprise"; settings: { timezone?: string | undefined; locale?: string | undefined; whiteLabel?: { enabled: boolean; logoUrl?: string | undefined; primaryColor?: string | undefined; } | undefined; } | null; ... 14 more ...; updatedAt: Date; }'.

104                 currentPeriodEnd: org.currentPeriodEnd,
                                          ~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:153:47 - error TS2551: Property 'stripeSubscriptionItemId' does not exist on type '{ id: string; name: string; slug: string; plan: "free" | "pro" | "enterprise"; settings: { timezone?: string | undefined; locale?: string | undefined; whiteLabel?: { enabled: boolean; logoUrl?: string | undefined; primaryColor?: string | undefined; } | undefined; } | null; ... 14 more ...; updatedAt: Date; }'. Did you mean 'stripeSubscriptionId'?

153         if (!org.stripeSubscriptionId || !org.stripeSubscriptionItemId) {
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:164:29 - error TS2551: Property 'stripeSubscriptionItemId' does not exist on type '{ id: string; name: string; slug: string; plan: "free" | "pro" | "enterprise"; settings: { timezone?: string | undefined; locale?: string | undefined; whiteLabel?: { enabled: boolean; logoUrl?: string | undefined; primaryColor?: string | undefined; } | undefined; } | null; ... 14 more ...; updatedAt: Date; }'. Did you mean 'stripeSubscriptionId'?

164                     id: org.stripeSubscriptionItemId,
                                ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:175:13 - error TS2561: Object literal may only specify known properties, but 'stripeSubscriptionItemId' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; slug?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; subscriptionStatus?: "active" | ... 9 more ... | undefined; }'. Did you mean to write 'stripeSubscriptionId'?

175             stripeSubscriptionItemId: subscription.items.data[0].id,
                ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:230:13 - error TS2353: Object literal may only specify known properties, and 'coupon' does not exist in type 'SubscriptionUpdateParams'.

230             coupon: couponCode as string,
                ~~~~~~

server/routes/superadmin/billing/controllers.ts:234:50 - error TS2339: Property 'id' does not exist on type 'string | Discount'.
  Property 'id' does not exist on type 'string'.

234             id: updatedSubscription.discounts[0].id,
                                                     ~~

server/routes/superadmin/billing/controllers.ts:235:54 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

235             coupon: updatedSubscription.discounts[0].coupon ? {
                                                         ~~~~~~

server/routes/superadmin/billing/controllers.ts:236:54 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

236                 id: updatedSubscription.discounts[0].coupon.id,
                                                         ~~~~~~

server/routes/superadmin/billing/controllers.ts:237:66 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

237                 name: 'name' in updatedSubscription.discounts[0].coupon ? String(updatedSubscription.discounts[0].coupon.name) : undefined,
                                                                     ~~~~~~

server/routes/superadmin/billing/controllers.ts:237:115 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

237                 name: 'name' in updatedSubscription.discounts[0].coupon ? String(updatedSubscription.discounts[0].coupon.name) : undefined,
                                                                                                                      ~~~~~~

server/routes/superadmin/billing/controllers.ts:238:80 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

238                 percent_off: 'percent_off' in updatedSubscription.discounts[0].coupon ? Number(updatedSubscription.discounts[0].coupon.percent_off) : null,
                                                                                   ~~~~~~

server/routes/superadmin/billing/controllers.ts:238:129 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

238                 percent_off: 'percent_off' in updatedSubscription.discounts[0].coupon ? Number(updatedSubscription.discounts[0].coupon.percent_off) : null,
                                                                                                                                    ~~~~~~

server/routes/superadmin/billing/controllers.ts:239:78 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

239                 amount_off: 'amount_off' in updatedSubscription.discounts[0].coupon ? Number(updatedSubscription.discounts[0].coupon.amount_off) : null,
                                                                                 ~~~~~~

server/routes/superadmin/billing/controllers.ts:239:127 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

239                 amount_off: 'amount_off' in updatedSubscription.discounts[0].coupon ? Number(updatedSubscription.discounts[0].coupon.amount_off) : null,
                                                                                                                                  ~~~~~~

server/routes/superadmin/billing/controllers.ts:240:74 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

240                 duration: 'duration' in updatedSubscription.discounts[0].coupon ? String(updatedSubscription.discounts[0].coupon.duration) : null,
                                                                             ~~~~~~

server/routes/superadmin/billing/controllers.ts:240:123 - error TS2339: Property 'coupon' does not exist on type 'string | Discount'.
  Property 'coupon' does not exist on type 'string'.

240                 duration: 'duration' in updatedSubscription.discounts[0].coupon ? String(updatedSubscription.discounts[0].coupon.duration) : null,
                                                                                                                              ~~~~~~

server/routes/superadmin/billing/controllers.ts:242:53 - error TS2339: Property 'start' does not exist on type 'string | Discount'.
  Property 'start' does not exist on type 'string'.

242             start: updatedSubscription.discounts[0].start,
                                                        ~~~~~

server/routes/superadmin/billing/controllers.ts:243:51 - error TS2339: Property 'end' does not exist on type 'string | Discount'.
  Property 'end' does not exist on type 'string'.

243             end: updatedSubscription.discounts[0].end || null,
                                                      ~~~

server/routes/superadmin/billing/controllers.ts:292:47 - error TS2339: Property 'defaultPaymentMethodId' does not exist on type '{ id: string; name: string; slug: string; plan: "free" | "pro" | "enterprise"; settings: { timezone?: string | undefined; locale?: string | undefined; whiteLabel?: { enabled: boolean; logoUrl?: string | undefined; primaryColor?: string | undefined; } | undefined; } | null; ... 14 more ...; updatedAt: Date; }'.

292                 is_default: method.id === org.defaultPaymentMethodId,
                                                  ~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:319:17 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(params?: CustomerCreateParams | undefined, options?: RequestOptions | undefined): Promise<Response<Customer>>', gave the following error.
    Type 'string | null' is not assignable to type 'string | undefined'.
      Type 'null' is not assignable to type 'string | undefined'.
  Overload 2 of 2, '(options?: RequestOptions | undefined): Promise<Response<Customer>>', gave the following error.
    Object literal may only specify known properties, and 'email' does not exist in type 'RequestOptions'.

319                 email: org.billingEmail,
                    ~~~~~


server/routes/superadmin/billing/controllers.ts:352:17 - error TS2353: Object literal may only specify known properties, and 'defaultPaymentMethodId' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; slug?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; subscriptionStatus?: "active" | ... 9 more ... | undefined; }'.

352                 defaultPaymentMethodId: paymentMethodId,
                    ~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/controllers.ts:400:13 - error TS2353: Object literal may only specify known properties, and 'defaultPaymentMethodId' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; slug?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; subscriptionStatus?: "active" | ... 9 more ... | undefined; }'.

400             defaultPaymentMethodId: paymentMethodId,
                ~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/index.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/billing/index.ts:5:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

5 const router = Router();
                 ~~~~~~

  server/routes/superadmin/billing/index.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/superadmin/billing/validators.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/dashboard/index.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/dashboard/index.ts:4:37 - error TS2307: Cannot find module '../superadmin.ts' or its corresponding type declarations.

4 import { logSuperadminAction } from '../superadmin.ts';
                                      ~~~~~~~~~~~~~~~~~~

server/routes/superadmin/dashboard/index.ts:6:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

6 const router = Router();
                 ~~~~~~

  server/routes/superadmin/dashboard/index.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/superadmin/dashboard/index.ts:8:33 - error TS6133: 'req' is declared but its value is never read.

8 router.get('/analytics', async (req, res) => {
                                  ~~~

server/routes/superadmin/dashboard/index.ts:8:33 - error TS7006: Parameter 'req' implicitly has an 'any' type.

8 router.get('/analytics', async (req, res) => {
                                  ~~~

server/routes/superadmin/dashboard/index.ts:8:38 - error TS7006: Parameter 'res' implicitly has an 'any' type.

8 router.get('/analytics', async (req, res) => {
                                       ~~~

server/routes/superadmin/dashboard/index.ts:57:24 - error TS6133: 'req' is declared but its value is never read.

57 router.get('/health', (req, res) => {
                          ~~~

server/routes/superadmin/dashboard/index.ts:57:24 - error TS7006: Parameter 'req' implicitly has an 'any' type.

57 router.get('/health', (req, res) => {
                          ~~~

server/routes/superadmin/dashboard/index.ts:57:29 - error TS7006: Parameter 'res' implicitly has an 'any' type.

57 router.get('/health', (req, res) => {
                               ~~~

server/routes/superadmin/feature-flags/controllers.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/feature-flags/controllers.ts:3:10 - error TS2305: Module '"../../../db/schema.js"' has no exported member 'superadminFeatureFlags'.

3 import { superadminFeatureFlags, organizationFeatureFlags, organizations } from '../../../db/schema.js';
           ~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/feature-flags/controllers.ts:3:34 - error TS2305: Module '"../../../db/schema.js"' has no exported member 'organizationFeatureFlags'.

3 import { superadminFeatureFlags, organizationFeatureFlags, organizations } from '../../../db/schema.js';
                                   ~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/feature-flags/controllers.ts:7:39 - error TS6133: 'req' is declared but its value is never read.

7 export const getFeatureFlags = async (req: Request, res: Response) => {
                                        ~~~

server/routes/superadmin/index.ts:1:19 - error TS1484: 'Request' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import express, { Request, Response, RequestHandler } from '../../express-augmentations.ts';
                    ~~~~~~~

server/routes/superadmin/index.ts:1:28 - error TS1484: 'Response' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import express, { Request, Response, RequestHandler } from '../../express-augmentations.ts';
                             ~~~~~~~~

server/routes/superadmin/index.ts:1:38 - error TS2614: Module '"../../express-augmentations.ts"' has no exported member 'RequestHandler'. Did you mean to use 'import RequestHandler from "../../express-augmentations.ts"' instead?

1 import express, { Request, Response, RequestHandler } from '../../express-augmentations.ts';
                                       ~~~~~~~~~~~~~~

server/routes/superadmin/middleware/organizationContext.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/middleware/superadmin.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import { Response, NextFunction } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/organizations/controllers.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/organizations/controllers.ts:7:40 - error TS6133: 'req' is declared but its value is never read.

7 export const getOrganizations = async (req: Request, res: Response) => {
                                         ~~~

server/routes/superadmin/organizations/index.ts:6:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

6 const router = Router();
                 ~~~~~~

  server/routes/superadmin/organizations/index.ts:1:15
    1 import type { Router } from 'express';
                    ~~~~~~
    'Router' was imported here.

server/routes/superadmin/routes/audit-logs.ts:1:21 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express from '../../express-augmentations.ts';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/routes/audit-logs.ts:4:18 - error TS7006: Parameter 'req' implicitly has an 'any' type.

4 router.get('/', (req, res) => {
                   ~~~

server/routes/superadmin/routes/audit-logs.ts:4:23 - error TS7006: Parameter 'res' implicitly has an 'any' type.

4 router.get('/', (req, res) => {
                        ~~~

server/routes/superadmin/routes/audit-logs.ts:12:21 - error TS7006: Parameter 'req' implicitly has an 'any' type.

12 router.get('/:id', (req, res) => {
                       ~~~

server/routes/superadmin/routes/audit-logs.ts:12:26 - error TS7006: Parameter 'res' implicitly has an 'any' type.

12 router.get('/:id', (req, res) => {
                            ~~~

server/routes/superadmin/routes/audit-logs.ts:18:24 - error TS7006: Parameter '_req' implicitly has an 'any' type.

18 router.get('/export', (_req, res) => {
                          ~~~~

server/routes/superadmin/routes/audit-logs.ts:18:30 - error TS7006: Parameter 'res' implicitly has an 'any' type.

18 router.get('/export', (_req, res) => {
                                ~~~

server/routes/superadmin/routes/billing.ts:1:21 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express from '../../express-augmentations.ts';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/routes/billing.ts:4:18 - error TS7006: Parameter '_req' implicitly has an 'any' type.

4 router.get('/', (_req, res) => {
                   ~~~~

server/routes/superadmin/routes/billing.ts:4:24 - error TS7006: Parameter 'res' implicitly has an 'any' type.

4 router.get('/', (_req, res) => {
                         ~~~

server/routes/superadmin/routes/billing.ts:8:21 - error TS7006: Parameter '_req' implicitly has an 'any' type.

8 router.get('/:id', (_req, res) => {
                      ~~~~

server/routes/superadmin/routes/billing.ts:8:27 - error TS7006: Parameter 'res' implicitly has an 'any' type.

8 router.get('/:id', (_req, res) => {
                            ~~~

server/routes/superadmin/routes/billing.ts:12:19 - error TS7006: Parameter '_req' implicitly has an 'any' type.

12 router.post('/', (_req, res) => {
                     ~~~~

server/routes/superadmin/routes/billing.ts:12:25 - error TS7006: Parameter 'res' implicitly has an 'any' type.

12 router.post('/', (_req, res) => {
                           ~~~

server/routes/superadmin/routes/billing.ts:16:21 - error TS7006: Parameter 'req' implicitly has an 'any' type.

16 router.put('/:id', (req, res) => {
                       ~~~

server/routes/superadmin/routes/billing.ts:16:26 - error TS7006: Parameter 'res' implicitly has an 'any' type.

16 router.put('/:id', (req, res) => {
                            ~~~

server/routes/superadmin/routes/feature-flags.ts:1:21 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express from '../../express-augmentations.ts';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/routes/feature-flags.ts:4:18 - error TS7006: Parameter '_req' implicitly has an 'any' type.

4 router.get('/', (_req, res) => {
                   ~~~~

server/routes/superadmin/routes/feature-flags.ts:4:24 - error TS7006: Parameter 'res' implicitly has an 'any' type.

4 router.get('/', (_req, res) => {
                         ~~~

server/routes/superadmin/routes/feature-flags.ts:8:23 - error TS7006: Parameter '_req' implicitly has an 'any' type.

8 router.get('/:name', (_req, res) => {
                        ~~~~

server/routes/superadmin/routes/feature-flags.ts:8:29 - error TS7006: Parameter 'res' implicitly has an 'any' type.

8 router.get('/:name', (_req, res) => {
                              ~~~

server/routes/superadmin/routes/feature-flags.ts:12:19 - error TS7006: Parameter '_req' implicitly has an 'any' type.

12 router.post('/', (_req, res) => {
                     ~~~~

server/routes/superadmin/routes/feature-flags.ts:12:25 - error TS7006: Parameter 'res' implicitly has an 'any' type.

12 router.post('/', (_req, res) => {
                           ~~~

server/routes/superadmin/routes/feature-flags.ts:16:26 - error TS7006: Parameter '_req' implicitly has an 'any' type.

16 router.delete('/:name', (_req, res) => {
                            ~~~~

server/routes/superadmin/routes/feature-flags.ts:16:32 - error TS7006: Parameter 'res' implicitly has an 'any' type.

16 router.delete('/:name', (_req, res) => {
                                  ~~~

server/routes/superadmin/routes/index.ts:1:21 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express from '../../express-augmentations.ts';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/routes/organizations.ts:1:21 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express from '../../express-augmentations.ts';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/superadmin/routes/organizations.ts:4:18 - error TS7006: Parameter '_req' implicitly has an 'any' type.

4 router.get('/', (_req, res) => {
                   ~~~~

server/routes/superadmin/routes/organizations.ts:4:24 - error TS7006: Parameter 'res' implicitly has an 'any' type.

4 router.get('/', (_req, res) => {
                         ~~~

server/routes/superadmin/routes/organizations.ts:9:21 - error TS7006: Parameter 'req' implicitly has an 'any' type.

9 router.get('/:id', (req, res) => {
                      ~~~

server/routes/superadmin/routes/organizations.ts:9:26 - error TS7006: Parameter 'res' implicitly has an 'any' type.

9 router.get('/:id', (req, res) => {
                           ~~~

server/routes/superadmin/routes/organizations.ts:14:19 - error TS7006: Parameter '_req' implicitly has an 'any' type.

14 router.post('/', (_req, res) => {
                     ~~~~

server/routes/superadmin/routes/organizations.ts:14:25 - error TS7006: Parameter 'res' implicitly has an 'any' type.

14 router.post('/', (_req, res) => {
                           ~~~

server/routes/superadmin/routes/organizations.ts:19:21 - error TS7006: Parameter '_req' implicitly has an 'any' type.

19 router.put('/:id', (_req, res) => {
                       ~~~~

server/routes/superadmin/routes/organizations.ts:19:27 - error TS7006: Parameter 'res' implicitly has an 'any' type.

19 router.put('/:id', (_req, res) => {
                             ~~~

server/routes/superadmin/routes/organizations.ts:24:24 - error TS7006: Parameter '_req' implicitly has an 'any' type.

24 router.delete('/:id', (_req, res) => {
                          ~~~~

server/routes/superadmin/routes/organizations.ts:24:30 - error TS7006: Parameter 'res' implicitly has an 'any' type.

24 router.delete('/:id', (_req, res) => {
                                ~~~

server/routes/system-metrics.ts:1:30 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Express } from '../../express-augmentations.ts';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/system-metrics.ts:4:43 - error TS2345: Argument of type '"superadmin"' is not assignable to parameter of type 'UserRole | UserRole[]'.

4 const requireSuperadminRole = requireRole('superadmin');
                                            ~~~~~~~~~~~~

server/routes/system-metrics.ts:169:66 - error TS6133: 'req' is declared but its value is never read.

169     app.get("/api/system/metrics", requireSuperadminRole, async (req, res) => {
                                                                     ~~~

server/routes/system-metrics.ts:169:66 - error TS7006: Parameter 'req' implicitly has an 'any' type.

169     app.get("/api/system/metrics", requireSuperadminRole, async (req, res) => {
                                                                     ~~~

server/routes/system-metrics.ts:169:71 - error TS7006: Parameter 'res' implicitly has an 'any' type.

169     app.get("/api/system/metrics", requireSuperadminRole, async (req, res) => {
                                                                          ~~~

server/routes/system-metrics.ts:252:67 - error TS6133: 'req' is declared but its value is never read.

252     app.post("/api/system/metrics/reset", requireSuperadminRole, (req, res) => {
                                                                      ~~~

server/routes/system-metrics.ts:252:67 - error TS7006: Parameter 'req' implicitly has an 'any' type.

252     app.post("/api/system/metrics/reset", requireSuperadminRole, (req, res) => {
                                                                      ~~~

server/routes/system-metrics.ts:252:72 - error TS7006: Parameter 'res' implicitly has an 'any' type.

252     app.post("/api/system/metrics/reset", requireSuperadminRole, (req, res) => {
                                                                           ~~~

server/routes/system-metrics.ts:261:73 - error TS6133: 'req' is declared but its value is never read.

261     app.get("/api/system/health-summary", requireSuperadminRole, async (req, res) => {
                                                                            ~~~

server/routes/system-metrics.ts:261:73 - error TS7006: Parameter 'req' implicitly has an 'any' type.

261     app.get("/api/system/health-summary", requireSuperadminRole, async (req, res) => {
                                                                            ~~~

server/routes/system-metrics.ts:261:78 - error TS7006: Parameter 'res' implicitly has an 'any' type.

261     app.get("/api/system/health-summary", requireSuperadminRole, async (req, res) => {
                                                                                 ~~~

server/routes/test.routes.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/test.routes.ts:4:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

4 const router = Router();
                 ~~~~~~

  server/routes/test.routes.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/test.routes.ts:18:29 - error TS6133: 'req' is declared but its value is never read.

18 router.get('/performance', (req, res) => {
                               ~~~

server/routes/test.routes.ts:18:29 - error TS7006: Parameter 'req' implicitly has an 'any' type.

18 router.get('/performance', (req, res) => {
                               ~~~

server/routes/test.routes.ts:18:34 - error TS7006: Parameter 'res' implicitly has an 'any' type.

18 router.get('/performance', (req, res) => {
                                    ~~~

server/routes/test.routes.ts:38:51 - error TS7006: Parameter 'req' implicitly has an 'any' type.

38 router.post('/validation', validate(testSchema), (req, res) => {
                                                     ~~~

server/routes/test.routes.ts:38:56 - error TS7006: Parameter 'res' implicitly has an 'any' type.

38 router.post('/validation', validate(testSchema), (req, res) => {
                                                          ~~~

server/routes/test.routes.ts:50:23 - error TS6133: 'req' is declared but its value is never read.

50 router.get('/error', (req, res, next) => {
                         ~~~

server/routes/test.routes.ts:50:23 - error TS7006: Parameter 'req' implicitly has an 'any' type.

50 router.get('/error', (req, res, next) => {
                         ~~~

server/routes/test.routes.ts:50:28 - error TS6133: 'res' is declared but its value is never read.

50 router.get('/error', (req, res, next) => {
                              ~~~

server/routes/test.routes.ts:50:28 - error TS7006: Parameter 'res' implicitly has an 'any' type.

50 router.get('/error', (req, res, next) => {
                              ~~~

server/routes/test.routes.ts:50:33 - error TS7006: Parameter 'next' implicitly has an 'any' type.

50 router.get('/error', (req, res, next) => {
                                   ~~~~

server/routes/trips.ts:1:48 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router, Request, Response } from '../../express-augmentations.ts';
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/trips.ts:7:42 - error TS2307: Cannot find module '../middleware/fieldTransform.js' or its corresponding type declarations.

7 import { fieldTransformMiddleware } from '../middleware/fieldTransform.js';
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/trips.ts:18:13 - error TS2687: All declarations of 'user' must have identical modifiers.

18             user: {
               ~~~~

server/routes/trips.ts:18:13 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'User | undefined', but here has type '{ userId: string; organizationId: string; role: string; email: string; displayName?: string | undefined; }'.

18             user: {
               ~~~~

  server/types/jwt.d.ts:23:7
    23       user?: User;
             ~~~~
    'user' was also declared here.

server/routes/trips.ts:57:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

57 const router = Router();
                  ~~~~~~

  server/routes/trips.ts:1:15
    1 import type { Router, Request, Response } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/trips.ts:63:90 - error TS2554: Expected 1 arguments, but got 2.

63 router.get('/', (req: Request, res: Response) => tripController.getTrips(req as Request, res));
                                                                                            ~~~

server/routes/trips.ts:65:108 - error TS2554: Expected 1 arguments, but got 2.

65 router.get('/corporate', (req: Request, res: Response) => tripController.getCorporateTrips(req as Request, res));
                                                                                                              ~~~

server/routes/trips.ts:76:36 - error TS2554: Expected 2 arguments, but got 1.

76         const trip = await storage.getTrip(tripId);
                                      ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:84:37 - error TS2339: Property 'getTodosByTripId' does not exist on type 'MemStorage'.

84         const todos = await storage.getTodosByTripId(tripId);
                                       ~~~~~~~~~~~~~~~~

server/routes/trips.ts:102:36 - error TS2554: Expected 2 arguments, but got 1.

102         const trip = await storage.getTrip(tripId);
                                       ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:110:37 - error TS2339: Property 'getNotesByTripId' does not exist on type 'MemStorage'.

110         const notes = await storage.getNotesByTripId(tripId);
                                        ~~~~~~~~~~~~~~~~

server/routes/trips.ts:128:36 - error TS2554: Expected 2 arguments, but got 1.

128         const trip = await storage.getTrip(tripId);
                                       ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:145:85 - error TS2554: Expected 1 arguments, but got 2.

145 router.get('/:id', (req: Request, res: Response) => tripController.getTripById(req, res));
                                                                                        ~~~

server/routes/trips.ts:168:95 - error TS2339: Property 'partial' does not exist on type 'ZodType<Partial<TableData>, ZodTypeDef, Partial<TableData>>'.

168 router.put("/:id", validateAndSanitizeRequest({ params: idParamSchema, body: insertTripSchema.partial() }), async (req: Request, res: Response) => {
                                                                                                  ~~~~~~~

server/routes/trips.ts:172:44 - error TS2554: Expected 2 arguments, but got 1.

172         const existingTrip = await storage.getTrip(tripId);
                                               ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:181:43 - error TS2554: Expected 3 arguments, but got 2.

181         const updatedTrip = await storage.updateTrip(tripId, updateData);
                                              ~~~~~~~~~~

  server/storage/implementations/MemStorage.ts:109:60
    109     async updateTrip(_id: string, _organizationId: string, _trip: Partial<InsertTrip>): Promise<Trip | undefined> {
                                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_trip' was not provided.

server/routes/trips.ts:202:44 - error TS2554: Expected 2 arguments, but got 1.

202         const existingTrip = await storage.getTrip(tripId);
                                               ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:210:39 - error TS2554: Expected 2 arguments, but got 1.

210         const success = await storage.deleteTrip(tripId);
                                          ~~~~~~~~~~

  server/storage/implementations/MemStorage.ts:112:35
    112     async deleteTrip(_id: string, _organizationId: string): Promise<boolean> {
                                          ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:227:36 - error TS2554: Expected 2 arguments, but got 1.

227         const trip = await storage.getTrip(tripId);
                                       ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:238:21 - error TS2339: Property 'getTodosByTripId' does not exist on type 'MemStorage'.

238             storage.getTodosByTripId(tripId),
                        ~~~~~~~~~~~~~~~~

server/routes/trips.ts:239:21 - error TS2339: Property 'getNotesByTripId' does not exist on type 'MemStorage'.

239             storage.getNotesByTripId(tripId)
                        ~~~~~~~~~~~~~~~~

server/routes/trips.ts:261:36 - error TS2554: Expected 2 arguments, but got 1.

261         const trip = await storage.getTrip(tripId);
                                       ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:309:36 - error TS2554: Expected 2 arguments, but got 1.

309         const trip = await storage.getTrip(tripId);
                                       ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:332:36 - error TS2554: Expected 2 arguments, but got 1.

332         const trip = await storage.getTrip(tripId);
                                       ~~~~~~~

  server/storage/implementations/MemStorage.ts:91:32
    91     async getTrip(_id: string, _organizationId: string): Promise<Trip | undefined> {
                                      ~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_organizationId' was not provided.

server/routes/trips.ts:346:43 - error TS2554: Expected 3 arguments, but got 2.

346         const updatedTrip = await storage.updateTrip(tripId, {
                                              ~~~~~~~~~~

  server/storage/implementations/MemStorage.ts:109:60
    109     async updateTrip(_id: string, _organizationId: string, _trip: Partial<InsertTrip>): Promise<Trip | undefined> {
                                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~
    An argument for '_trip' was not provided.

server/routes/v1/index.ts:5:15 - error TS2614: Module '"../../express-augmentations.ts"' has no exported member 'Express'. Did you mean to use 'import Express from "../../express-augmentations.ts"' instead?

5 import type { Express } from '../../express-augmentations.ts';
                ~~~~~~~

server/routes/v1/index.ts:10:13 - error TS6133: 'req' is declared but its value is never read.

10     return (req: any, res: any, next: any) => {
               ~~~

server/routes/v1/index.ts:30:32 - error TS6133: 'req' is declared but its value is never read.

30     app.get('/api/v1/health', (req, res) => {
                                  ~~~

server/routes/v1/index.ts:30:32 - error TS7006: Parameter 'req' implicitly has an 'any' type.

30     app.get('/api/v1/health', (req, res) => {
                                  ~~~

server/routes/v1/index.ts:30:37 - error TS7006: Parameter 'res' implicitly has an 'any' type.

30     app.get('/api/v1/health', (req, res) => {
                                       ~~~

server/routes/v1/index.ts:43:25 - error TS6133: 'req' is declared but its value is never read.

43     app.use('/api/v2', (req, res) => {
                           ~~~

server/routes/v1/index.ts:43:25 - error TS7006: Parameter 'req' implicitly has an 'any' type.

43     app.use('/api/v2', (req, res) => {
                           ~~~

server/routes/v1/index.ts:43:30 - error TS7006: Parameter 'res' implicitly has an 'any' type.

43     app.use('/api/v2', (req, res) => {
                                ~~~

server/routes/v1/index.ts:56:22 - error TS7006: Parameter 'req' implicitly has an 'any' type.

56     app.use('/api', (req, res, next) => {
                        ~~~

server/routes/v1/index.ts:56:27 - error TS7006: Parameter 'res' implicitly has an 'any' type.

56     app.use('/api', (req, res, next) => {
                             ~~~

server/routes/v1/index.ts:56:32 - error TS7006: Parameter 'next' implicitly has an 'any' type.

56     app.use('/api', (req, res, next) => {
                                  ~~~~

server/routes/webhooks.ts:1:62 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router, Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/webhooks.ts:38:16 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

38 const router = Router();
                  ~~~~~~

  server/routes/webhooks.ts:1:15
    1 import type { Router, Request, Response, NextFunction } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/routes/webhooks.ts:43:35 - error TS1361: 'ConfigService' cannot be used as a value because it was imported using 'import type'.

43         const configService = new ConfigService();
                                     ~~~~~~~~~~~~~

  server/routes/webhooks.ts:6:15
    6 import type { ConfigService } from '@nestjs/config';
                    ~~~~~~~~~~~~~
    'ConfigService' was imported here.

server/routes/webhooks.ts:44:24 - error TS2554: Expected 2 arguments, but got 1.

44         emailService = new NodemailerEmailService(configService);
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/src/email/services/nodemailer-email.service.ts:19:64
    19     constructor(private readonly configService: ConfigService, private readonly errorService: ErrorService) {
                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    An argument for 'errorService' was not provided.

server/routes/webhooks.ts:44:28 - error TS1361: 'NodemailerEmailService' cannot be used as a value because it was imported using 'import type'.

44         emailService = new NodemailerEmailService(configService);
                              ~~~~~~~~~~~~~~~~~~~~~~

  server/routes/webhooks.ts:5:15
    5 import type { NodemailerEmailService } from '../src/email/services/nodemailer-email.service.ts';
                    ~~~~~~~~~~~~~~~~~~~~~~
    'NodemailerEmailService' was imported here.

server/routes/webhooks.ts:106:39 - error TS2339: Property 'invoice' does not exist on type 'PaymentIntent'.

106                     if (paymentIntent.invoice) {
                                          ~~~~~~~

server/routes/webhooks.ts:107:64 - error TS2339: Property 'invoice' does not exist on type 'PaymentIntent'.

107                         const invoiceId = typeof paymentIntent.invoice === 'string'
                                                                   ~~~~~~~

server/routes/webhooks.ts:108:45 - error TS2339: Property 'invoice' does not exist on type 'PaymentIntent'.

108                             ? paymentIntent.invoice
                                                ~~~~~~~

server/routes/webhooks.ts:109:45 - error TS2339: Property 'invoice' does not exist on type 'PaymentIntent'.

109                             : paymentIntent.invoice.id;
                                                ~~~~~~~

server/routes/webhooks.ts:135:56 - error TS2554: Expected 2 arguments, but got 1.

135                                     await emailService.sendPaymentReceiptEmail({
                                                           ~~~~~~~~~~~~~~~~~~~~~~~

  server/src/email/services/nodemailer-email.service.ts:87:50
    87     async sendPaymentReceiptEmail(email: string, options: PaymentReceiptEmailOptions): Promise<void> {
                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    An argument for 'options' was not provided.

server/routes/webhooks.ts:231:37 - error TS2551: Property 'stripe_connect_account_id' does not exist on type 'PgTableWithColumns<{ name: "organizations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "organizations"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<...>; }; ...'. Did you mean 'stripeConnectAccountId'?

231             .where(eq(organizations.stripe_connect_account_id, account.id));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/webhooks.ts:257:37 - error TS2551: Property 'stripe_connect_account_id' does not exist on type 'PgTableWithColumns<{ name: "organizations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "organizations"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<...>; }; ...'. Did you mean 'stripeConnectAccountId'?

257             .where(eq(organizations.stripe_connect_account_id, capability.account as string));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/webhooks.ts:292:37 - error TS2551: Property 'stripe_connect_account_id' does not exist on type 'PgTableWithColumns<{ name: "organizations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "organizations"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<...>; }; ...'. Did you mean 'stripeConnectAccountId'?

292             .where(eq(organizations.stripe_connect_account_id, externalAccount.account as string));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/webhooks.ts:317:37 - error TS2551: Property 'stripe_connect_account_id' does not exist on type 'PgTableWithColumns<{ name: "organizations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "organizations"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<...>; }; ...'. Did you mean 'stripeConnectAccountId'?

317             .where(eq(organizations.stripe_connect_account_id, payout.destination as string));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/webhooks.ts:326:13 - error TS2561: Object literal may only specify known properties, but 'stripe_payout_id' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; slug?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; subscriptionStatus?: "active" | ... 9 more ... | undefined; }'. Did you mean to write 'stripePayoutId'?

326             stripe_payout_id: payout.id,
                ~~~~~~~~~~~~~~~~

server/routes/webhooks.ts:343:37 - error TS2551: Property 'stripe_connect_account_id' does not exist on type 'PgTableWithColumns<{ name: "organizations"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "organizations"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<...>; }; ...'. Did you mean 'stripeConnectAccountId'?

343             .where(eq(organizations.stripe_connect_account_id, payout.destination as string));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/webhooks.ts:352:13 - error TS2561: Object literal may only specify known properties, but 'stripe_payout_id' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; slug?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; subscriptionStatus?: "active" | ... 9 more ... | undefined; }'. Did you mean to write 'stripePayoutId'?

352             stripe_payout_id: payout.id,
                ~~~~~~~~~~~~~~~~

server/routes/whiteLabelSimplified.ts:1:40 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Express, Response } from '../../express-augmentations.ts';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/routes/whiteLabelSimplified.ts:3:58 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { organizations, users, whiteLabelSettings } from "@shared/schema";
                                                           ~~~~~~~~~~~~~~~~

server/routes/whiteLabelStatus.ts:3:66 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { organizations, whiteLabelSettings, customDomains } from "@shared/schema";
                                                                   ~~~~~~~~~~~~~~~~

server/routes/whiteLabelStatus.ts:12:40 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => void | Response<any, Record<string, any>>' is not assignable to parameter of type 'Application<Record<string, any>>'.
      Type '(req: CustomRequest, res: Response<any, Record<string, any>>, next: NextFunction) => void | Response<any, Record<string, any>>' is missing the following properties from type 'Application<Record<string, any>>': init, defaultConfiguration, engine, set, and 63 more.

12     app.use('/api/white-label/status', injectOrganizationContext);
                                          ~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:164:5
    164     (path: PathParams, subApplication: Application): T;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    The last overload is declared here.

server/routes/whiteLabelStatus.ts:14:40 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'Application<Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response<any, Record<string, any>>, next: NextFunction) => Promise<void>' is missing the following properties from type 'Application<Record<string, any>>': init, defaultConfiguration, engine, set, and 63 more.

14     app.use('/api/white-label/status', enforceWhiteLabelAccess());
                                          ~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:164:5
    164     (path: PathParams, subApplication: Application): T;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    The last overload is declared here.

server/routes/whiteLabelStatus.ts:16:40 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>' is not assignable to parameter of type 'Application<Record<string, any>>'.
      Type '(req: AuthenticatedRequest, res: Response<any, Record<string, any>>) => Promise<Response<any, Record<string, any>> | undefined>' is missing the following properties from type 'Application<Record<string, any>>': init, defaultConfiguration, engine, set, and 63 more.

16     app.get("/api/white-label/status", async (req: AuthenticatedRequest, res: Response) => {
                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:164:5
    164     (path: PathParams, subApplication: Application): T;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    The last overload is declared here.

server/routes/whiteLabelStatus.ts:16:40 - error TS7030: Not all code paths return a value.

16     app.get("/api/white-label/status", async (req: AuthenticatedRequest, res: Response) => {
                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/scripts/test-payment-flow.ts:44:13 - error TS2769: No overload matches this call.
  Overload 2 of 2, '(values: { number: string | SQL<unknown> | Placeholder<string, any>; organizationId: string | SQL<unknown> | Placeholder<string, any>; clientName: string | SQL<...> | Placeholder<...>; ... 23 more ...; paymentUrl?: string | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'number' does not exist in type '{ number: string | SQL<unknown> | Placeholder<string, any>; organizationId: string | SQL<unknown> | Placeholder<string, any>; clientName: string | SQL<...> | Placeholder<...>; ... 23 more ...; paymentUrl?: string | ... 3 more ... | undefined; }[]'.

44             number: testInvoice.number,
               ~~~~~~


server/services/activity.service.ts:4:31 - error TS2307: Cannot find module '@shared/types/activity' or its corresponding type declarations.

4 import type { Activity } from '@shared/types/activity';
                                ~~~~~~~~~~~~~~~~~~~~~~~~

server/services/activity.service.ts:15:14 - error TS2304: Cannot find name 'ActivityStatus'.

15     status?: ActivityStatus;
                ~~~~~~~~~~~~~~

server/services/activity.service.ts:16:12 - error TS2304: Cannot find name 'ActivityType'.

16     type?: ActivityType;
              ~~~~~~~~~~~~

server/services/activity.service.ts:32:21 - error TS2339: Property 'mapToActivity' does not exist on type '{ create(activityData: Omit<{ createdAt: Date; updatedAt: Date; id: string; organizationId: string | null; date: Date; title: string; completed: boolean | null; tripId: string; time: string | null; ... 7 more ...; travelMode: string | null; }, "createdAt" | ... 1 more ... | "id">): Promise<...>; ... 4 more ...; exis...'.

32         return this.mapToActivity(result);
                       ~~~~~~~~~~~~~

server/services/activity.service.ts:40:32 - error TS2339: Property 'mapToActivity' does not exist on type '{ create(activityData: Omit<{ createdAt: Date; updatedAt: Date; id: string; organizationId: string | null; date: Date; title: string; completed: boolean | null; tripId: string; time: string | null; ... 7 more ...; travelMode: string | null; }, "createdAt" | ... 1 more ... | "id">): Promise<...>; ... 4 more ...; exis...'.

40         return activity ? this.mapToActivity(activity) : null;
                                  ~~~~~~~~~~~~~

server/services/activity.service.ts:43:43 - error TS2551: Property 'trip_id' does not exist on type 'PgTableWithColumns<{ name: "activities"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 15 more ...; updatedAt: PgColu...'. Did you mean 'tripId'?

43         const conditions = [eq(activities.trip_id, tripId)];
                                             ~~~~~~~

server/services/activity.service.ts:48:43 - error TS2551: Property 'assigned_to' does not exist on type 'PgTableWithColumns<{ name: "activities"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 15 more ...; updatedAt: PgColu...'. Did you mean 'assignedTo'?

48             conditions.push(eq(activities.assigned_to, filters.assignedTo));
                                             ~~~~~~~~~~~

server/services/activity.service.ts:58:43 - error TS2551: Property 'organization_id' does not exist on type 'PgTableWithColumns<{ name: "activities"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 15 more ...; updatedAt: PgColu...'. Did you mean 'organizationId'?

58             conditions.push(eq(activities.organization_id, filters.organizationId));
                                             ~~~~~~~~~~~~~~~

server/services/activity.service.ts:79:31 - error TS2339: Property 'mapToActivity' does not exist on type '{ create(activityData: Omit<{ createdAt: Date; updatedAt: Date; id: string; organizationId: string | null; date: Date; title: string; completed: boolean | null; tripId: string; time: string | null; ... 7 more ...; travelMode: string | null; }, "createdAt" | ... 1 more ... | "id">): Promise<...>; ... 4 more ...; exis...'.

79         return updated ? this.mapToActivity(updated) : null;
                                 ~~~~~~~~~~~~~

server/services/database.service.ts:4:25 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

4 import * as schema from "@shared/schema";
                          ~~~~~~~~~~~~~~~~

server/services/database.service.ts:17:13 - error TS2564: Property 'redisClient' has no initializer and is not definitely assigned in the constructor.

17     private redisClient: ReturnType<typeof createClient>;
               ~~~~~~~~~~~

server/services/database.service.ts:28:25 - error TS1361: 'Pool' cannot be used as a value because it was imported using 'import type'.

28         this.pool = new Pool(poolConfig);
                           ~~~~

  server/services/database.service.ts:1:15
    1 import type { Pool, PoolConfig } from 'pg';
                    ~~~~
    'Pool' was imported here.

server/services/database.service.ts:60:14 - error TS2339: Property 'drizzle' does not exist on type 'DatabaseService'.

60         this.drizzle = drizzle(this.pool, {
                ~~~~~~~

server/services/database.service.ts:108:9 - error TS2322: Type 'QueryResult<any>' is not assignable to type 'QueryResult<T>'.
  Types of property 'rowCount' are incompatible.
    Type 'number | null' is not assignable to type 'number'.
      Type 'null' is not assignable to type 'number'.

108         return result;
            ~~~~~~

server/services/database.service.ts:150:21 - error TS2339: Property 'drizzle' does not exist on type 'DatabaseService'.

150         return this.drizzle;
                        ~~~~~~~

server/services/duffelFlightService.ts:91:35 - error TS2307: Cannot find module '@duffel/api' or its corresponding type declarations.

91 import type { DuffelClient } from '@duffel/api';
                                     ~~~~~~~~~~~~~

server/services/duffelFlightService.ts:542:35 - error TS2304: Cannot find name 'duffel'.

542             const booking = await duffel.orders.create({
                                      ~~~~~~

server/services/duffelFlightService.ts:562:51 - error TS7006: Parameter 'doc' implicitly has an 'any' type.

562                 documents: booking.documents?.map(doc => ({
                                                      ~~~

server/services/duffelFlightService.ts:566:52 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

566                 passengers: booking.passengers.map(passenger => ({
                                                       ~~~~~~~~~

server/services/duffelFlightService.ts:572:44 - error TS7006: Parameter 'slice' implicitly has an 'any' type.

572                 slices: booking.slices.map(slice => ({
                                               ~~~~~

server/services/duffelFlightService.ts:574:50 - error TS7006: Parameter 'segment' implicitly has an 'any' type.

574                     segments: slice.segments.map(segment => ({
                                                     ~~~~~~~

server/services/duffelFlightService.ts:576:60 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

576                         passengers: segment.passengers.map(passenger => ({
                                                               ~~~~~~~~~

server/services/duffelFlightService.ts:600:35 - error TS2304: Cannot find name 'duffel'.

600             const booking = await duffel.orders.get(bookingId);
                                      ~~~~~~

server/services/duffelFlightService.ts:607:51 - error TS7006: Parameter 'doc' implicitly has an 'any' type.

607                 documents: booking.documents?.map(doc => ({
                                                      ~~~

server/services/duffelFlightService.ts:611:52 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

611                 passengers: booking.passengers.map(passenger => ({
                                                       ~~~~~~~~~

server/services/duffelFlightService.ts:617:44 - error TS7006: Parameter 'slice' implicitly has an 'any' type.

617                 slices: booking.slices.map(slice => ({
                                               ~~~~~

server/services/duffelFlightService.ts:619:50 - error TS7006: Parameter 'segment' implicitly has an 'any' type.

619                     segments: slice.segments.map(segment => ({
                                                     ~~~~~~~

server/services/duffelFlightService.ts:621:60 - error TS7006: Parameter 'passenger' implicitly has an 'any' type.

621                         passengers: segment.passengers.map(passenger => ({
                                                               ~~~~~~~~~

server/services/duffelFlightService.ts:647:40 - error TS2304: Cannot find name 'duffel'.

647             const cancellation = await duffel.orderCancellations.create({
                                           ~~~~~~

server/services/duffelFlightService.ts:671:17 - error TS2304: Cannot find name 'duffel'.

671             if (duffel && duffel.airports) {
                    ~~~~~~

server/services/duffelFlightService.ts:671:27 - error TS2304: Cannot find name 'duffel'.

671             if (duffel && duffel.airports) {
                              ~~~~~~

server/services/duffelFlightService.ts:672:40 - error TS2304: Cannot find name 'duffel'.

672                 const response = await duffel.airports.list({
                                           ~~~~~~

server/services/duffelFlightService.ts:676:42 - error TS7006: Parameter 'airport' implicitly has an 'any' type.

676                 return response.data.map(airport => ({
                                             ~~~~~~~

server/services/organizationFundingService.ts:3:31 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { organizations } from '@shared/schema';
                                ~~~~~~~~~~~~~~~~

server/services/organizationFundingService.ts:227:17 - error TS2322: Type '"business_entity"' is not assignable to type 'Type | undefined'.

227                 type: 'business_entity',
                    ~~~~

  node_modules/stripe/types/Issuing/CardholdersResource.d.ts:66:9
    66         type?: CardholderCreateParams.Type;
               ~~~~
    The expected type comes from property 'type' which is declared here on type 'CardholderCreateParams'

server/services/performanceOptimizer.ts:1:54 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/services/performanceOptimizer.ts:46:17 - error TS6133: 'req' is declared but its value is never read.

46         return (req: Request, res: Response, next: NextFunction) => {
                   ~~~

server/services/performanceOptimizer.ts:46:31 - error TS6133: 'res' is declared but its value is never read.

46         return (req: Request, res: Response, next: NextFunction) => {
                                 ~~~

server/services/stripeIssuingService.ts:67:21 - error TS2322: Type 'string[]' is not assignable to type 'AllowedCategory[]'.
  Type 'string' is not assignable to type 'AllowedCategory'.

67                     allowed_categories: request.allowed_categories || [
                       ~~~~~~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:75:21 - error TS2322: Type 'string[]' is not assignable to type 'BlockedCategory[]'.
  Type 'string' is not assignable to type 'BlockedCategory'.

75                     blocked_categories: request.blocked_categories || [],
                       ~~~~~~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:154:39 - error TS18047: 'stripe' is possibly 'null'.

154             const updatedCard = await stripe.issuing.cards.update(cardRecord.stripe_card_id, updateData);
                                          ~~~~~~

server/services/stripeIssuingService.ts:182:19 - error TS18047: 'stripe' is possibly 'null'.

182             await stripe.issuing.cards.update(cardRecord.stripe_card_id, {
                      ~~~~~~

server/services/stripeIssuingService.ts:212:19 - error TS18047: 'stripe' is possibly 'null'.

212             await stripe.issuing.cards.update(cardRecord.stripe_card_id, {
                      ~~~~~~

server/services/stripeIssuingService.ts:216:27 - error TS2551: Property 'deleteCorporateCard' does not exist on type 'MemStorage'. Did you mean 'getCorporateCard'?

216             await storage.deleteCorporateCard(card_id);
                              ~~~~~~~~~~~~~~~~~~~

  server/storage/implementations/MemStorage.ts:48:11
    48     async getCorporateCard(_id: string | number): Promise<any> {
                 ~~~~~~~~~~~~~~~~
    'getCorporateCard' is declared here.

server/services/stripeIssuingService.ts:260:42 - error TS2339: Property 'getCorporateCardByStripeId' does not exist on type 'MemStorage'.

260         const cardRecord = await storage.getCorporateCardByStripeId(authorization.card.id);
                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:262:27 - error TS2339: Property 'createCardTransaction' does not exist on type 'MemStorage'.

262             await storage.createCardTransaction({
                              ~~~~~~~~~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:267:51 - error TS2551: Property 'authorization_code' does not exist on type 'Authorization'. Did you mean 'authorization_method'?

267                 authorization_code: authorization.authorization_code || '',
                                                      ~~~~~~~~~~~~~~~~~~

  node_modules/stripe/types/Issuing/Authorizations.d.ts:42:9
    42         authorization_method: Authorization.AuthorizationMethod;
               ~~~~~~~~~~~~~~~~~~~~
    'authorization_method' is declared here.

server/services/stripeIssuingService.ts:291:23 - error TS2339: Property 'updateCardTransactionByStripeId' does not exist on type 'MemStorage'.

291         await storage.updateCardTransactionByStripeId(authorization.id, {
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:302:42 - error TS2339: Property 'getCorporateCardByStripeId' does not exist on type 'MemStorage'.

302         const cardRecord = await storage.getCorporateCardByStripeId(transaction.card.id);
                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:302:86 - error TS2339: Property 'id' does not exist on type 'string | Card'.
  Property 'id' does not exist on type 'string'.

302         const cardRecord = await storage.getCorporateCardByStripeId(transaction.card.id);
                                                                                         ~~

server/services/stripeIssuingService.ts:304:79 - error TS2339: Property 'id' does not exist on type 'string | Card'.
  Property 'id' does not exist on type 'string'.

304             console.error('Card not found for transaction:', transaction.card.id);
                                                                                  ~~

server/services/stripeIssuingService.ts:308:23 - error TS2339: Property 'upsertCardTransaction' does not exist on type 'MemStorage'.

308         await storage.upsertCardTransaction({
                          ~~~~~~~~~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:313:60 - error TS2339: Property 'id' does not exist on type 'string | Authorization'.
  Property 'id' does not exist on type 'string'.

313             authorization_code: transaction.authorization?.id || '',
                                                               ~~

server/services/stripeIssuingService.ts:335:23 - error TS2339: Property 'createExpense' does not exist on type 'MemStorage'.

335         await storage.createExpense({
                          ~~~~~~~~~~~~~

server/services/stripeIssuingService.ts:393:44 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

393         const user = await storage.getUser(userId);
                                               ~~~~~~

server/services/stripeIssuingService.ts:400:44 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

400         const user = await storage.getUser(userId);
                                               ~~~~~~

server/services/tripService.ts:4:27 - error TS2339: Property 'trips' does not exist on type 'PostgresJsDatabase<any> & { $client: Sql<{}>; }'.

4     const trip = await db.trips.findFirst({
                            ~~~~~

server/simple-server.ts:1:21 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express from '../../express-augmentations.ts';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/simple-server.ts:11:10 - error TS7006: Parameter 'req' implicitly has an 'any' type.

11 app.use((req, res, next) => {
            ~~~

server/simple-server.ts:11:15 - error TS7006: Parameter 'res' implicitly has an 'any' type.

11 app.use((req, res, next) => {
                 ~~~

server/simple-server.ts:11:20 - error TS7006: Parameter 'next' implicitly has an 'any' type.

11 app.use((req, res, next) => {
                      ~~~~

server/simple-server.ts:22:21 - error TS6133: 'req' is declared but its value is never read.

22 app.get('/health', (req, res) => {
                       ~~~

server/simple-server.ts:22:21 - error TS7006: Parameter 'req' implicitly has an 'any' type.

22 app.get('/health', (req, res) => {
                       ~~~

server/simple-server.ts:22:26 - error TS7006: Parameter 'res' implicitly has an 'any' type.

22 app.get('/health', (req, res) => {
                            ~~~

server/simple-server.ts:30:23 - error TS6133: 'req' is declared but its value is never read.

30 app.get('/api/test', (req, res) => {
                         ~~~

server/simple-server.ts:30:23 - error TS7006: Parameter 'req' implicitly has an 'any' type.

30 app.get('/api/test', (req, res) => {
                         ~~~

server/simple-server.ts:30:28 - error TS7006: Parameter 'res' implicitly has an 'any' type.

30 app.get('/api/test', (req, res) => {
                              ~~~

server/simple-server.ts:37:40 - error TS7006: Parameter 'req' implicitly has an 'any' type.

37 app.get('/api/auth/me', authenticate, (req, res) => {
                                          ~~~

server/simple-server.ts:37:45 - error TS7006: Parameter 'res' implicitly has an 'any' type.

37 app.get('/api/auth/me', authenticate, (req, res) => {
                                               ~~~

server/simple-server.ts:45:20 - error TS6133: 'req' is declared but its value is never read.

45 app.use((err: any, req: any, res: any, next: any) => {
                      ~~~

server/simple-server.ts:45:40 - error TS6133: 'next' is declared but its value is never read.

45 app.use((err: any, req: any, res: any, next: any) => {
                                          ~~~~

server/simple-server.ts:50:10 - error TS6133: 'req' is declared but its value is never read.

50 app.use((req, res) => {
            ~~~

server/simple-server.ts:50:10 - error TS7006: Parameter 'req' implicitly has an 'any' type.

50 app.use((req, res) => {
            ~~~

server/simple-server.ts:50:15 - error TS7006: Parameter 'res' implicitly has an 'any' type.

50 app.use((req, res) => {
                 ~~~

server/smartOptimizer.ts:3:50 - error TS6059: File 'C:/Users/Jonas/Desktop/NestMapRepo/shared/interfaces.ts' is not under 'rootDir' 'C:/Users/Jonas/Desktop/NestMapRepo/server'. 'rootDir' is expected to contain all source files.
  File is ECMAScript module because 'C:/Users/Jonas/Desktop/NestMapRepo/shared/package.json' has field "type" with value "module"

3 import type { Activity, OptimizedSchedule } from '../shared/interfaces.js';
                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~

server/smartOptimizer.ts:3:50 - error TS6307: File 'C:/Users/Jonas/Desktop/NestMapRepo/shared/interfaces.ts' is not listed within the file list of project 'C:/Users/Jonas/Desktop/NestMapRepo/server/tsconfig.json'. Projects must list all files or use an 'include' pattern.
  File is ECMAScript module because 'C:/Users/Jonas/Desktop/NestMapRepo/shared/package.json' has field "type" with value "module"

3 import type { Activity, OptimizedSchedule } from '../shared/interfaces.js';
                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~

server/smartOptimizer.ts:274:32 - error TS6133: 'original' is declared but its value is never read.

274 function calculateImprovements(original: Activity[], optimized: Activity[]): any {
                                   ~~~~~~~~

server/smartOptimizer.ts:274:54 - error TS6133: 'optimized' is declared but its value is never read.

274 function calculateImprovements(original: Activity[], optimized: Activity[]): any {
                                                         ~~~~~~~~~

server/smartOptimizer.ts:282:34 - error TS6133: 'activities' is declared but its value is never read.

282 function generateRecommendations(activities: Activity[], conflicts: ConflictDetection[]): string[] {
                                     ~~~~~~~~~~

server/smartOptimizer.ts:336:45 - error TS6133: 'activity' is declared but its value is never read.

336 async function estimateTravelTimeToActivity(activity: Activity): Promise<number> {
                                                ~~~~~~~~

server/src/auth/auth.container.ts:23:48 - error TS1361: 'RefreshTokenRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

23             this._refreshTokenRepository = new RefreshTokenRepositoryImpl();
                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/src/auth/auth.container.ts:3:15
    3 import type { RefreshTokenRepositoryImpl } from './repositories/refresh-token.repository.js';
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~
    'RefreshTokenRepositoryImpl' was imported here.

server/src/auth/auth.container.ts:29:40 - error TS1361: 'UserRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

29             this._userRepository = new UserRepositoryImpl();
                                          ~~~~~~~~~~~~~~~~~~

  server/src/auth/auth.container.ts:4:15
    4 import type { UserRepositoryImpl } from './repositories/user.repository.js';
                    ~~~~~~~~~~~~~~~~~~
    'UserRepositoryImpl' was imported here.

server/src/auth/auth.container.ts:35:37 - error TS1361: 'AuthService' cannot be used as a value because it was imported using 'import type'.

35             this._authService = new AuthService(this.refreshTokenRepository, this.userRepository);
                                       ~~~~~~~~~~~

  server/src/auth/auth.container.ts:2:15
    2 import type { AuthService } from './services/auth.service.js';
                    ~~~~~~~~~~~
    'AuthService' was imported here.

server/src/auth/auth.container.ts:35:78 - error TS2345: Argument of type 'UserRepositoryImpl' is not assignable to parameter of type 'UserRepository'.
  Type 'UserRepositoryImpl' is missing the following properties from type 'UserRepository': findByEmailAndTenant, verifyPassword

35             this._authService = new AuthService(this.refreshTokenRepository, this.userRepository);
                                                                                ~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.container.ts:41:40 - error TS1361: 'AuthController' cannot be used as a value because it was imported using 'import type'.

41             this._authController = new AuthController(this.authService);
                                          ~~~~~~~~~~~~~~

  server/src/auth/auth.container.ts:1:15
    1 import type { AuthController } from './controllers/auth.controller.js';
                    ~~~~~~~~~~~~~~
    'AuthController' was imported here.

server/src/auth/auth.controller.ts:1:48 - error TS2614: Module '"../../express-augmentations.ts"' has no exported member 'RequestHandler'. Did you mean to use 'import RequestHandler from "../../express-augmentations.ts"' instead?

1 import type { Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                                                 ~~~~~~~~~~~~~~

server/src/auth/auth.controller.ts:13:8 - error TS2307: Cannot find module '@shared/types/auth/dto' or its corresponding type declarations.

13 } from '@shared/types/auth/dto';
          ~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.controller.ts:14:10 - error TS2300: Duplicate identifier 'UserRole'.

14 import { UserRole } from '@shared/types/auth/permissions';
            ~~~~~~~~

server/src/auth/auth.controller.ts:14:26 - error TS2307: Cannot find module '@shared/types/auth/permissions' or its corresponding type declarations.

14 import { UserRole } from '@shared/types/auth/permissions';
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.controller.ts:18:10 - error TS1485: 'UserRole' resolves to a type-only declaration and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

18 import { UserRole } from './jwt/types.js';
            ~~~~~~~~

  server/src/auth/jwt/types.ts:26:15
    26 export type { UserRole };
                     ~~~~~~~~
    'UserRole' was exported here.

server/src/auth/auth.controller.ts:18:10 - error TS2300: Duplicate identifier 'UserRole'.

18 import { UserRole } from './jwt/types.js';
            ~~~~~~~~

server/src/auth/auth.controller.ts:34:47 - error TS2304: Cannot find name 'IAuthService'.

34     constructor(private readonly authService: IAuthService) { }
                                                 ~~~~~~~~~~~~

server/src/auth/auth.controller.ts:63:51 - error TS2304: Cannot find name 'AuthResponseWithoutRefreshToken'.

63         async (req: ExpressRequest, res: Response<AuthResponseWithoutRefreshToken | ErrorResponse>, _next: NextFunction): Promise<void> => {
                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.controller.ts:90:51 - error TS2304: Cannot find name 'AuthResponseWithoutRefreshToken'.

90         async (req: ExpressRequest, res: Response<AuthResponseWithoutRefreshToken | ErrorResponse>, _next: NextFunction): Promise<void> => {
                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.module.ts:4:37 - error TS2307: Cannot find module './services/jwtAuthService.js' or its corresponding type declarations.

4 import type { JwtAuthService } from './services/jwtAuthService.js';
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.module.ts:12:2 - error TS1361: 'Module' cannot be used as a value because it was imported using 'import type'.

12 @Module({
    ~~~~~~

  server/src/auth/auth.module.ts:1:15
    1 import type { Module } from '@nestjs/common';
                    ~~~~~~
    'Module' was imported here.

server/src/auth/auth.module.ts:14:9 - error TS1361: 'ConfigModule' cannot be used as a value because it was imported using 'import type'.

14         ConfigModule,
           ~~~~~~~~~~~~

  server/src/auth/auth.module.ts:2:15
    2 import type { ConfigModule } from '@nestjs/config';
                    ~~~~~~~~~~~~
    'ConfigModule' was imported here.

server/src/auth/auth.module.ts:15:9 - error TS1361: 'RepositoriesModule' cannot be used as a value because it was imported using 'import type'.

15         RepositoriesModule,
           ~~~~~~~~~~~~~~~~~~

  server/src/auth/auth.module.ts:5:15
    5 import type { RepositoriesModule } from '../common/repositories/repositories.module.js';
                    ~~~~~~~~~~~~~~~~~~
    'RepositoriesModule' was imported here.

server/src/auth/auth.module.ts:16:9 - error TS1361: 'EmailModule' cannot be used as a value because it was imported using 'import type'.

16         EmailModule,
           ~~~~~~~~~~~

  server/src/auth/auth.module.ts:7:15
    7 import type { EmailModule } from '../email/email.module.js';
                    ~~~~~~~~~~~
    'EmailModule' was imported here.

server/src/auth/auth.module.ts:18:19 - error TS1361: 'AuthController' cannot be used as a value because it was imported using 'import type'.

18     controllers: [AuthController],
                     ~~~~~~~~~~~~~~

  server/src/auth/auth.module.ts:3:15
    3 import type { AuthController } from './controllers/auth.controller.js';
                    ~~~~~~~~~~~~~~
    'AuthController' was imported here.

server/src/auth/auth.module.ts:20:9 - error TS1361: 'JwtAuthService' cannot be used as a value because it was imported using 'import type'.

20         JwtAuthService,
           ~~~~~~~~~~~~~~

  server/src/auth/auth.module.ts:4:15
    4 import type { JwtAuthService } from './services/jwtAuthService.js';
                    ~~~~~~~~~~~~~~
    'JwtAuthService' was imported here.

server/src/auth/auth.module.ts:21:9 - error TS1361: 'AuthUserRepositoryProvider' cannot be used as a value because it was imported using 'import type'.

21         AuthUserRepositoryProvider,
           ~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/src/auth/auth.module.ts:6:15
    6 import type { AuthUserRepositoryProvider, RefreshTokenRepositoryProvider } from '../common/repositories/repository.providers.js';
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~
    'AuthUserRepositoryProvider' was imported here.

server/src/auth/auth.module.ts:22:9 - error TS1361: 'RefreshTokenRepositoryProvider' cannot be used as a value because it was imported using 'import type'.

22         RefreshTokenRepositoryProvider,
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/src/auth/auth.module.ts:6:43
    6 import type { AuthUserRepositoryProvider, RefreshTokenRepositoryProvider } from '../common/repositories/repository.providers.js';
                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'RefreshTokenRepositoryProvider' was imported here.

server/src/auth/auth.module.ts:24:15 - error TS1361: 'JwtAuthService' cannot be used as a value because it was imported using 'import type'.

24     exports: [JwtAuthService],
                 ~~~~~~~~~~~~~~

  server/src/auth/auth.module.ts:4:15
    4 import type { JwtAuthService } from './services/jwtAuthService.js';
                    ~~~~~~~~~~~~~~
    'JwtAuthService' was imported here.

server/src/auth/auth.routes.ts:1:10 - error TS1485: 'Router' resolves to a type-only declaration and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Response, NextFunction, Request as ExpressRequest, RequestHandler } from '../../express-augmentations.ts';
           ~~~~~~

  server/express-augmentations.ts:3:48
    3 export type { Request, Response, NextFunction, Router, Application } from 'express';
                                                     ~~~~~~
    'Router' was exported here.

server/src/auth/auth.routes.ts:1:18 - error TS1484: 'Response' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Response, NextFunction, Request as ExpressRequest, RequestHandler } from '../../express-augmentations.ts';
                   ~~~~~~~~

server/src/auth/auth.routes.ts:1:28 - error TS1484: 'NextFunction' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Response, NextFunction, Request as ExpressRequest, RequestHandler } from '../../express-augmentations.ts';
                             ~~~~~~~~~~~~

server/src/auth/auth.routes.ts:1:42 - error TS1484: 'Request' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Router, Response, NextFunction, Request as ExpressRequest, RequestHandler } from '../../express-augmentations.ts';
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.routes.ts:1:69 - error TS2614: Module '"../../express-augmentations.ts"' has no exported member 'RequestHandler'. Did you mean to use 'import RequestHandler from "../../express-augmentations.ts"' instead?

1 import { Router, Response, NextFunction, Request as ExpressRequest, RequestHandler } from '../../express-augmentations.ts';
                                                                      ~~~~~~~~~~~~~~

server/src/auth/auth.routes.ts:6:32 - error TS2307: Cannot find module './services/jwtAuthService.js' or its corresponding type declarations.

6 import { JwtAuthService } from './services/jwtAuthService.js';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.routes.ts:19:8 - error TS2307: Cannot find module '@shared/types/auth/dto' or its corresponding type declarations.

19 } from '@shared/types/auth/dto';
          ~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/auth.routes.ts:44:6 - error TS2300: Duplicate identifier 'ControllerMethod'.

44 type ControllerMethod = Array<RequestHandler>;
        ~~~~~~~~~~~~~~~~

server/src/auth/auth.routes.ts:46:16 - error TS1362: 'Router' cannot be used as a value because it was exported using 'export type'.

46 const router = Router();
                  ~~~~~~

  server/express-augmentations.ts:3:48
    3 export type { Request, Response, NextFunction, Router, Application } from 'express';
                                                     ~~~~~~
    'Router' was exported here.

server/src/auth/auth.routes.ts:67:6 - error TS2300: Duplicate identifier 'ControllerMethod'.

67 type ControllerMethod = ((req: ExpressRequest, res: Response, next: NextFunction) => void | Promise<void>) | Array<(req: ExpressRequest, res: Response, next: NextFunction) => void | Promise<void>>;
        ~~~~~~~~~~~~~~~~

server/src/auth/auth.routes.ts:76:29 - error TS7006: Parameter 'req' implicitly has an 'any' type.

76         routeHandlers.push((req, res, next) => {
                               ~~~

server/src/auth/auth.routes.ts:76:34 - error TS7006: Parameter 'res' implicitly has an 'any' type.

76         routeHandlers.push((req, res, next) => {
                                    ~~~

server/src/auth/auth.routes.ts:76:39 - error TS7006: Parameter 'next' implicitly has an 'any' type.

76         routeHandlers.push((req, res, next) => {
                                         ~~~~

server/src/auth/auth.routes.ts:78:65 - error TS2345: Argument of type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to parameter of type 'CustomRequest'.
  Types of property 'query' are incompatible.
    Type 'ParsedQs' is not assignable to type '{ [key: string]: string | string[] | undefined; }'.
      'string' index signatures are incompatible.
        Type 'string | ParsedQs | string[] | ParsedQs[] | undefined' is not assignable to type 'string | string[] | undefined'.
          Type 'ParsedQs' is not assignable to type 'string | string[] | undefined'.
            Type 'ParsedQs' is missing the following properties from type 'string[]': length, pop, push, concat, and 29 more.

78             return validateAndSanitizeRequest(validationSchema)(processedReq, res, next);
                                                                   ~~~~~~~~~~~~

server/src/auth/auth.routes.ts:91:58 - error TS2339: Property 'register' does not exist on type 'AuthController'.

91 createValidatedRoute('/register', 'post', authController.register, {
                                                            ~~~~~~~~

server/src/auth/auth.routes.ts:120:65 - error TS2339: Property 'changePassword' does not exist on type 'AuthController'.

120 createValidatedRoute('/change-password', 'post', authController.changePassword, {
                                                                    ~~~~~~~~~~~~~~

server/src/auth/controllers/__tests__/auth.controller.spec.ts:1:37 - error TS2307: Cannot find module '@nestjs/testing' or its corresponding type declarations.

1 import { Test, TestingModule } from '@nestjs/testing';
                                      ~~~~~~~~~~~~~~~~~

server/src/auth/controllers/__tests__/auth.controller.spec.ts:4:33 - error TS2305: Module '"@shared/types/auth/dto/index.js"' has no exported member 'AuthResponse'.

4 import { LoginDto, RegisterDto, AuthResponse } from '@shared/types/auth/dto/index.js';
                                  ~~~~~~~~~~~~

server/src/auth/controllers/__tests__/auth.controller.spec.ts:22:22 - error TS2339: Property 'USER' does not exist on type 'typeof UserRole'.

22       role: UserRole.USER,
                        ~~~~

server/src/auth/controllers/__tests__/auth.controller.spec.ts:67:9 - error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'LoginDto'.

67         tenantId: 'tenant1',
           ~~~~~~~~

server/src/auth/controllers/__tests__/auth.controller.spec.ts:102:9 - error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'RegisterDto'.

102         tenantId: 'tenant1',
            ~~~~~~~~

server/src/auth/controllers/__tests__/auth.controller.spec.ts:108:24 - error TS2339: Property 'register' does not exist on type 'AuthController'.

108       await controller.register[
                           ~~~~~~~~

server/src/auth/controllers/__tests__/auth.controller.spec.ts:109:20 - error TS2339: Property 'register' does not exist on type 'AuthController'.

109         controller.register.length - 1
                       ~~~~~~~~

server/src/auth/index.ts:17:10 - error TS2305: Module '"./auth.container.ts"' has no exported member 'registerAuthRoutes'.

17 export { registerAuthRoutes } from './auth.container.ts';
            ~~~~~~~~~~~~~~~~~~

server/src/auth/middleware/index.ts:3:67 - error TS2307: Cannot find module '@shared/types/auth' or its corresponding type declarations.

3 import type { TokenType, TokenVerificationResult, AuthUser } from '@shared/types/auth';
                                                                    ~~~~~~~~~~~~~~~~~~~~

server/src/auth/middleware/index.ts:39:29 - error TS7030: Not all code paths return a value.

39 export const authenticate = async (req: Request, res: Response, next: NextFunction) => {
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/middleware/index.ts:77:13 - error TS2353: Object literal may only specify known properties, and 'sessionId' does not exist in type '{ id: string; email: string; organizationId: string; role?: string | undefined; }'.

77             sessionId: result.payload.sessionId
               ~~~~~~~~~

server/src/auth/middleware/index.ts:94:12 - error TS7030: Not all code paths return a value.

94     return (req: Request, res: Response, next: NextFunction) => {
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/middleware/index.ts:104:36 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

104         if (!allowedRoles.includes(userRole)) {
                                       ~~~~~~~~

server/src/auth/middleware/rate-limiter.middleware.ts:1:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Request'.

1 import type { Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                ~~~~~~~

server/src/auth/middleware/rate-limiter.middleware.ts:1:24 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

1 import type { Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                         ~~~~~~~~

server/src/auth/middleware/rate-limiter.middleware.ts:1:34 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'NextFunction'.

1 import type { Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~

server/src/auth/middleware/rate-limiter.middleware.ts:1:48 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'RequestHandler'.

1 import type { Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                                                 ~~~~~~~~~~~~~~

server/src/auth/middleware/rate-limiter.middleware.ts:15:15 - error TS6133: 'req' is declared but its value is never read.

15     handler: (req: Request, res: Response) => {
                 ~~~

server/src/auth/middleware/rate-limiter.middleware.ts:22:55 - error TS7006: Parameter 'req' implicitly has an 'any' type.

22 export const rateLimiterMiddleware: RequestHandler = (req, res, next) => {
                                                         ~~~

server/src/auth/middleware/rate-limiter.middleware.ts:22:60 - error TS7006: Parameter 'res' implicitly has an 'any' type.

22 export const rateLimiterMiddleware: RequestHandler = (req, res, next) => {
                                                              ~~~

server/src/auth/middleware/rate-limiter.middleware.ts:22:65 - error TS7006: Parameter 'next' implicitly has an 'any' type.

22 export const rateLimiterMiddleware: RequestHandler = (req, res, next) => {
                                                                   ~~~~

server/src/auth/middleware/validation.middleware.ts:1:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Request'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                ~~~~~~~

server/src/auth/middleware/validation.middleware.ts:1:24 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                         ~~~~~~~~

server/src/auth/middleware/validation.middleware.ts:1:34 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'NextFunction'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~

server/src/auth/repositories/refresh-token.ts:6:2 - error TS1361: 'Injectable' cannot be used as a value because it was imported using 'import type'.

6 @Injectable()
   ~~~~~~~~~~

  server/src/auth/repositories/refresh-token.ts:2:15
    2 import type { Injectable, Logger } from '@nestjs/common';
                    ~~~~~~~~~~
    'Injectable' was imported here.

server/src/auth/repositories/refresh-token.ts:7:14 - error TS2420: Class 'RefreshTokenRepositoryImpl' incorrectly implements interface 'RefreshTokenRepository'.
  Type 'RefreshTokenRepositoryImpl' is missing the following properties from type 'RefreshTokenRepository': revokeByUserId, revokeByToken, deleteExpired

7 export class RefreshTokenRepositoryImpl implements RefreshTokenRepository {
               ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/repositories/refresh-token.ts:8:35 - error TS1361: 'Logger' cannot be used as a value because it was imported using 'import type'.

8     private readonly logger = new Logger(RefreshTokenRepositoryImpl.name);
                                    ~~~~~~

  server/src/auth/repositories/refresh-token.ts:2:27
    2 import type { Injectable, Logger } from '@nestjs/common';
                                ~~~~~~
    'Logger' was imported here.

server/src/auth/repositories/refresh-token.ts:77:24 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

77             if (result.rowCount === 0) {
                          ~~~~~~~~

server/src/auth/repositories/refresh-token.ts:110:47 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

110             this.logger.log(`Deleted ${result.rowCount} expired refresh tokens`);
                                                  ~~~~~~~~

server/src/auth/repositories/refresh-token.ts:111:27 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

111             return result.rowCount || 0;
                              ~~~~~~~~

server/src/auth/repositories/user.repository.ts:4:10 - error TS1484: 'UserRepository' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

4 import { UserRepository as CommonUserRepository } from '../../common/repositories/user/user.repository.interface.js';
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/repositories/user.repository.ts:13:41 - error TS1361: 'BaseRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

13 export class UserRepositoryImpl extends BaseRepositoryImpl<User, string, Omit<User, 'id' | 'createdAt' | 'updatedAt'>, Partial<Omit<User, 'id' | 'createdAt' | 'updatedAt'>>> implements CommonUserRepository {
                                           ~~~~~~~~~~~~~~~~~~

  server/src/auth/repositories/user.repository.ts:6:15
    6 import type { BaseRepositoryImpl } from '../../common/repositories/base.repository.js';
                    ~~~~~~~~~~~~~~~~~~
    'BaseRepositoryImpl' was imported here.

server/src/auth/repositories/user.repository.ts:17:11 - error TS2416: Property 'findByEmail' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(email: string) => Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null>' is not assignable to type '(email: string) => Promise<UserResponse | null>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null>' is not assignable to type 'Promise<UserResponse | null>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null' is not assignable to type 'UserResponse | null'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

17     async findByEmail(email: string): Promise<User | null> {
             ~~~~~~~~~~~

server/src/auth/repositories/user.repository.ts:27:11 - error TS2416: Property 'findById' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(id: string) => Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null>' is not assignable to type '(id: string) => Promise<UserResponse | null>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null>' is not assignable to type 'Promise<UserResponse | null>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null' is not assignable to type 'UserResponse | null'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

27     async findById(id: string): Promise<User | null> {
             ~~~~~~~~

server/src/auth/repositories/user.repository.ts:37:11 - error TS2416: Property 'findAll' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '() => Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; }[]>' is not assignable to type '() => Promise<UserResponse[]>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; }[]>' is not assignable to type 'Promise<UserResponse[]>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }[]' is not assignable to type 'UserResponse[]'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

37     async findAll(): Promise<User[]> {
             ~~~~~~~

server/src/auth/repositories/user.repository.ts:40:11 - error TS2416: Property 'findByOrganizationId' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(organizationId: string) => Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; ... 16 more ...; tokenVersion: number; }[]>' is not assignable to type '(organizationId: string) => Promise<UserResponse[]>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; }[]>' is not assignable to type 'Promise<UserResponse[]>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }[]' is not assignable to type 'UserResponse[]'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

40     async findByOrganizationId(organizationId: string): Promise<User[]> {
             ~~~~~~~~~~~~~~~~~~~~

server/src/auth/repositories/user.repository.ts:108:11 - error TS2416: Property 'create' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(userData: Omit<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; }, "createdAt" | ... 1 more ... | "id">) => Promise<...>' is not assignable to type '(userData: Omit<User, "createdAt" | "updatedAt" | "id">) => Promise<UserResponse>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; }>' is not assignable to type 'Promise<UserResponse>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
        Types of property 'role' are incompatible.
          Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
            Type '"super_admin"' is not assignable to type 'UserRole'.

108     async create(userData: Omit<User, 'id' | 'createdAt' | 'updatedAt'>): Promise<User> {
              ~~~~~~

server/src/auth/repositories/user.repository.ts:127:11 - error TS2416: Property 'update' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(id: string, userData: Partial<Omit<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; }, "createdAt" | ... 1 more ... | "id">>) => Promise<...>' is not assignable to type '(id: string, userData: Partial<Omit<User, "createdAt" | "updatedAt" | "id">>) => Promise<UserResponse | null>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null>' is not assignable to type 'Promise<UserResponse | null>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null' is not assignable to type 'UserResponse | null'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

127     async update(id: string, userData: Partial<Omit<User, 'id' | 'createdAt' | 'updatedAt'>>): Promise<User | null> {
              ~~~~~~

server/src/auth/repositories/user.repository.ts:227:11 - error TS2416: Property 'updatePreferences' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(id: string, _preferences: UserBookingPreferences) => Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; ... 17 more ...; tokenVersion: number; } | null>' is not assignable to type '(id: string, preferences: UserBookingPreferences) => Promise<UserResponse | null>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null>' is not assignable to type 'Promise<UserResponse | null>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null' is not assignable to type 'UserResponse | null'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

227     async updatePreferences(id: string, _preferences: UserBookingPreferences): Promise<User | null> {
              ~~~~~~~~~~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:1:37 - error TS2307: Cannot find module '@nestjs/testing' or its corresponding type declarations.

1 import { Test, TestingModule } from '@nestjs/testing';
                                      ~~~~~~~~~~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:3:10 - error TS1484: 'UserRepository' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

3 import { UserRepository } from '../../../common/repositories/user/user.repository.interface.js';
           ~~~~~~~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:4:10 - error TS1484: 'RefreshTokenRepository' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

4 import { RefreshTokenRepository } from '../../interfaces/refresh-token.repository.interface.js';
           ~~~~~~~~~~~~~~~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:19:20 - error TS2339: Property 'USER' does not exist on type 'typeof UserRole'.

19     role: UserRole.USER,
                      ~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:37:22 - error TS2339: Property 'USER' does not exist on type 'typeof UserRole'.

37       role: UserRole.USER,
                        ~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:82:9 - error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'LoginDto'.

82         tenantId: 'tenant1',
           ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:85:61 - error TS2345: Argument of type '{ id: string; email: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to parameter of type 'UserResponse | Promise<UserResponse | null> | null'.
  Type '{ id: string; email: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to type 'UserResponse'.
    Types of property 'createdAt' are incompatible.
      Type 'Date' is not assignable to type 'string'.

85       userRepository.findByEmailAndTenant.mockResolvedValue(mockUser);
                                                               ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:95:9 - error TS2353: Object literal may only specify known properties, and 'updatedAt' does not exist in type 'RefreshToken | Promise<RefreshToken>'.

95         updatedAt: new Date(),
           ~~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:107:18 - error TS2339: Property 'tenantId' does not exist on type 'LoginDto'.

107         loginDto.tenantId
                     ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:115:9 - error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'LoginDto'.

115         tenantId: 'tenant1',
            ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:118:61 - error TS2345: Argument of type '{ id: string; email: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to parameter of type 'UserResponse | Promise<UserResponse | null> | null'.
  Type '{ id: string; email: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to type 'UserResponse'.
    Types of property 'createdAt' are incompatible.
      Type 'Date' is not assignable to type 'string'.

118       userRepository.findByEmailAndTenant.mockResolvedValue(mockUser);
                                                                ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:134:9 - error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'RegisterDto'.

134         tenantId: 'tenant1',
            ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:138:47 - error TS2345: Argument of type '{ email: string; id: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to parameter of type 'UserResponse | Promise<UserResponse>'.
  Type '{ email: string; id: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to type 'UserResponse'.
    Types of property 'createdAt' are incompatible.
      Type 'Date' is not assignable to type 'string'.

138       userRepository.create.mockResolvedValue({
                                                  ~
139         ...mockUser,
    ~~~~~~~~~~~~~~~~~~~~
140         email: 'new@example.com',
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
141       });
    ~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:152:33 - error TS2339: Property 'tenantId' does not exist on type 'RegisterDto'.

152           tenantId: registerDto.tenantId,
                                    ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:163:9 - error TS2353: Object literal may only specify known properties, and 'tenantId' does not exist in type 'RegisterDto'.

163         tenantId: 'tenant1',
            ~~~~~~~~

server/src/auth/services/__tests__/auth.service.spec.ts:166:61 - error TS2345: Argument of type '{ id: string; email: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to parameter of type 'UserResponse | Promise<UserResponse | null> | null'.
  Type '{ id: string; email: string; password: string; firstName: string; lastName: string; role: any; tenantId: string; emailVerified: boolean; createdAt: Date; updatedAt: Date; lastLoginAt: null; }' is not assignable to type 'UserResponse'.
    Types of property 'createdAt' are incompatible.
      Type 'Date' is not assignable to type 'string'.

166       userRepository.findByEmailAndTenant.mockResolvedValue(mockUser);
                                                                ~~~~~~~~

server/src/auth/services/map-to-user.ts:1:10 - error TS1484: 'UserResponse' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { UserResponse } from '@shared/types/auth/dto/user-response.dto.js';
           ~~~~~~~~~~~~

server/src/common/common.module.ts:9:2 - error TS1361: 'Global' cannot be used as a value because it was imported using 'import type'.

9 @Global()
   ~~~~~~

  server/src/common/common.module.ts:1:23
    1 import type { Module, Global } from '@nestjs/common';
                            ~~~~~~
    'Global' was imported here.

server/src/common/common.module.ts:10:2 - error TS1361: 'Module' cannot be used as a value because it was imported using 'import type'.

10 @Module({
    ~~~~~~

  server/src/common/common.module.ts:1:15
    1 import type { Module, Global } from '@nestjs/common';
                    ~~~~~~
    'Module' was imported here.

server/src/common/common.module.ts:12:9 - error TS1361: 'RepositoriesModule' cannot be used as a value because it was imported using 'import type'.

12         RepositoriesModule,
           ~~~~~~~~~~~~~~~~~~

  server/src/common/common.module.ts:5:15
    5 import type { RepositoriesModule } from './repositories/repositories.module.ts';
                    ~~~~~~~~~~~~~~~~~~
    'RepositoriesModule' was imported here.

server/src/common/common.module.ts:15:9 - error TS1361: 'BookingController' cannot be used as a value because it was imported using 'import type'.

15         BookingController,
           ~~~~~~~~~~~~~~~~~

  server/src/common/common.module.ts:4:15
    4 import type { BookingController } from './controllers/booking.controller.ts';
                    ~~~~~~~~~~~~~~~~~
    'BookingController' was imported here.

server/src/common/common.module.ts:18:9 - error TS1361: 'ErrorService' cannot be used as a value because it was imported using 'import type'.

18         ErrorService,
           ~~~~~~~~~~~~

  server/src/common/common.module.ts:2:15
    2 import type { ErrorService } from './services/error.service.ts';
                    ~~~~~~~~~~~~
    'ErrorService' was imported here.

server/src/common/common.module.ts:19:9 - error TS1361: 'BookingService' cannot be used as a value because it was imported using 'import type'.

19         BookingService,
           ~~~~~~~~~~~~~~

  server/src/common/common.module.ts:3:15
    3 import type { BookingService } from './services/booking.service.ts';
                    ~~~~~~~~~~~~~~
    'BookingService' was imported here.

server/src/common/common.module.ts:22:26 - error TS1361: 'BookingService' cannot be used as a value because it was imported using 'import type'.

22             useExisting: BookingService,
                            ~~~~~~~~~~~~~~

  server/src/common/common.module.ts:3:15
    3 import type { BookingService } from './services/booking.service.ts';
                    ~~~~~~~~~~~~~~
    'BookingService' was imported here.

server/src/common/common.module.ts:26:9 - error TS1361: 'ErrorService' cannot be used as a value because it was imported using 'import type'.

26         ErrorService,
           ~~~~~~~~~~~~

  server/src/common/common.module.ts:2:15
    2 import type { ErrorService } from './services/error.service.ts';
                    ~~~~~~~~~~~~
    'ErrorService' was imported here.

server/src/common/common.module.ts:27:9 - error TS1361: 'BookingService' cannot be used as a value because it was imported using 'import type'.

27         BookingService,
           ~~~~~~~~~~~~~~

  server/src/common/common.module.ts:3:15
    3 import type { BookingService } from './services/booking.service.ts';
                    ~~~~~~~~~~~~~~
    'BookingService' was imported here.

server/src/common/common.module.ts:28:9 - error TS1361: 'RepositoriesModule' cannot be used as a value because it was imported using 'import type'.

28         RepositoriesModule,
           ~~~~~~~~~~~~~~~~~~

  server/src/common/common.module.ts:5:15
    5 import type { RepositoriesModule } from './repositories/repositories.module.ts';
                    ~~~~~~~~~~~~~~~~~~
    'RepositoriesModule' was imported here.

server/src/common/controllers/booking.controller.ts:2:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Request'.

2 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                ~~~~~~~

server/src/common/controllers/booking.controller.ts:2:24 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

2 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                         ~~~~~~~~

server/src/common/controllers/booking.controller.ts:2:34 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'NextFunction'.

2 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:7:42 - error TS2305: Module '"../middleware/auth.middleware.ts"' has no exported member 'enforceOrganizationSecurity'.

7 import { requireAuth, requireOrgContext, enforceOrganizationSecurity } from '../middleware/auth.middleware.ts';
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:8:40 - error TS2307: Cannot find module '../middleware/validation.middleware' or its corresponding type declarations.

8 import { validateBookingRequest } from '../middleware/validation.middleware';
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:9:15 - error TS2305: Module '"../interfaces/booking.interfaces.ts"' has no exported member 'BookingConfirmationDetails'.

9 import type { BookingConfirmationDetails } from '../interfaces/booking.interfaces.ts';
                ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:11:57 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

11 import { trips, activities, calendarIntegrations } from '@shared/schema';
                                                           ~~~~~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:16:2 - error TS1361: 'Controller' cannot be used as a value because it was imported using 'import type'.

16 @Controller('bookings')
    ~~~~~~~~~~

  server/src/common/controllers/booking.controller.ts:1:15
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                    ~~~~~~~~~~
    'Controller' was imported here.

server/src/common/controllers/booking.controller.ts:18:35 - error TS1361: 'Logger' cannot be used as a value because it was imported using 'import type'.

18     private readonly logger = new Logger(BookingController.name);
                                     ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:72
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                             ~~~~~~
    'Logger' was imported here.

server/src/common/controllers/booking.controller.ts:20:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

20     @Inject('BookingService')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:25:6 - error TS1361: 'Get' cannot be used as a value because it was imported using 'import type'.

25     @Get(':id')
        ~~~

  server/src/common/controllers/booking.controller.ts:1:27
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                ~~~
    'Get' was imported here.

server/src/common/controllers/booking.controller.ts:27:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

27     @Param('id')
        ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:29:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

29     @Inject('REQUEST')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:30:5 - error TS6133: 'req' is declared but its value is never read.

30     req: Request,
       ~~~

server/src/common/controllers/booking.controller.ts:31:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

31     @Inject('RESPONSE')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:32:5 - error TS6133: 'res' is declared but its value is never read.

32     res: Response,
       ~~~

server/src/common/controllers/booking.controller.ts:33:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

33     @Inject('NEXT')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:34:5 - error TS6133: 'next' is declared but its value is never read.

34     next: NextFunction) {
       ~~~~

server/src/common/controllers/booking.controller.ts:37:13 - error TS2304: Cannot find name 'asyncHandler'.

37             asyncHandler(async (req: Request, res: Response) => {
               ~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:37:33 - error TS6133: 'req' is declared but its value is never read.

37             asyncHandler(async (req: Request, res: Response) => {
                                   ~~~

server/src/common/controllers/booking.controller.ts:43:24 - error TS1361: 'ResponseFormatter' cannot be used as a value because it was imported using 'import type'.

43                 return ResponseFormatter.success(res, booking, 'Booking retrieved successfully');
                          ~~~~~~~~~~~~~~~~~

  server/src/common/controllers/booking.controller.ts:5:15
    5 import type { ResponseFormatter } from '../utils/response-formatter.util.ts';
                    ~~~~~~~~~~~~~~~~~
    'ResponseFormatter' was imported here.

server/src/common/controllers/booking.controller.ts:50:6 - error TS1361: 'Get' cannot be used as a value because it was imported using 'import type'.

50     @Get('user/:userId')
        ~~~

  server/src/common/controllers/booking.controller.ts:1:27
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                ~~~
    'Get' was imported here.

server/src/common/controllers/booking.controller.ts:52:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

52     @Param('userId')
        ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:54:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

54     @Inject('REQUEST')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:55:5 - error TS6133: 'req' is declared but its value is never read.

55     req: Request,
       ~~~

server/src/common/controllers/booking.controller.ts:56:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

56     @Inject('RESPONSE')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:57:5 - error TS6133: 'res' is declared but its value is never read.

57     res: Response,
       ~~~

server/src/common/controllers/booking.controller.ts:58:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

58     @Inject('NEXT')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:59:5 - error TS6133: 'next' is declared but its value is never read.

59     next: NextFunction) {
       ~~~~

server/src/common/controllers/booking.controller.ts:62:13 - error TS2304: Cannot find name 'asyncHandler'.

62             asyncHandler(async (req: Request, res: Response) => {
               ~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:62:33 - error TS6133: 'req' is declared but its value is never read.

62             asyncHandler(async (req: Request, res: Response) => {
                                   ~~~

server/src/common/controllers/booking.controller.ts:65:24 - error TS1361: 'ResponseFormatter' cannot be used as a value because it was imported using 'import type'.

65                 return ResponseFormatter.success(res, bookings, 'User bookings retrieved successfully');
                          ~~~~~~~~~~~~~~~~~

  server/src/common/controllers/booking.controller.ts:5:15
    5 import type { ResponseFormatter } from '../utils/response-formatter.util.ts';
                    ~~~~~~~~~~~~~~~~~
    'ResponseFormatter' was imported here.

server/src/common/controllers/booking.controller.ts:72:6 - error TS1361: 'Get' cannot be used as a value because it was imported using 'import type'.

72     @Get('trip/:tripId')
        ~~~

  server/src/common/controllers/booking.controller.ts:1:27
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                ~~~
    'Get' was imported here.

server/src/common/controllers/booking.controller.ts:74:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

74     @Param('tripId')
        ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:76:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

76     @Inject('REQUEST')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:77:5 - error TS6133: 'req' is declared but its value is never read.

77     req: Request,
       ~~~

server/src/common/controllers/booking.controller.ts:78:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

78     @Inject('RESPONSE')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:79:5 - error TS6133: 'res' is declared but its value is never read.

79     res: Response,
       ~~~

server/src/common/controllers/booking.controller.ts:80:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

80     @Inject('NEXT')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:81:5 - error TS6133: 'next' is declared but its value is never read.

81     next: NextFunction) {
       ~~~~

server/src/common/controllers/booking.controller.ts:84:13 - error TS2304: Cannot find name 'asyncHandler'.

84             asyncHandler(async (req: Request, res: Response) => {
               ~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:84:33 - error TS6133: 'req' is declared but its value is never read.

84             asyncHandler(async (req: Request, res: Response) => {
                                   ~~~

server/src/common/controllers/booking.controller.ts:87:24 - error TS1361: 'ResponseFormatter' cannot be used as a value because it was imported using 'import type'.

87                 return ResponseFormatter.success(res, bookings, 'Trip bookings retrieved successfully');
                          ~~~~~~~~~~~~~~~~~

  server/src/common/controllers/booking.controller.ts:5:15
    5 import type { ResponseFormatter } from '../utils/response-formatter.util.ts';
                    ~~~~~~~~~~~~~~~~~
    'ResponseFormatter' was imported here.

server/src/common/controllers/booking.controller.ts:94:6 - error TS1361: 'Post' cannot be used as a value because it was imported using 'import type'.

94     @Post()
        ~~~~

  server/src/common/controllers/booking.controller.ts:1:32
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                     ~~~~
    'Post' was imported here.

server/src/common/controllers/booking.controller.ts:96:6 - error TS1361: 'Body' cannot be used as a value because it was imported using 'import type'.

96     @Body()
        ~~~~

  server/src/common/controllers/booking.controller.ts:1:43
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                ~~~~
    'Body' was imported here.

server/src/common/controllers/booking.controller.ts:98:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

98     @Inject('REQUEST')
        ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:99:5 - error TS6133: 'req' is declared but its value is never read.

99     req: Request,
       ~~~

server/src/common/controllers/booking.controller.ts:100:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

100     @Inject('RESPONSE')
         ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:101:5 - error TS6133: 'res' is declared but its value is never read.

101     res: Response,
        ~~~

server/src/common/controllers/booking.controller.ts:102:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

102     @Inject('NEXT')
         ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:103:5 - error TS6133: 'next' is declared but its value is never read.

103     next: NextFunction) {
        ~~~~

server/src/common/controllers/booking.controller.ts:107:13 - error TS2304: Cannot find name 'asyncHandler'.

107             asyncHandler(async (req: Request, res: Response) => {
                ~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:107:33 - error TS6133: 'req' is declared but its value is never read.

107             asyncHandler(async (req: Request, res: Response) => {
                                    ~~~

server/src/common/controllers/booking.controller.ts:110:24 - error TS1361: 'ResponseFormatter' cannot be used as a value because it was imported using 'import type'.

110                 return ResponseFormatter.created(res, booking, 'Booking created successfully');
                           ~~~~~~~~~~~~~~~~~

  server/src/common/controllers/booking.controller.ts:5:15
    5 import type { ResponseFormatter } from '../utils/response-formatter.util.ts';
                    ~~~~~~~~~~~~~~~~~
    'ResponseFormatter' was imported here.

server/src/common/controllers/booking.controller.ts:117:6 - error TS1361: 'Put' cannot be used as a value because it was imported using 'import type'.

117     @Put(':id')
         ~~~

  server/src/common/controllers/booking.controller.ts:1:38
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                           ~~~
    'Put' was imported here.

server/src/common/controllers/booking.controller.ts:119:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

119     @Param('id')
         ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:121:6 - error TS1361: 'Body' cannot be used as a value because it was imported using 'import type'.

121     @Body()
         ~~~~

  server/src/common/controllers/booking.controller.ts:1:43
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                ~~~~
    'Body' was imported here.

server/src/common/controllers/booking.controller.ts:133:6 - error TS1361: 'Delete' cannot be used as a value because it was imported using 'import type'.

133     @Delete(':id')
         ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:56
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                             ~~~~~~
    'Delete' was imported here.

server/src/common/controllers/booking.controller.ts:135:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

135     @Param('id')
         ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:149:6 - error TS1361: 'Put' cannot be used as a value because it was imported using 'import type'.

149     @Put(':id/confirm')
         ~~~

  server/src/common/controllers/booking.controller.ts:1:38
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                           ~~~
    'Put' was imported here.

server/src/common/controllers/booking.controller.ts:151:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

151     @Param('id')
         ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:153:6 - error TS1361: 'Body' cannot be used as a value because it was imported using 'import type'.

153     @Body()
         ~~~~

  server/src/common/controllers/booking.controller.ts:1:43
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                ~~~~
    'Body' was imported here.

server/src/common/controllers/booking.controller.ts:155:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

155     @Inject('REQUEST')
         ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:156:5 - error TS6133: 'req' is declared but its value is never read.

156     req: Request,
        ~~~

server/src/common/controllers/booking.controller.ts:157:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

157     @Inject('RESPONSE')
         ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:158:5 - error TS6133: 'res' is declared but its value is never read.

158     res: Response,
        ~~~

server/src/common/controllers/booking.controller.ts:159:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

159     @Inject('NEXT')
         ~~~~~~

  server/src/common/controllers/booking.controller.ts:1:64
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                                     ~~~~~~
    'Inject' was imported here.

server/src/common/controllers/booking.controller.ts:160:5 - error TS6133: 'next' is declared but its value is never read.

160     next: NextFunction) {
        ~~~~

server/src/common/controllers/booking.controller.ts:163:13 - error TS2304: Cannot find name 'asyncHandler'.

163             asyncHandler(async (req: Request, res: Response) => {
                ~~~~~~~~~~~~

server/src/common/controllers/booking.controller.ts:163:33 - error TS6133: 'req' is declared but its value is never read.

163             asyncHandler(async (req: Request, res: Response) => {
                                    ~~~

server/src/common/controllers/booking.controller.ts:169:24 - error TS1361: 'ResponseFormatter' cannot be used as a value because it was imported using 'import type'.

169                 return ResponseFormatter.success(res, booking, 'Booking confirmed successfully');
                           ~~~~~~~~~~~~~~~~~

  server/src/common/controllers/booking.controller.ts:5:15
    5 import type { ResponseFormatter } from '../utils/response-formatter.util.ts';
                    ~~~~~~~~~~~~~~~~~
    'ResponseFormatter' was imported here.

server/src/common/controllers/booking.controller.ts:176:6 - error TS1361: 'Put' cannot be used as a value because it was imported using 'import type'.

176     @Put(':id/cancel')
         ~~~

  server/src/common/controllers/booking.controller.ts:1:38
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                           ~~~
    'Put' was imported here.

server/src/common/controllers/booking.controller.ts:178:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

178     @Param('id')
         ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:180:6 - error TS1361: 'Body' cannot be used as a value because it was imported using 'import type'.

180     @Body('reason')
         ~~~~

  server/src/common/controllers/booking.controller.ts:1:43
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                ~~~~
    'Body' was imported here.

server/src/common/controllers/booking.controller.ts:192:6 - error TS1361: 'Get' cannot be used as a value because it was imported using 'import type'.

192     @Get('stats/user/:userId')
         ~~~

  server/src/common/controllers/booking.controller.ts:1:27
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                ~~~
    'Get' was imported here.

server/src/common/controllers/booking.controller.ts:194:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

194     @Param('userId')
         ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/controllers/booking.controller.ts:202:6 - error TS1361: 'Get' cannot be used as a value because it was imported using 'import type'.

202     @Get('stats/organization/:orgId')
         ~~~

  server/src/common/controllers/booking.controller.ts:1:27
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                ~~~
    'Get' was imported here.

server/src/common/controllers/booking.controller.ts:204:6 - error TS1361: 'Param' cannot be used as a value because it was imported using 'import type'.

204     @Param('orgId')
         ~~~~~

  server/src/common/controllers/booking.controller.ts:1:49
    1 import type { Controller, Get, Post, Put, Body, Param, Delete, Inject, Logger } from '@nestjs/common';
                                                      ~~~~~
    'Param' was imported here.

server/src/common/errors.ts:24:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

24         super(AppErrorCode.BAD_REQUEST, message, 400, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:30:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

30         super(AppErrorCode.UNAUTHORIZED, message, 401, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:36:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

36         super(AppErrorCode.FORBIDDEN, message, 403, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:42:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

42         super(AppErrorCode.NOT_FOUND, message, 404, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:48:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

48         super(AppErrorCode.CONFLICT, message, 409, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:54:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

54         super(AppErrorCode.VALIDATION_ERROR, message, 422, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:60:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

60         super(AppErrorCode.TOO_MANY_REQUESTS, message, 429, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:66:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

66         super(AppErrorCode.INTERNAL_SERVER_ERROR, message, 500, false, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/errors.ts:72:15 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

72         super(AppErrorCode.SERVICE_UNAVAILABLE, message, 503, true, details);
                 ~~~~~~~~~~~~

  server/src/common/errors.ts:4:15
    4 import type { AppErrorCode } from '@shared/types/error-codes.js';
                    ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/middleware/auth.middleware.test.ts:1:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Request'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                ~~~~~~~

server/src/common/middleware/auth.middleware.test.ts:1:24 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                         ~~~~~~~~

server/src/common/middleware/auth.middleware.test.ts:1:34 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'NextFunction'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~

server/src/common/middleware/auth.middleware.test.ts:14:13 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'User | undefined', but here has type 'AuthUser | undefined'.

14             user?: AuthUser;
               ~~~~

  server/types/jwt.d.ts:23:7
    23       user?: User;
             ~~~~
    'user' was also declared here.

server/src/common/middleware/auth.middleware.test.ts:18:99 - error TS2307: Cannot find module './auth.middleware' or its corresponding type declarations.

18 import { requireAuth, requireOrgContext, requireAdmin, requireSuperAdmin, requireOwnership } from './auth.middleware';
                                                                                                     ~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/auth.middleware.test.ts:85:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

85                 type: ErrorType.UNAUTHORIZED,
                         ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/auth.middleware.test.ts:120:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

120                 type: ErrorType.FORBIDDEN,
                          ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/auth.middleware.test.ts:135:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

135                 type: ErrorType.BAD_REQUEST,
                          ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/auth.middleware.test.ts:177:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

177                 type: ErrorType.FORBIDDEN,
                          ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/auth.middleware.test.ts:195:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

195                 type: ErrorType.FORBIDDEN,
                          ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/auth.middleware.test.ts:223:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

223                 type: ErrorType.FORBIDDEN,
                          ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/auth.middleware.test.ts:234:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

234                 type: ErrorType.NOT_FOUND,
                          ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/auth.middleware.test.ts:246:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

246                 type: ErrorType.INTERNAL_SERVER_ERROR,
                          ~~~~~~~~~

  server/src/common/middleware/auth.middleware.test.ts:19:15
    19 import type { ErrorType } from '../types/error.types.ts';
                     ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/error-handler.middleware.test.ts:1:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Request'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                ~~~~~~~

server/src/common/middleware/error-handler.middleware.test.ts:1:24 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                         ~~~~~~~~

server/src/common/middleware/error-handler.middleware.test.ts:1:34 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'NextFunction'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~

server/src/common/middleware/error-handler.middleware.test.ts:3:32 - error TS2307: Cannot find module './error-handler.middleware' or its corresponding type declarations.

3 import type { ErrorType } from './error-handler.middleware';
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/error-handler.middleware.test.ts:4:70 - error TS2307: Cannot find module './error-handler.middleware' or its corresponding type declarations.

4 import { errorHandlerMiddleware, createApiError, asyncHandler } from './error-handler.middleware';
                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/error-handler.middleware.test.ts:26:45 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

26             const apiError = createApiError(ErrorType.BAD_REQUEST, 'Invalid input');
                                               ~~~~~~~~~

  server/src/common/middleware/error-handler.middleware.test.ts:3:15
    3 import type { ErrorType } from './error-handler.middleware';
                    ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/error-handler.middleware.test.ts:56:42 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

56             const error = createApiError(ErrorType.NOT_FOUND, 'Resource not found', { id: '123' });
                                            ~~~~~~~~~

  server/src/common/middleware/error-handler.middleware.test.ts:3:15
    3 import type { ErrorType } from './error-handler.middleware';
                    ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/error-handler.middleware.test.ts:58:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

58                 type: ErrorType.NOT_FOUND,
                         ~~~~~~~~~

  server/src/common/middleware/error-handler.middleware.test.ts:3:15
    3 import type { ErrorType } from './error-handler.middleware';
                    ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/error-handler.middleware.test.ts:80:52 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

80             expect(nextArg).toHaveProperty('type', ErrorType.INTERNAL_SERVER_ERROR);
                                                      ~~~~~~~~~

  server/src/common/middleware/error-handler.middleware.test.ts:3:15
    3 import type { ErrorType } from './error-handler.middleware';
                    ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/error-handler.middleware.test.ts:84:45 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

84             const apiError = createApiError(ErrorType.FORBIDDEN, 'Access denied');
                                               ~~~~~~~~~

  server/src/common/middleware/error-handler.middleware.test.ts:3:15
    3 import type { ErrorType } from './error-handler.middleware';
                    ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/permission.middleware.ts:1:10 - error TS1484: 'Request' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Request, Response, NextFunction } from 'express';
           ~~~~~~~

server/src/common/middleware/permission.middleware.ts:1:19 - error TS1484: 'Response' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Request, Response, NextFunction } from 'express';
                    ~~~~~~~~

server/src/common/middleware/permission.middleware.ts:1:29 - error TS1484: 'NextFunction' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { Request, Response, NextFunction } from 'express';
                              ~~~~~~~~~~~~

server/src/common/middleware/permission.middleware.ts:2:36 - error TS2307: Cannot find module 'inversify' or its corresponding type declarations.

2 import { injectable, inject } from 'inversify';
                                     ~~~~~~~~~~~

server/src/common/middleware/permission.middleware.ts:3:23 - error TS2307: Cannot find module '../../types.js' or its corresponding type declarations.

3 import { TYPES } from '../../types.js';
                        ~~~~~~~~~~~~~~~~

server/src/common/middleware/permission.middleware.ts:5:43 - error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

5 import { createApiError, ErrorType } from '../types';
                                            ~~~~~~~~~~

server/src/common/middleware/permission.middleware.ts:6:52 - error TS2307: Cannot find module '@shared/utils/permissions' or its corresponding type declarations.

6 import { PermissionManager, checkPermission } from '@shared/utils/permissions';
                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/permission.middleware.ts:7:75 - error TS2307: Cannot find module '@shared/types/auth/permissions' or its corresponding type declarations.

7 import { UserRole, ResourceType, PermissionAction, PermissionLevel } from '@shared/types/auth/permissions';
                                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/permission.middleware.ts:12:7 - error TS2717: Subsequent property declarations must have the same type.  Property 'user' must be of type 'User | undefined', but here has type '{ [key: string]: any; id: string; email: string; role: UserRole; organizationId: string | null; permissions?: string[] | undefined; } | undefined'.

12       user?: {
         ~~~~

  server/types/jwt.d.ts:23:7
    23       user?: User;
             ~~~~
    'user' was also declared here.

server/src/common/middleware/permission.middleware.ts:87:43 - error TS2538: Type 'undefined' cannot be used as an index type.

87       const userRoleLevel = roleHierarchy[req.user.role] ?? -1;
                                             ~~~~~~~~~~~~~

server/src/common/middleware/permission.middleware.ts:200:5 - error TS6133: 'ownerField' is declared but its value is never read.

200     ownerField: string
        ~~~~~~~~~~

server/src/common/middleware/standardized-error-handler.middleware.ts:1:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Request'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                ~~~~~~~

server/src/common/middleware/standardized-error-handler.middleware.ts:1:24 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                         ~~~~~~~~

server/src/common/middleware/standardized-error-handler.middleware.ts:1:34 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'NextFunction'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~

server/src/common/middleware/standardized-error-handler.middleware.ts:10:6 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

10     [ErrorType.UNAUTHORIZED]: 401,
        ~~~~~~~~~

  server/src/common/middleware/standardized-error-handler.middleware.ts:3:25
    3 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/standardized-error-handler.middleware.ts:11:6 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

11     [ErrorType.FORBIDDEN]: 403,
        ~~~~~~~~~

  server/src/common/middleware/standardized-error-handler.middleware.ts:3:25
    3 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/standardized-error-handler.middleware.ts:12:6 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

12     [ErrorType.NOT_FOUND]: 404,
        ~~~~~~~~~

  server/src/common/middleware/standardized-error-handler.middleware.ts:3:25
    3 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/standardized-error-handler.middleware.ts:13:6 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

13     [ErrorType.BAD_REQUEST]: 400,
        ~~~~~~~~~

  server/src/common/middleware/standardized-error-handler.middleware.ts:3:25
    3 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/standardized-error-handler.middleware.ts:14:6 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

14     [ErrorType.CONFLICT]: 409,
        ~~~~~~~~~

  server/src/common/middleware/standardized-error-handler.middleware.ts:3:25
    3 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/standardized-error-handler.middleware.ts:15:6 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

15     [ErrorType.INTERNAL_SERVER_ERROR]: 500,
        ~~~~~~~~~

  server/src/common/middleware/standardized-error-handler.middleware.ts:3:25
    3 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/standardized-error-handler.middleware.ts:33:23 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

33                 type: ErrorType.INTERNAL_SERVER_ERROR,
                         ~~~~~~~~~

  server/src/common/middleware/standardized-error-handler.middleware.ts:3:25
    3 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/middleware/standardized-error-handler.middleware.ts:77:37 - error TS2304: Cannot find name 'ExtendedErrorResponse'.

77             (errorResponse.error as ExtendedErrorResponse).code = AppErrorCode.INTERNAL_SERVER_ERROR;
                                       ~~~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/standardized-error-handler.middleware.ts:80:41 - error TS2304: Cannot find name 'ExtendedErrorResponse'.

80                 (errorResponse.error as ExtendedErrorResponse).stack = error.stack;
                                           ~~~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/standardized-error-handler.middleware.ts:88:37 - error TS2304: Cannot find name 'ExtendedErrorResponse'.

88             (errorResponse.error as ExtendedErrorResponse).requestId = requestId;
                                       ~~~~~~~~~~~~~~~~~~~~~

server/src/common/middleware/standardized-error-handler.middleware.ts:100:123 - error TS6133: 'logger' is declared but its value is never read.

100 export const withStandardizedErrorHandling = (handler: (req: Request, res: Response, next: NextFunction) => Promise<any>, logger: Logger) => {
                                                                                                                              ~~~~~~

server/src/common/modules/booking.module.ts:9:2 - error TS1361: 'Module' cannot be used as a value because it was imported using 'import type'.

9 @Module({
   ~~~~~~

  server/src/common/modules/booking.module.ts:1:15
    1 import type { Module } from '@nestjs/common';
                    ~~~~~~
    'Module' was imported here.

server/src/common/modules/booking.module.ts:10:15 - error TS1361: 'RepositoriesModule' cannot be used as a value because it was imported using 'import type'.

10     imports: [RepositoriesModule],
                 ~~~~~~~~~~~~~~~~~~

  server/src/common/modules/booking.module.ts:4:15
    4 import type { RepositoriesModule } from '../repositories/repositories.module.ts';
                    ~~~~~~~~~~~~~~~~~~
    'RepositoriesModule' was imported here.

server/src/common/modules/booking.module.ts:11:19 - error TS1361: 'BookingController' cannot be used as a value because it was imported using 'import type'.

11     controllers: [BookingController],
                     ~~~~~~~~~~~~~~~~~

  server/src/common/modules/booking.module.ts:2:15
    2 import type { BookingController } from '../controllers/booking.controller.ts';
                    ~~~~~~~~~~~~~~~~~
    'BookingController' was imported here.

server/src/common/modules/booking.module.ts:15:23 - error TS1361: 'BookingService' cannot be used as a value because it was imported using 'import type'.

15             useClass: BookingService,
                         ~~~~~~~~~~~~~~

  server/src/common/modules/booking.module.ts:3:15
    3 import type { BookingService } from '../services/booking.service.ts';
                    ~~~~~~~~~~~~~~
    'BookingService' was imported here.

server/src/common/pipes/validation.pipe.ts:1:10 - error TS1484: 'PipeTransform' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';
           ~~~~~~~~~~~~~

server/src/common/pipes/validation.pipe.ts:23:26 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(object: object, validatorOptions?: ValidatorOptions | undefined): Promise<ValidationError[]>', gave the following error.
    Object literal may only specify known properties, and 'transform' does not exist in type 'ValidatorOptions'.
  Overload 2 of 2, '(schemaName: string, object: object, validatorOptions?: ValidatorOptions | undefined): Promise<ValidationError[]>', gave the following error.
    Argument of type 'unknown[]' is not assignable to parameter of type 'string'.

23     const errors = await validate(object, {
                            ~~~~~~~~


server/src/common/repositories/activity/activity.repository.ts:7:2 - error TS1361: 'Injectable' cannot be used as a value because it was imported using 'import type'.

7 @Injectable()
   ~~~~~~~~~~

  server/src/common/repositories/activity/activity.repository.ts:1:15
    1 import type { Injectable } from '@nestjs/common';
                    ~~~~~~~~~~
    'Injectable' was imported here.

server/src/common/repositories/activity/activity.repository.ts:8:45 - error TS1361: 'BaseRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

8 export class ActivityRepositoryImpl extends BaseRepositoryImpl<Activity, string, Omit<Activity, 'id' | 'createdAt' | 'updatedAt'>, Partial<Omit<Activity, 'id' | 'createdAt' | 'updatedAt'>>> implements ActivityRepository {
                                              ~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/activity/activity.repository.ts:6:15
    6 import type { BaseRepositoryImpl } from '../base.repository.ts';
                    ~~~~~~~~~~~~~~~~~~
    'BaseRepositoryImpl' was imported here.

server/src/common/repositories/activity/activity.repository.ts:13:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

13         this.logger.log(`Finding activities for trip: ${tripId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:18:33 - error TS2339: Property 'startTime' does not exist on type 'PgTableWithColumns<{ name: "activities"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 15 more ...; updatedAt: PgColu...'.

18             .orderBy(activities.startTime);
                                   ~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:21:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

21         this.logger.log(`Creating ${activitiesData.length} activities`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:31:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

31         this.logger.log(`Deleting all activities for trip: ${tripId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:35:23 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

35         return result.rowCount > 0;
                         ~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:38:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

38         this.logger.log(`Finding activities for trip ${tripId} between ${startDate.toISOString()} and ${endDate.toISOString()}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:42:74 - error TS2339: Property 'startTime' does not exist on type 'PgTableWithColumns<{ name: "activities"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 15 more ...; updatedAt: PgColu...'.

42             .where(and(eq(activities.tripId, tripId), between(activities.startTime, startDate, endDate)))
                                                                            ~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:43:33 - error TS2339: Property 'startTime' does not exist on type 'PgTableWithColumns<{ name: "activities"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "activities"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 15 more ...; updatedAt: PgColu...'.

43             .orderBy(activities.startTime);
                                   ~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:46:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

46         this.logger.log(`Rescheduling activity ${activityId} to ${startTime.toISOString()} - ${endTime.toISOString()}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/activity/activity.repository.ts:50:13 - error TS2353: Object literal may only specify known properties, and 'startTime' does not exist in type '{ date?: Date | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; title?: string | SQL<unknown> | PgColumn<...> | undefined; ... 14 more ...; travelMode?: string | ... 3 more ... | undefined; }'.

50             startTime,
               ~~~~~~~~~

server/src/common/repositories/base.repository.ts:38:19 - error TS2488: Type 'any[] | QueryResult<never>' must have a '[Symbol.iterator]()' method that returns an iterator.

38             const [result] = await db
                     ~~~~~~~~

server/src/common/repositories/base.repository.ts:68:27 - error TS2339: Property 'rowsAffected' does not exist on type 'QueryResult<never>'.

68             return result.rowsAffected > 0;
                             ~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.interface.ts:1:30 - error TS2307: Cannot find module '../../../db/bookingSchema.js' or its corresponding type declarations.

1 import type { Booking } from '../../../db/bookingSchema.js';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.interface.ts:3:15 - error TS2305: Module '"../../interfaces/booking.interfaces.js"' has no exported member 'BookingConfirmationDetails'.

3 import type { BookingConfirmationDetails } from '../../interfaces/booking.interfaces.js';
                ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.spec.ts:1:27 - error TS2307: Cannot find module '@nestjs/testing' or its corresponding type declarations.

1 import type { Test } from '@nestjs/testing';
                            ~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.spec.ts:41:33 - error TS1361: 'Test' cannot be used as a value because it was imported using 'import type'.

41         const moduleRef = await Test.createTestingModule({
                                   ~~~~

  server/src/common/repositories/booking/booking.repository.spec.ts:1:15
    1 import type { Test } from '@nestjs/testing';
                    ~~~~
    'Test' was imported here.

server/src/common/repositories/booking/booking.repository.spec.ts:42:25 - error TS1361: 'BookingRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

42             providers: [BookingRepositoryImpl],
                           ~~~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/booking/booking.repository.spec.ts:2:15
    2 import type { BookingRepositoryImpl } from './booking.repository.ts';
                    ~~~~~~~~~~~~~~~~~~~~~
    'BookingRepositoryImpl' was imported here.

server/src/common/repositories/booking/booking.repository.spec.ts:44:59 - error TS1361: 'BookingRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

44         repository = moduleRef.get<BookingRepositoryImpl>(BookingRepositoryImpl);
                                                             ~~~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/booking/booking.repository.spec.ts:2:15
    2 import type { BookingRepositoryImpl } from './booking.repository.ts';
                    ~~~~~~~~~~~~~~~~~~~~~
    'BookingRepositoryImpl' was imported here.

server/src/common/repositories/booking/booking.repository.spec.ts:48:20 - error TS1361: 'Logger' cannot be used as a value because it was imported using 'import type'.

48         jest.spyOn(Logger.prototype, 'log').mockImplementation(() => { });
                      ~~~~~~

  server/src/common/repositories/booking/booking.repository.spec.ts:3:15
    3 import type { Logger } from '@nestjs/common';
                    ~~~~~~
    'Logger' was imported here.

server/src/common/repositories/booking/booking.repository.spec.ts:49:20 - error TS1361: 'Logger' cannot be used as a value because it was imported using 'import type'.

49         jest.spyOn(Logger.prototype, 'error').mockImplementation(() => { });
                      ~~~~~~

  server/src/common/repositories/booking/booking.repository.spec.ts:3:15
    3 import type { Logger } from '@nestjs/common';
                    ~~~~~~
    'Logger' was imported here.

server/src/common/repositories/booking/booking.repository.ts:7:15 - error TS2305: Module '"../../interfaces/booking.interfaces.ts"' has no exported member 'BookingConfirmationDetails'.

7 import type { BookingConfirmationDetails } from '../../interfaces/booking.interfaces.ts';
                ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:12:2 - error TS1361: 'Injectable' cannot be used as a value because it was imported using 'import type'.

12 @Injectable()
    ~~~~~~~~~~

  server/src/common/repositories/booking/booking.repository.ts:1:15
    1 import type { Injectable } from '@nestjs/common';
                    ~~~~~~~~~~
    'Injectable' was imported here.

server/src/common/repositories/booking/booking.repository.ts:13:44 - error TS1361: 'BaseRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

13 export class BookingRepositoryImpl extends BaseRepositoryImpl<Booking, string, Omit<Booking, 'id' | 'createdAt' | 'updatedAt'>, Partial<Omit<Booking, 'id' | 'createdAt' | 'updatedAt'>>> implements BookingRepository {
                                              ~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/booking/booking.repository.ts:6:15
    6 import type { BaseRepositoryImpl } from '../base.repository.ts';
                    ~~~~~~~~~~~~~~~~~~
    'BaseRepositoryImpl' was imported here.

server/src/common/repositories/booking/booking.repository.ts:18:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

18         this.logger.log(`Finding bookings for user: ${userId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:26:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

26         this.logger.log(`Finding bookings for trip: ${tripId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:34:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

34         this.logger.log(`Finding booking by provider reference ID: ${providerReferenceId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:43:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

43         this.logger.log(`Confirming booking: ${id}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:48:13 - error TS2561: Object literal may only specify known properties, but 'confirmationDetails' does not exist in type '{ userId?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; title?: string | SQL<unknown> | PgColumn<...> | undefined; ... 17 more ...; cancellationReason?: string | ... 3 more ... | undefined; }'. Did you mean to write 'confirmationCode'?

48             confirmationDetails,
               ~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:56:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

56         this.logger.log(`Cancelling booking: ${id}, reason: ${cancellationReason}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:69:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

69         this.logger.log(`Getting booking stats for user: ${userId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:75:23 - error TS2339: Property 'fn' does not exist on type 'PostgresJsDatabase<any> & { $client: Sql<{}>; }'.

75             count: db.fn.count()
                         ~~

server/src/common/repositories/booking/booking.repository.ts:83:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

83         this.logger.log(`Getting booking stats for organization: ${orgId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/booking/booking.repository.ts:89:23 - error TS2339: Property 'fn' does not exist on type 'PostgresJsDatabase<any> & { $client: Sql<{}>; }'.

89             count: db.fn.count()
                         ~~

server/src/common/repositories/booking/booking.repository.ts:92:32 - error TS2339: Property 'organizationId' does not exist on type 'PgTableWithColumns<{ name: "bookings"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "bookings"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 18 more ...; updatedAt: PgColumn<....'.

92             .where(eq(bookings.organizationId, orgId))
                                  ~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.interface.ts:1:41 - error TS2307: Cannot find module '../../../db/schema.js' or its corresponding type declarations.

1 import type { Organization, User } from '../../../db/schema.js';
                                          ~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.interface.ts:2:15 - error TS2305: Module '"../../interfaces/booking.interfaces.ts"' has no exported member 'OrganizationBookingSettings'.

2 import type { OrganizationBookingSettings } from '../../interfaces/booking.interfaces.ts';
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:6:15 - error TS2305: Module '"../../interfaces/booking.interfaces.ts"' has no exported member 'OrganizationBookingSettings'.

6 import type { OrganizationBookingSettings } from '../../interfaces/booking.interfaces.ts';
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:8:2 - error TS1361: 'Injectable' cannot be used as a value because it was imported using 'import type'.

8 @Injectable()
   ~~~~~~~~~~

  server/src/common/repositories/organization/organization.repository.ts:1:15
    1 import type { Injectable } from '@nestjs/common';
                    ~~~~~~~~~~
    'Injectable' was imported here.

server/src/common/repositories/organization/organization.repository.ts:9:49 - error TS1361: 'BaseRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

9 export class OrganizationRepositoryImpl extends BaseRepositoryImpl<Organization, string, Omit<Organization, 'id' | 'createdAt' | 'updatedAt'>, Partial<Omit<Organization, 'id' | 'createdAt' | 'updatedAt'>>> implements OrganizationRepository {
                                                  ~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/organization/organization.repository.ts:7:15
    7 import type { BaseRepositoryImpl } from '../base.repository.ts';
                    ~~~~~~~~~~~~~~~~~~
    'BaseRepositoryImpl' was imported here.

server/src/common/repositories/organization/organization.repository.ts:14:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

14         this.logger.log(`Finding organization by slug: ${slug}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:23:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

23         this.logger.log(`Getting members for organization: ${organizationId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:34:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

34         this.logger.log(`Adding member ${userId} to organization ${organizationId} with role ${role}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:38:18 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: string | SQL<unknown> | Placeholder<string, any>; organizationId: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; ... 7 more ...; joinedAt?: Date | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'SQL<unknown> | "admin" | "manager" | "member" | "viewer" | "billing" | Placeholder<string, any> | undefined'.
  Overload 2 of 2, '(values: { userId: string | SQL<unknown> | Placeholder<string, any>; organizationId: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; ... 7 more ...; joinedAt?: Date | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'organizationId' does not exist in type '{ userId: string | SQL<unknown> | Placeholder<string, any>; organizationId: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; ... 7 more ...; joinedAt?: Date | ... 3 more ... | undefined; }[]'.

38                 .values({
                    ~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:29:101
     29 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     30     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
     36     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     37 } & {};
        ~
    The expected type comes from property 'role' which is declared here on type '{ userId: string | SQL<unknown> | Placeholder<string, any>; organizationId: string | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | SQL<...> | Placeholder<...> | undefined; ... 7 more ...; joinedAt?: Date | ... 3 more ... | undefined; }'

server/src/common/repositories/organization/organization.repository.ts:53:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

53         this.logger.log(`Removing member ${userId} from organization ${organizationId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:57:23 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

57         return result.rowCount > 0;
                         ~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:60:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

60         this.logger.log(`Updating role for member ${userId} in organization ${organizationId} to ${role}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:64:13 - error TS2322: Type 'string' is not assignable to type 'SQL<unknown> | "admin" | "manager" | "member" | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | "viewer" | "billing" | undefined'.

64             role,
               ~~~~

  node_modules/drizzle-orm/pg-core/query-builders/update.d.ts:28:57
    28 export type PgUpdateSetSource<TTable extends PgTable> = {
                                                               ~
    29     [Key in keyof TTable['$inferInsert']]?: GetColumnData<TTable['_']['columns'][Key]> | SQL | PgColumn | undefined;
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    30 } & {};
       ~
    The expected type comes from property 'role' which is declared here on type '{ userId?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; organizationId?: string | SQL<...> | PgColumn<...> | undefined; ... 8 more ...; joinedAt?: Date | ... 3 more ... | undefined; }'

server/src/common/repositories/organization/organization.repository.ts:68:23 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

68         return result.rowCount > 0;
                         ~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:71:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

71         this.logger.log(`Updating plan for organization ${organizationId} to ${plan}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/organization/organization.repository.ts:83:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

83         this.logger.log(`Updating settings for organization ${organizationId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/repositories.module.ts:7:2 - error TS1361: 'Module' cannot be used as a value because it was imported using 'import type'.

7 @Module({
   ~~~~~~

  server/src/common/repositories/repositories.module.ts:1:15
    1 import type { Module } from '@nestjs/common';
                    ~~~~~~
    'Module' was imported here.

server/src/common/repositories/repositories.module.ts:8:20 - error TS1361: 'RepositoryProviders' cannot be used as a value because it was imported using 'import type'.

8     providers: [...RepositoryProviders],
                     ~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repositories.module.ts:2:15
    2 import type { RepositoryProviders } from './repository.providers.ts';
                    ~~~~~~~~~~~~~~~~~~~
    'RepositoryProviders' was imported here.

server/src/common/repositories/repositories.module.ts:9:18 - error TS1361: 'RepositoryProviders' cannot be used as a value because it was imported using 'import type'.

9     exports: [...RepositoryProviders],
                   ~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repositories.module.ts:2:15
    2 import type { RepositoryProviders } from './repository.providers.ts';
                    ~~~~~~~~~~~~~~~~~~~
    'RepositoryProviders' was imported here.

server/src/common/repositories/repository.providers.ts:15:15 - error TS1361: 'TripRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

15     useClass: TripRepositoryImpl,
                 ~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repository.providers.ts:2:15
    2 import type { TripRepositoryImpl } from '../../trips/repositories/trip.repository.ts';
                    ~~~~~~~~~~~~~~~~~~
    'TripRepositoryImpl' was imported here.

server/src/common/repositories/repository.providers.ts:19:15 - error TS1361: 'OrganizationRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

19     useClass: OrganizationRepositoryImpl,
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repository.providers.ts:3:15
    3 import type { OrganizationRepositoryImpl } from './organization/organization.repository.ts';
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~
    'OrganizationRepositoryImpl' was imported here.

server/src/common/repositories/repository.providers.ts:23:15 - error TS1361: 'ActivityRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

23     useClass: ActivityRepositoryImpl,
                 ~~~~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repository.providers.ts:4:15
    4 import type { ActivityRepositoryImpl } from './activity/activity.repository.ts';
                    ~~~~~~~~~~~~~~~~~~~~~~
    'ActivityRepositoryImpl' was imported here.

server/src/common/repositories/repository.providers.ts:27:15 - error TS1361: 'UserRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

27     useClass: UserRepositoryImpl,
                 ~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repository.providers.ts:5:15
    5 import type { UserRepositoryImpl } from './user/user.repository.ts';
                    ~~~~~~~~~~~~~~~~~~
    'UserRepositoryImpl' was imported here.

server/src/common/repositories/repository.providers.ts:31:15 - error TS1361: 'BookingRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

31     useClass: BookingRepositoryImpl,
                 ~~~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repository.providers.ts:6:15
    6 import type { BookingRepositoryImpl } from './booking/booking.repository.ts';
                    ~~~~~~~~~~~~~~~~~~~~~
    'BookingRepositoryImpl' was imported here.

server/src/common/repositories/repository.providers.ts:39:15 - error TS1361: 'RefreshTokenRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

39     useClass: RefreshTokenRepositoryImpl,
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/repository.providers.ts:8:15
    8 import type { RefreshTokenRepositoryImpl } from '../../auth/repositories/refresh-token.repository.ts';
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~
    'RefreshTokenRepositoryImpl' was imported here.

server/src/common/repositories/user/user.repository.interface.ts:1:27 - error TS2307: Cannot find module '../../../db/schema.js' or its corresponding type declarations.

1 import type { User } from '../../../db/schema.js';
                            ~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:8:30 - error TS2307: Cannot find module '@shared/types/auth/dto' or its corresponding type declarations.

8 import { UserResponse } from '@shared/types/auth/dto';
                               ~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:9:2 - error TS1361: 'Injectable' cannot be used as a value because it was imported using 'import type'.

9 @Injectable()
   ~~~~~~~~~~

  server/src/common/repositories/user/user.repository.ts:1:15
    1 import type { Injectable } from '@nestjs/common';
                    ~~~~~~~~~~
    'Injectable' was imported here.

server/src/common/repositories/user/user.repository.ts:10:41 - error TS1361: 'BaseRepositoryImpl' cannot be used as a value because it was imported using 'import type'.

10 export class UserRepositoryImpl extends BaseRepositoryImpl<User, string, Omit<User, 'id' | 'createdAt' | 'updatedAt'>, Partial<Omit<User, 'id' | 'createdAt' | 'updatedAt'>>> implements UserRepository {
                                           ~~~~~~~~~~~~~~~~~~

  server/src/common/repositories/user/user.repository.ts:7:15
    7 import type { BaseRepositoryImpl } from '../base.repository.ts';
                    ~~~~~~~~~~~~~~~~~~
    'BaseRepositoryImpl' was imported here.

server/src/common/repositories/user/user.repository.ts:15:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

15         this.logger.log(`Finding user by email: ${email}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:25:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

25         this.logger.log(`Finding user by email (${email}) and tenant (${tenantId})`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:32:30 - error TS2339: Property 'tenantId' does not exist on type 'PgTableWithColumns<{ name: "users"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "users"; dataType: "string"; columnType: "PgUUID"; data: string; driverParam: string; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; ... 21 more ...; updatedAt: PgColumn<...>; }...'.

32                     eq(users.tenantId, tenantId)
                                ~~~~~~~~

server/src/common/repositories/user/user.repository.ts:38:11 - error TS2416: Property 'findByOrganizationId' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(organizationId: string) => Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; ... 16 more ...; tokenVersion: number; }[]>' is not assignable to type '(organizationId: string) => Promise<UserResponse[]>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; }[]>' is not assignable to type 'Promise<UserResponse[]>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }[]' is not assignable to type 'UserResponse[]'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

38     async findByOrganizationId(organizationId: string): Promise<User[]> {
             ~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:39:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

39         this.logger.log(`Finding users for organization: ${organizationId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:50:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

50         this.logger.log(`Updating password for user: ${id}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:58:23 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

58         return result.rowCount > 0;
                         ~~~~~~~~

server/src/common/repositories/user/user.repository.ts:62:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

62         this.logger.log(`Verifying password for user: ${userId}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:68:21 - error TS2339: Property 'password' does not exist on type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }'.

68         return user.password === password;
                       ~~~~~~~~

server/src/common/repositories/user/user.repository.ts:78:28 - error TS2339: Property 'tenantId' does not exist on type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }'.

78             tenantId: user.tenantId || null,
                              ~~~~~~~~

server/src/common/repositories/user/user.repository.ts:86:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

86         this.logger.log(`Updating last login for user: ${id}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:94:23 - error TS2339: Property 'rowCount' does not exist on type 'RowList<never[]>'.

94         return result.rowCount > 0;
                         ~~~~~~~~

server/src/common/repositories/user/user.repository.ts:96:11 - error TS2416: Property 'updatePreferences' in type 'UserRepositoryImpl' is not assignable to the same property in base type 'UserRepository'.
  Type '(id: string, preferences: UserBookingPreferences) => Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; ... 17 more ...; tokenVersion: number; } | null>' is not assignable to type '(id: string, preferences: UserBookingPreferences) => Promise<UserResponse | null>'.
    Type 'Promise<{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null>' is not assignable to type 'Promise<UserResponse | null>'.
      Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; ... 15 more ...; tokenVersion: number; } | null' is not assignable to type 'UserResponse | null'.
        Type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }' is not assignable to type 'UserResponse'.
          Types of property 'role' are incompatible.
            Type '"super_admin" | "admin" | "manager" | "member" | "guest"' is not assignable to type 'UserRole'.
              Type '"super_admin"' is not assignable to type 'UserRole'.

96     async updatePreferences(id: string, preferences: UserBookingPreferences): Promise<User | null> {
             ~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:97:25 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'LogEntry'.

97         this.logger.log(`Updating preferences for user: ${id}`);
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/repositories/user/user.repository.ts:101:13 - error TS2353: Object literal may only specify known properties, and 'preferences' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; username?: string | SQL<unknown> | PgColumn<...> | undefined; ... 20 more ...; tokenVersion?: number | ... 2 more ... | undefined; }'.

101             preferences,
                ~~~~~~~~~~~

server/src/common/services/booking.service.ts:4:15 - error TS2305: Module '"../interfaces/booking.interfaces.js"' has no exported member 'BookingConfirmationDetails'.

4 import type { BookingConfirmationDetails } from '../interfaces/booking.interfaces.js';
                ~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/common/services/booking.service.ts:9:2 - error TS1361: 'Injectable' cannot be used as a value because it was imported using 'import type'.

9 @Injectable()
   ~~~~~~~~~~

  server/src/common/services/booking.service.ts:1:15
    1 import type { Injectable, Inject, Logger } from '@nestjs/common';
                    ~~~~~~~~~~
    'Injectable' was imported here.

server/src/common/services/booking.service.ts:11:35 - error TS1361: 'Logger' cannot be used as a value because it was imported using 'import type'.

11     private readonly logger = new Logger(BookingService.name);
                                     ~~~~~~

  server/src/common/services/booking.service.ts:1:35
    1 import type { Injectable, Inject, Logger } from '@nestjs/common';
                                        ~~~~~~
    'Logger' was imported here.

server/src/common/services/booking.service.ts:13:6 - error TS1361: 'Inject' cannot be used as a value because it was imported using 'import type'.

13     @Inject('BookingRepository')
        ~~~~~~

  server/src/common/services/booking.service.ts:1:27
    1 import type { Injectable, Inject, Logger } from '@nestjs/common';
                                ~~~~~~
    'Inject' was imported here.

server/src/common/services/error.service.ts:8:2 - error TS1361: 'Injectable' cannot be used as a value because it was imported using 'import type'.

8 @Injectable()
   ~~~~~~~~~~

  server/src/common/services/error.service.ts:1:15
    1 import type { Injectable, Logger } from '@nestjs/common';
                    ~~~~~~~~~~
    'Injectable' was imported here.

server/src/common/services/error.service.ts:10:35 - error TS1361: 'Logger' cannot be used as a value because it was imported using 'import type'.

10     private readonly logger = new Logger(ErrorService.name);
                                     ~~~~~~

  server/src/common/services/error.service.ts:1:27
    1 import type { Injectable, Logger } from '@nestjs/common';
                                ~~~~~~
    'Logger' was imported here.

server/src/common/services/error.service.ts:19:31 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

19         return createApiError(ErrorType.UNAUTHORIZED, message, details);
                                 ~~~~~~~~~

  server/src/common/services/error.service.ts:2:25
    2 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/services/error.service.ts:29:31 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

29         return createApiError(ErrorType.FORBIDDEN, message, details);
                                 ~~~~~~~~~

  server/src/common/services/error.service.ts:2:25
    2 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/services/error.service.ts:39:31 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

39         return createApiError(ErrorType.NOT_FOUND, message, details);
                                 ~~~~~~~~~

  server/src/common/services/error.service.ts:2:25
    2 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/services/error.service.ts:49:31 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

49         return createApiError(ErrorType.BAD_REQUEST, message, details);
                                 ~~~~~~~~~

  server/src/common/services/error.service.ts:2:25
    2 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/services/error.service.ts:59:31 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

59         return createApiError(ErrorType.CONFLICT, message, details);
                                 ~~~~~~~~~

  server/src/common/services/error.service.ts:2:25
    2 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/services/error.service.ts:68:38 - error TS1361: 'ErrorType' cannot be used as a value because it was imported using 'import type'.

68         const error = createApiError(ErrorType.INTERNAL_SERVER_ERROR, message, details);
                                        ~~~~~~~~~

  server/src/common/services/error.service.ts:2:25
    2 import type { ApiError, ErrorType } from '../types/index.js';
                              ~~~~~~~~~
    'ErrorType' was imported here.

server/src/common/types/error.types.ts:42:20 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

42             return AppErrorCode.BAD_REQUEST;
                      ~~~~~~~~~~~~

  server/src/common/types/error.types.ts:13:15
    13 import type { AppErrorCode } from '@shared/types/error-codes.js';
                     ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/types/error.types.ts:44:20 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

44             return AppErrorCode.UNAUTHORIZED;
                      ~~~~~~~~~~~~

  server/src/common/types/error.types.ts:13:15
    13 import type { AppErrorCode } from '@shared/types/error-codes.js';
                     ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/types/error.types.ts:46:20 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

46             return AppErrorCode.FORBIDDEN;
                      ~~~~~~~~~~~~

  server/src/common/types/error.types.ts:13:15
    13 import type { AppErrorCode } from '@shared/types/error-codes.js';
                     ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/types/error.types.ts:48:20 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

48             return AppErrorCode.NOT_FOUND;
                      ~~~~~~~~~~~~

  server/src/common/types/error.types.ts:13:15
    13 import type { AppErrorCode } from '@shared/types/error-codes.js';
                     ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/types/error.types.ts:50:20 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

50             return AppErrorCode.CONFLICT;
                      ~~~~~~~~~~~~

  server/src/common/types/error.types.ts:13:15
    13 import type { AppErrorCode } from '@shared/types/error-codes.js';
                     ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/types/error.types.ts:52:20 - error TS1361: 'AppErrorCode' cannot be used as a value because it was imported using 'import type'.

52             return AppErrorCode.INTERNAL_SERVER_ERROR;
                      ~~~~~~~~~~~~

  server/src/common/types/error.types.ts:13:15
    13 import type { AppErrorCode } from '@shared/types/error-codes.js';
                     ~~~~~~~~~~~~
    'AppErrorCode' was imported here.

server/src/common/utils/async-handler.ts:1:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Request'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                ~~~~~~~

server/src/common/utils/async-handler.ts:1:24 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                         ~~~~~~~~

server/src/common/utils/async-handler.ts:1:34 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'NextFunction'.

1 import type { Request, Response, NextFunction } from '../../express-augmentations.ts';
                                   ~~~~~~~~~~~~

server/src/common/utils/async-handler.ts:2:10 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'RequestHandler'.

2 import { RequestHandler as ExpressRequestHandler } from '../../express-augmentations.ts';
           ~~~~~~~~~~~~~~

server/src/common/utils/response-formatter.util.ts:1:15 - error TS2305: Module '"../../express-augmentations.ts"' has no exported member 'Response'.

1 import type { Response } from '../../express-augmentations.ts';
                ~~~~~~~~

server/src/common/validation/auth.validator.ts:2:26 - error TS2307: Cannot find module '@shared/types/auth/permissions' or its corresponding type declarations.

2 import { UserRole } from '@shared/types/auth/permissions';
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/email/email.module.ts:5:2 - error TS1361: 'Module' cannot be used as a value because it was imported using 'import type'.

5 @Module({
   ~~~~~~

  server/src/email/email.module.ts:1:15
    1 import type { Module } from '@nestjs/common';
                    ~~~~~~
    'Module' was imported here.

server/src/email/email.module.ts:6:15 - error TS1361: 'ConfigModule' cannot be used as a value because it was imported using 'import type'.

6     imports: [ConfigModule],
                ~~~~~~~~~~~~

  server/src/email/email.module.ts:2:15
    2 import type { ConfigModule, ConfigService } from '@nestjs/config';
                    ~~~~~~~~~~~~
    'ConfigModule' was imported here.

server/src/email/email.module.ts:11:28 - error TS1361: 'NodemailerEmailService' cannot be used as a value because it was imported using 'import type'.

11                 return new NodemailerEmailService(configService, errorService);
                              ~~~~~~~~~~~~~~~~~~~~~~

  server/src/email/email.module.ts:3:15
    3 import type { NodemailerEmailService } from './services/nodemailer-email.service.js';
                    ~~~~~~~~~~~~~~~~~~~~~~
    'NodemailerEmailService' was imported here.

server/src/email/email.module.ts:13:22 - error TS1361: 'ConfigService' cannot be used as a value because it was imported using 'import type'.

13             inject: [ConfigService, ErrorService],
                        ~~~~~~~~~~~~~

  server/src/email/email.module.ts:2:29
    2 import type { ConfigModule, ConfigService } from '@nestjs/config';
                                  ~~~~~~~~~~~~~
    'ConfigService' was imported here.

server/src/email/email.module.ts:13:37 - error TS1361: 'ErrorService' cannot be used as a value because it was imported using 'import type'.

13             inject: [ConfigService, ErrorService],
                                       ~~~~~~~~~~~~

  server/src/email/email.module.ts:4:15
    4 import type { ErrorService } from '../common/services/error.service.js';
                    ~~~~~~~~~~~~
    'ErrorService' was imported here.

server/src/email/email.module.ts:15:9 - error TS1361: 'ErrorService' cannot be used as a value because it was imported using 'import type'.

15         ErrorService,
           ~~~~~~~~~~~~

  server/src/email/email.module.ts:4:15
    4 import type { ErrorService } from '../common/services/error.service.js';
                    ~~~~~~~~~~~~
    'ErrorService' was imported here.

server/src/health/database.health.ts:1:27 - error TS1484: 'HealthIndicatorResult' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

1 import { HealthIndicator, HealthIndicatorResult, HealthCheckError } from '@nestjs/terminus';
                            ~~~~~~~~~~~~~~~~~~~~~

server/src/health/database.health.ts:40:57 - error TS18046: 'error' is of type 'unknown'.

40       this.logger.error('Database health check failed', error.stack);
                                                           ~~~~~

server/src/health/database.health.ts:44:18 - error TS18046: 'error' is of type 'unknown'.

44           error: error.message,
                    ~~~~~

server/src/health/database.health.ts:45:17 - error TS18046: 'error' is of type 'unknown'.

45           code: error.code,
                   ~~~~~

server/src/health/health.controller.ts:5:3 - error TS1484: 'HealthCheckResult' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5   HealthCheckResult,
    ~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:8:3 - error TS1484: 'HealthIndicatorResult' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

8   HealthIndicatorResult,
    ~~~~~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:10:52 - error TS2307: Cannot find module '@nestjs/swagger' or its corresponding type declarations.

10 import { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';
                                                      ~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:11:31 - error TS2307: Cannot find module './health.service' or its corresponding type declarations.

11 import { HealthService } from './health.service';
                                 ~~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:12:41 - error TS2307: Cannot find module './database.health' or its corresponding type declarations.

12 import { DatabaseHealthIndicator } from './database.health';
                                           ~~~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:13:27 - error TS2307: Cannot find module '../auth/guards/auth.guard' or its corresponding type declarations.

13 import { AuthGuard } from '../auth/guards/auth.guard';
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:14:23 - error TS2307: Cannot find module '../auth/decorators/roles.decorator' or its corresponding type declarations.

14 import { Roles } from '../auth/decorators/roles.decorator';
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:15:26 - error TS2307: Cannot find module '../users/enums/user-role.enum' or its corresponding type declarations.

15 import { UserRole } from '../users/enums/user-role.enum';
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/health/health.controller.ts:74:20 - error TS18046: 'error' is of type 'unknown'.

74           message: error.message,
                      ~~~~~

server/src/health/health.controller.ts:75:17 - error TS18046: 'error' is of type 'unknown'.

75           code: error.code,
                   ~~~~~

server/src/health/health.controller.ts:110:35 - error TS7006: Parameter 'f' implicitly has an 'any' type.

110         fields: result.fields.map(f => ({
                                      ~

server/src/health/health.module.ts:3:31 - error TS2307: Cannot find module '@nestjs/typeorm' or its corresponding type declarations.

3 import { TypeOrmModule } from '@nestjs/typeorm';
                                ~~~~~~~~~~~~~~~~~

server/src/health/health.module.ts:4:34 - error TS2307: Cannot find module './health.controller' or its corresponding type declarations.

4 import { HealthController } from './health.controller';
                                   ~~~~~~~~~~~~~~~~~~~~~

server/src/health/health.module.ts:5:31 - error TS2307: Cannot find module './health.service' or its corresponding type declarations.

5 import { HealthService } from './health.service';
                                ~~~~~~~~~~~~~~~~~~

server/src/health/health.module.ts:6:41 - error TS2307: Cannot find module './database.health' or its corresponding type declarations.

6 import { DatabaseHealthIndicator } from './database.health';
                                          ~~~~~~~~~~~~~~~~~~~

server/src/trips/controllers/trip.controller.ts:64:13 - error TS2322: Type '(req: AuthenticatedRequest, _res: Response, next: NextFunction) => void' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
      Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'CustomRequestFields'.
        Types of property 'user' are incompatible.
          Type '{ id: string; email: string; organizationId: string; role?: string | undefined; } | null | undefined' is not assignable to type 'AuthUser'.
            Type 'undefined' is not assignable to type 'AuthUser'.

64             requireAuth(logger),
               ~~~~~~~~~~~~~~~~~~~

server/src/trips/controllers/trip.controller.ts:65:13 - error TS2322: Type '(req: AuthenticatedRequest, _res: Response, next: NextFunction) => void' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
      Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'CustomRequestFields'.
        Types of property 'user' are incompatible.
          Type '{ id: string; email: string; organizationId: string; role?: string | undefined; } | null | undefined' is not assignable to type 'AuthUser'.
            Type 'undefined' is not assignable to type 'AuthUser'.

65             requireOrgContext(logger),
               ~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/trips/controllers/trip.controller.ts:89:13 - error TS2322: Type '(req: AuthenticatedRequest, _res: Response, next: NextFunction) => void' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
      Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'CustomRequestFields'.
        Types of property 'user' are incompatible.
          Type '{ id: string; email: string; organizationId: string; role?: string | undefined; } | null | undefined' is not assignable to type 'AuthUser'.
            Type 'undefined' is not assignable to type 'AuthUser'.

89             requireAuth(logger),
               ~~~~~~~~~~~~~~~~~~~

server/src/trips/controllers/trip.controller.ts:90:13 - error TS2322: Type '(req: AuthenticatedRequest, _res: Response, next: NextFunction) => void' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
      Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'CustomRequestFields'.
        Types of property 'user' are incompatible.
          Type '{ id: string; email: string; organizationId: string; role?: string | undefined; } | null | undefined' is not assignable to type 'AuthUser'.
            Type 'undefined' is not assignable to type 'AuthUser'.

90             requireOrgContext(logger),
               ~~~~~~~~~~~~~~~~~~~~~~~~~

server/src/trips/controllers/trip.controller.ts:114:13 - error TS2322: Type '(req: AuthenticatedRequest, _res: Response, next: NextFunction) => void' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
  Types of parameters 'req' and 'req' are incompatible.
    Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.
      Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'CustomRequestFields'.
        Types of property 'user' are incompatible.
          Type '{ id: string; email: string; organizationId: string; role?: string | undefined; } | null | undefined' is not assignable to type 'AuthUser'.
            Type 'undefined' is not assignable to type 'AuthUser'.

114             requireAuth(logger),
                ~~~~~~~~~~~~~~~~~~~

server/src/trips/controllers/trip.controller.ts:123:77 - error TS2345: Argument of type '{ id: string; email: string; organizationId: string; role?: string | undefined; } & AuthUser' is not assignable to parameter of type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }'.
  Property 'tokenVersion' is missing in type '{ id: string; email: string; organizationId: string; role?: string | undefined; } & AuthUser' but required in type '{ createdAt: Date; updatedAt: Date; id: string; email: string; role: "super_admin" | "admin" | "manager" | "member" | "guest"; username: string; firstName: string | null; lastName: string | null; ... 14 more ...; tokenVersion: number; }'.

123                     const trip = await this.tripService.getTripById(tripId, authReq.user);
                                                                                ~~~~~~~~~~~~

server/sslManager.ts:223:35 - error TS6133: 'certificate' is declared but its value is never read.

223     private extractExpirationDate(certificate: string): Date {
                                      ~~~~~~~~~~~

server/sslManager.ts:233:62 - error TS6133: 'privateKey' is declared but its value is never read.

233     private async sendACMERequest(url: string, payload: any, privateKey: string): Promise<Response> {
                                                                 ~~~~~~~~~~

server/ssoProvider.ts:1:29 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Router } from '../../express-augmentations.ts';
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/ssoProvider.ts:3:52 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

3 import { users, organizations, userRoleEnum } from '@shared/schema';
                                                     ~~~~~~~~~~~~~~~~

server/ssoProvider.ts:47:53 - error TS6133: 'relayState' is declared but its value is never read.

47     async processSAMLResponse(samlResponse: string, relayState?: string): Promise<{
                                                       ~~~~~~~~~~

server/ssoProvider.ts:185:31 - error TS6133: 'samlResponse' is declared but its value is never read.

185     private parseSAMLResponse(samlResponse: string): any {
                                  ~~~~~~~~~~~~

server/ssoProvider.ts:239:37 - error TS6133: 'code' is declared but its value is never read.

239     private async exchangeOAuthCode(code: string, state: string): Promise<any> {
                                        ~~~~

server/ssoProvider.ts:239:51 - error TS6133: 'state' is declared but its value is never read.

239     private async exchangeOAuthCode(code: string, state: string): Promise<any> {
                                                      ~~~~~

server/ssoProvider.ts:243:36 - error TS6133: 'accessToken' is declared but its value is never read.

243     private async getOAuthUserInfo(accessToken: string): Promise<any> {
                                       ~~~~~~~~~~~

server/ssoProvider.ts:302:26 - error TS1361: 'Router' cannot be used as a value because it was imported using 'import type'.

302 export const ssoRouter = Router();
                             ~~~~~~

  server/ssoProvider.ts:1:15
    1 import type { Router } from '../../express-augmentations.ts';
                    ~~~~~~
    'Router' was imported here.

server/ssoProvider.ts:304:51 - error TS7006: Parameter 'req' implicitly has an 'any' type.

304 ssoRouter.get('/metadata/:organizationId', async (req, res) => {
                                                      ~~~

server/ssoProvider.ts:304:56 - error TS7006: Parameter 'res' implicitly has an 'any' type.

304 ssoRouter.get('/metadata/:organizationId', async (req, res) => {
                                                           ~~~

server/ssoProvider.ts:317:48 - error TS7006: Parameter 'req' implicitly has an 'any' type.

317 ssoRouter.get('/login/:organizationId', async (req, res) => {
                                                   ~~~

server/ssoProvider.ts:317:53 - error TS7006: Parameter 'res' implicitly has an 'any' type.

317 ssoRouter.get('/login/:organizationId', async (req, res) => {
                                                        ~~~

server/ssoProvider.ts:330:47 - error TS7006: Parameter 'req' implicitly has an 'any' type.

330 ssoRouter.post('/acs/:organizationId', async (req, res) => {
                                                  ~~~

server/ssoProvider.ts:330:52 - error TS7006: Parameter 'res' implicitly has an 'any' type.

330 ssoRouter.post('/acs/:organizationId', async (req, res) => {
                                                       ~~~

server/ssoProvider.ts:352:41 - error TS7006: Parameter 'req' implicitly has an 'any' type.

352 ssoRouter.get('/oauth/callback', async (req, res) => {
                                            ~~~

server/ssoProvider.ts:352:46 - error TS7006: Parameter 'res' implicitly has an 'any' type.

352 ssoRouter.get('/oauth/callback', async (req, res) => {
                                                 ~~~

server/storage/implementations/MemStorage.ts:4:92 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

4 import type { Activity, TripTraveler, NewTripTraveler, User, NewUser, Trip, NewTrip } from '@shared/schema';
                                                                                             ~~~~~~~~~~~~~~~~

server/storage/implementations/MemStorage.ts:11:39 - error TS1361: 'InMemoryTripTravelerRepository' cannot be used as a value because it was imported using 'import type'.

11         this.travelerRepository = new InMemoryTripTravelerRepository();
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/storage/implementations/MemStorage.ts:2:15
    2 import type { InMemoryTripTravelerRepository } from '../repositories/TripTravelerRepository.js';
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'InMemoryTripTravelerRepository' was imported here.

server/storage/types/index.ts:1:55 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

1 import type { User, Trip, Activity, BaseEntity } from '@shared/schema';
                                                        ~~~~~~~~~~~~~~~~

server/test-app.ts:2:63 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

2 import express, { type Request, Response, NextFunction } from '../../express-augmentations.ts';
                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/test-app.ts:7:10 - error TS2614: Module '"./middleware/secureAuth.js"' has no exported member 'preventSQLInjection'. Did you mean to use 'import preventSQLInjection from "./middleware/secureAuth.js"' instead?

7 import { preventSQLInjection, configureCORS } from "./middleware/secureAuth.js";
           ~~~~~~~~~~~~~~~~~~~

server/test-app.ts:7:31 - error TS2614: Module '"./middleware/secureAuth.js"' has no exported member 'configureCORS'. Did you mean to use 'import configureCORS from "./middleware/secureAuth.js"' instead?

7 import { preventSQLInjection, configureCORS } from "./middleware/secureAuth.js";
                                ~~~~~~~~~~~~~

server/test-app.ts:16:10 - error TS2614: Module '"./middleware/secureAuth.js"' has no exported member 'unifiedAuthMiddleware'. Did you mean to use 'import unifiedAuthMiddleware from "./middleware/secureAuth.js"' instead?

16 import { unifiedAuthMiddleware } from "./middleware/secureAuth.js";
            ~~~~~~~~~~~~~~~~~~~~~

server/test-app.ts:28:10 - error TS7006: Parameter '_req' implicitly has an 'any' type.

28 app.use((_req, res, next) => {
            ~~~~

server/test-app.ts:28:16 - error TS7006: Parameter 'res' implicitly has an 'any' type.

28 app.use((_req, res, next) => {
                  ~~~

server/test-app.ts:28:21 - error TS7006: Parameter 'next' implicitly has an 'any' type.

28 app.use((_req, res, next) => {
                       ~~~~

server/test-app.ts:41:10 - error TS7006: Parameter '_req' implicitly has an 'any' type.

41 app.use((_req, res, next) => {
            ~~~~

server/test-app.ts:41:16 - error TS7006: Parameter 'res' implicitly has an 'any' type.

41 app.use((_req, res, next) => {
                  ~~~

server/test-app.ts:41:21 - error TS7006: Parameter 'next' implicitly has an 'any' type.

41 app.use((_req, res, next) => {
                       ~~~~

server/test/stripe/stripe-issuing.test.ts:96:30 - error TS1361: 'StripeIssuingService' cannot be used as a value because it was imported using 'import type'.

96         issuingService = new StripeIssuingService();
                                ~~~~~~~~~~~~~~~~~~~~

  server/test/stripe/stripe-issuing.test.ts:2:15
    2 import type { StripeIssuingService, CardIssuanceRequest, CardControlsUpdate } from '../../services/stripeIssuingService.ts';
                    ~~~~~~~~~~~~~~~~~~~~
    'StripeIssuingService' was imported here.

server/test/stripe/stripe-issuing.test.ts:202:55 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../../stripe.js'?

202         const { authorizeTransaction } = await import('../../stripe');
                                                          ~~~~~~~~~~~~~~

server/test/stripe/stripe-webhooks.test.ts:5:19 - error TS1484: 'Application' is a type and must be imported using a type-only import when 'verbatimModuleSyntax' is enabled.

5 import express, { Application } from '../../express-augmentations.ts';
                    ~~~~~~~~~~~

server/test/stripe/stripe-webhooks.test.ts:16:13 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type 'NextHandleFunction' is not assignable to parameter of type 'PathParams'.

16     app.use(bodyParser.json());
               ~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:153:5
    153     <
            ~
    154         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    162         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    163     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/test/stripe/stripe-webhooks.test.ts:18:13 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type 'NextHandleFunction' is not assignable to parameter of type 'PathParams'.

18     app.use(bodyParser.raw({ type: 'application/json' }));
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:153:5
    153     <
            ~
    154         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    162         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    163     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/test/websocket/collaboration.test.ts:20:28 - error TS1361: 'WebSocket' cannot be used as a value because it was imported using 'import type'.

20             const ws = new WebSocket(`${baseUrl}/ws/collaboration?token=${token}`);
                              ~~~~~~~~~

  server/test/websocket/collaboration.test.ts:2:15
    2 import type { WebSocket } from 'ws';
                    ~~~~~~~~~
    'WebSocket' was imported here.

server/test/websocket/collaboration.test.ts:36:31 - error TS1361: 'CollaborationWebSocketServer' cannot be used as a value because it was imported using 'import type'.

36         collaborationWS = new CollaborationWebSocketServer(server);
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  server/test/websocket/collaboration.test.ts:6:15
    6 import type { CollaborationWebSocketServer } from '../../websocket.ts';
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    'CollaborationWebSocketServer' was imported here.

server/test/websocket/collaboration.test.ts:67:28 - error TS1361: 'WebSocket' cannot be used as a value because it was imported using 'import type'.

67             const ws = new WebSocket(`${baseUrl}/ws/collaboration?token=${invalidToken}`);
                              ~~~~~~~~~

  server/test/websocket/collaboration.test.ts:2:15
    2 import type { WebSocket } from 'ws';
                    ~~~~~~~~~
    'WebSocket' was imported here.

server/transformers/activity.transformer.ts:1:31 - error TS2307: Cannot find module '@shared/types/activity' or its corresponding type declarations.

1 import type { Activity } from '@shared/types/activity';
                                ~~~~~~~~~~~~~~~~~~~~~~~~

server/types/activity.ts:9:8 - error TS2307: Cannot find module '@shared/types/activity' or its corresponding type declarations.

9 } from '@shared/types/activity';
         ~~~~~~~~~~~~~~~~~~~~~~~~

server/types/activity.ts:20:18 - error TS2304: Cannot find name 'activityTypes'.

20     type: z.enum(activityTypes).optional(),
                    ~~~~~~~~~~~~~

server/types/activity.ts:21:20 - error TS2304: Cannot find name 'activityStatuses'.

21     status: z.enum(activityStatuses).default('pending'),
                      ~~~~~~~~~~~~~~~~

server/types/user.ts:5:27 - error TS2307: Cannot find module '@shared/types/auth/user' or its corresponding type declarations.

5 export type { User } from '@shared/types/auth/user';
                            ~~~~~~~~~~~~~~~~~~~~~~~~~

server/types/user.ts:6:33 - error TS2307: Cannot find module '@shared/types/auth/jwt' or its corresponding type declarations.

6 export type { JwtPayload } from '@shared/types/auth/jwt';
                                  ~~~~~~~~~~~~~~~~~~~~~~~~

server/utils/auth.ts:6:27 - error TS2307: Cannot find module '@shared/schema' or its corresponding type declarations.

6 import type { User } from '@shared/schema';
                            ~~~~~~~~~~~~~~~~

server/utils/authContext.ts:1:30 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request } from '../../express-augmentations.ts';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/utils/errorHandler.ts:81:43 - error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

81 import type { AuthenticatedRequest } from '../src/types/express-types';
                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/utils/organizationHelpers.redundant.ts:1:30 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request } from '../../express-augmentations.ts';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/utils/response.ts:1:31 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Response } from '../../express-augmentations.ts';
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/utils/response.ts:2:56 - error TS2307: Cannot find module '@shared/types/api' or its corresponding type declarations.

2 import type { ApiResponse, PaginatedApiResponse } from '@shared/types/api';
                                                         ~~~~~~~~~~~~~~~~~~~

server/utils/routeHelpers.ts:1:70 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import type { Request, Response, NextFunction, RequestHandler } from '../../express-augmentations.ts';
                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/utils/routeHelpers.ts:7:13 - error TS7006: Parameter 'req' implicitly has an 'any' type.

7     return (req, res, next) => {
              ~~~

server/utils/routeHelpers.ts:7:18 - error TS7006: Parameter 'res' implicitly has an 'any' type.

7     return (req, res, next) => {
                   ~~~

server/utils/routeHelpers.ts:7:23 - error TS7006: Parameter 'next' implicitly has an 'any' type.

7     return (req, res, next) => {
                        ~~~~

server/utils/secureJwt.ts:6:15 - error TS2460: Module '"../types/jwt.js"' declares 'TokenPayload' locally, but it is exported as 'TokenType'.

6 import type { TokenPayload, TokenType, UserRole, VerifyTokenResult, AuthTokens, PasswordResetTokenResult } from '../types/jwt.js';
                ~~~~~~~~~~~~

  server/types/jwt.d.ts:7:3
    7   TokenPayload
        ~~~~~~~~~~~~
    'TokenPayload' is declared here.

server/utils/secureJwt.ts:6:40 - error TS2305: Module '"../types/jwt.js"' has no exported member 'UserRole'.

6 import type { TokenPayload, TokenType, UserRole, VerifyTokenResult, AuthTokens, PasswordResetTokenResult } from '../types/jwt.js';
                                         ~~~~~~~~

server/utils/validation.new.ts:2:45 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

2 import type { Response, NextFunction } from '../../express-augmentations.ts';
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/utils/validation.ts:2:45 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

2 import type { Response, NextFunction } from '../../express-augmentations.ts';
                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/vite.ts:1:39 - error TS2307: Cannot find module '../../express-augmentations.ts' or its corresponding type declarations.

1 import express, { type Express } from '../../express-augmentations.ts';
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

server/vite.ts:20:50 - error TS6059: File 'C:/Users/Jonas/Desktop/NestMapRepo/vite.config.ts' is not under 'rootDir' 'C:/Users/Jonas/Desktop/NestMapRepo/server'. 'rootDir' is expected to contain all source files.
  File is ECMAScript module because 'C:/Users/Jonas/Desktop/NestMapRepo/package.json' has field "type" with value "module"

20     const { default: viteConfig } = await import('../vite.config.js');
                                                    ~~~~~~~~~~~~~~~~~~~

server/vite.ts:20:50 - error TS6307: File 'C:/Users/Jonas/Desktop/NestMapRepo/vite.config.ts' is not listed within the file list of project 'C:/Users/Jonas/Desktop/NestMapRepo/server/tsconfig.json'. Projects must list all files or use an 'include' pattern.
  File is ECMAScript module because 'C:/Users/Jonas/Desktop/NestMapRepo/package.json' has field "type" with value "module"

20     const { default: viteConfig } = await import('../vite.config.js');
                                                    ~~~~~~~~~~~~~~~~~~~

server/vite.ts:40:25 - error TS7006: Parameter 'req' implicitly has an 'any' type.

40     app.use("*", async (req, res, next) => {
                           ~~~

server/vite.ts:40:30 - error TS7006: Parameter 'res' implicitly has an 'any' type.

40     app.use("*", async (req, res, next) => {
                                ~~~

server/vite.ts:40:35 - error TS7006: Parameter 'next' implicitly has an 'any' type.

40     app.use("*", async (req, res, next) => {
                                     ~~~~

server/vite.ts:64:19 - error TS7006: Parameter '_req' implicitly has an 'any' type.

64     app.use("*", (_req, res) => {
                     ~~~~

server/vite.ts:64:25 - error TS7006: Parameter 'res' implicitly has an 'any' type.

64     app.use("*", (_req, res) => {
                           ~~~

shared/interfaces.ts:130:26 - error TS2834: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

130 import { UserRole } from './types/auth';
                             ~~~~~~~~~~~~~~

shared/superadmin-schema.ts:1:15 - error TS2835: Relative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../server/db/superadminSchema.js'?

1 export * from '../server/db/superadminSchema';
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
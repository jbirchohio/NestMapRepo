Fully Complete Superadmin Dashboard for NestMap

‚ö†Ô∏è DO NOT leave placeholders or ‚Äútoast‚Äù messages without completing functionality. Do not generate stubs or UI-only buttons. All backend routes must be real and connected. Every action must be wired from UI ‚Üí API ‚Üí database.

‚∏ª

Build a fully functional Superadmin Dashboard for a SaaS platform called NestMap, designed for enterprise buyers and white-label clients. You must implement every part completely and fully functional ‚Äî no mock handlers or empty functions.

üîß Stack
	‚Ä¢	Frontend: React 18 + Vite + Tailwind CSS
	‚Ä¢	Backend: Express.js + TypeScript
	‚Ä¢	Database: PostgreSQL (snake_case schema)
	‚Ä¢	Middleware: Automatically transform all API responses from snake_case to camelCase

‚∏ª

üîê Roles & Middleware
	‚Ä¢	Add user roles: superadmin_owner, superadmin_staff, superadmin_auditor, admin, member
	‚Ä¢	Create requireSuperadmin() middleware that checks user role
	‚Ä¢	Ensure req.user is injected into every request via session or auth middleware

‚∏ª

üîÅ API Endpoints (Implement Completely)
	‚Ä¢	All endpoints must be fully connected to database, return real data, and be error-handled

Orgs & Users
	‚Ä¢	GET /api/superadmin/organizations
	‚Ä¢	GET /api/superadmin/users
	‚Ä¢	POST /api/superadmin/users/:id/deactivate
	‚Ä¢	POST /api/superadmin/orgs/:id/disable
	‚Ä¢	POST /api/superadmin/roles (promote/demote superadmins)

Audit & Security
	‚Ä¢	GET /api/superadmin/activity (superadmin actions)
	‚Ä¢	GET /api/superadmin/sessions (active sessions across orgs)
	‚Ä¢	POST /api/superadmin/logout/:sessionId

Trip/AI Logs
	‚Ä¢	GET /api/superadmin/trip-logs
	‚Ä¢	GET /api/superadmin/ai-usage
	‚Ä¢	POST /api/superadmin/impersonate (store in session)

Billing & Plans
	‚Ä¢	GET /api/superadmin/billing
	‚Ä¢	POST /api/superadmin/billing/override
	‚Ä¢	GET /api/superadmin/invoices

Feature Flags
	‚Ä¢	GET /api/superadmin/flags
	‚Ä¢	POST /api/superadmin/flags/:orgId

White Label Tools
	‚Ä¢	GET /api/superadmin/white-label
	‚Ä¢	POST /api/superadmin/orgs/:id/theme

Exports & Compliance
	‚Ä¢	POST /api/superadmin/export/org/:id
	‚Ä¢	POST /api/superadmin/delete/user/:id

Job/Webhook Utilities
	‚Ä¢	GET /api/superadmin/jobs
	‚Ä¢	POST /api/superadmin/jobs/:id/retry
	‚Ä¢	POST /api/superadmin/webhooks/test

‚∏ª

üíª Frontend Pages ‚Äî Must Be Fully Functional
	‚Ä¢	Use fetch or axios to call real endpoints
	‚Ä¢	All buttons must call working API routes
	‚Ä¢	All tables must load real backend data
	‚Ä¢	Show full UI for error/success states
	‚Ä¢	DO NOT leave toast messages without actions

Dashboard /superadmin

Implement:
	‚Ä¢	Organizations Table
	‚Ä¢	Users Table
	‚Ä¢	Activity Log
	‚Ä¢	Trip Monitor
	‚Ä¢	AI Usage Graph
	‚Ä¢	Feature Flags Toggle
	‚Ä¢	White Label Branding Editor
	‚Ä¢	Metrics Dashboard (MRR, churn, etc.)
	‚Ä¢	Active Session Viewer
	‚Ä¢	Export & Compliance Panel
	‚Ä¢	Job Queue & Retry Tools

‚∏ª

üß™ Seed Data & Mock Records
	‚Ä¢	Seed orgs, users, trips, AI logs, audit records, jobs
	‚Ä¢	Use realistic dummy data with clear IDs and timestamps

‚∏ª

‚úÖ Delivery Requirements
	‚Ä¢	Return full file structure (frontend + backend folders)
	‚Ä¢	Include routes/, controllers/, middleware/, pages/, components/
	‚Ä¢	Use TypeScript interfaces and zod validation
	‚Ä¢	DO NOT skip wiring buttons or forms to backend
	‚Ä¢	All features must be verifiably functional ‚Äî not stubbed

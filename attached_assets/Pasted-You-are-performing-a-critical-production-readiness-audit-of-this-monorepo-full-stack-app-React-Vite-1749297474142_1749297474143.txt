You are performing a critical production-readiness audit of this monorepo full-stack app (React/Vite + Express + TypeScript). This is a SaaS platform called NestMap with paid plans, role-based access, JWT auth, and white-label support.

‚úÖ DO NOT confirm anything as ‚Äúworking‚Äù unless you verify it in the actual codebase.

üîÅ Check ALL of the following with file-level precision:
	1.	Are there any documented features in /docs or README.md that are missing, stubbed, or broken in actual code? List each one with a suggested fix.
	2.	Does JWT-based authentication enforce role-based access in both frontend and backend correctly? Check if:

	‚Ä¢	JWT is verified on the server (/server)
	‚Ä¢	Frontend honors permissions (e.g., can‚Äôt access admin tools without proper role)
	‚Ä¢	The middleware enforces camelCase ‚Üî snake_case transformation for DB

	3.	Do all routes and API handlers in /server/routes/ match the declared API spec in /docs/API_REFERENCE_GUIDE.md?
	4.	Are there any components, hooks, pages, or utils in /client that are unused or never imported?
	5.	Are there any .env variables referenced in code that aren‚Äôt listed in .env.example?
	6.	Are all frontend components error-boundaried and do they have fallback states (e.g. for loading, error, empty)?
	7.	Does the white label feature work as described ‚Äî including branding, domain overrides, and tier restrictions? Check for:

	‚Ä¢	Plan enforcement
	‚Ä¢	Role verification
	‚Ä¢	UI visibility for branding settings

	8.	Are there test files for key business logic? List any high-value logic that is missing tests and recommend filenames.
	9.	Does the UnifiedDashboard respond dynamically to role type (agency, corporate) without duplicating layouts?
	10.	Are there any console.log, TODO, or commented legacy files that should be cleaned before production?

‚ùó Assume the developer is preparing to sell this SaaS platform for $1M ‚Äî you are not auditing for MVP; you are auditing for production acquisition.

‚∏ª

üß† Bonus: Post-Audit Command

After it runs, follow up with:

‚úÖ For each ‚Äúlooks good‚Äù claim, please show me:
	‚Ä¢	The file(s) where it verified that feature exists
	‚Ä¢	The exact function, route, or JSX element used
